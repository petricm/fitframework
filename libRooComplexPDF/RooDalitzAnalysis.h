/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
 * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/

#ifndef ROODALITZANALYSIS
#define ROODALITZANALYSIS

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
#include "TGraph2D.h"

/**
 * @brief enum with different acceptance functions
 *
 * 0 = Uniform over phase space
 * 1 = 2D binned efficiency / histogram
 * 2 = 2D fitted efficiency
 */
enum EFFICIENCY_FUNCTION { FLAT = 0, BIN_2D = 1, FIT_2D = 2};

double GetEff(const double mass_AB, const double mass_BC, EFFICIENCY_FUNCTION value);

static TGraph2D *efficiency_graph_2D;

// forward declarations
template <class T>
class CacheIntegrator;
class DalitzAnalysisCoreCachedIntegral;
class DalitzAnalysisNormCachedIntegral;
class DalitzAnalysisRealCachedIntegral;
class DalitzAnalysisImagCachedIntegral;


struct DAI_Dalitz_Model_parameters {
    double m_r_1;
    double m_a_2;
    double m_r_2;
    double m_cutoff_2;
    double m_r_3;
    double m_r_4;
    double m_r_5;
    double m_r_6;
    double m_a_7;
    double m_r_7;
    double m_cutoff_7;
};

struct DAI_PDG_constants {
	double m_Pi0;
	double m_Pi;
	double m_K;
	double m_B0;
};


struct DAI_CacheIntegrators_2D {
	CacheIntegrator<DalitzAnalysisNormCachedIntegral> *norm_cache_integrator;
	CacheIntegrator<DalitzAnalysisRealCachedIntegral> *real_cache_integrator;
	CacheIntegrator<DalitzAnalysisImagCachedIntegral> *imag_cache_integrator;
};



class RooDalitzAnalysis : public RooAbsPdf {
public:
	RooDalitzAnalysis() : m_Pi0(0), m_Pi(0), m_K(0), m_B0(0), m_efficiency_function(FLAT),
    m_r_1(0), m_a_2(0), m_r_2(0), m_cutoff_2(0), m_r_3(0), m_r_4(0), m_r_5(0), m_r_6(0), m_a_7(0), m_r_7(0), m_cutoff_7(0),
    m_norm_cache_integrator(NULL), m_real_cache_integrator(NULL),
    m_imag_cache_integrator(NULL) {
	};
	RooDalitzAnalysis(const char *name, const char *title,
                      RooAbsReal& _mass_AB,
                      RooAbsReal& _mass_BC,
                      
                      RooAbsReal& _mass_1,
                      RooAbsReal& _width_1,
                      
                      RooAbsReal& _mass_2,
                      RooAbsReal& _width_2,
                      
                      RooAbsReal& _mass_3,
                      RooAbsReal& _width_3,
                      
                      RooAbsReal& _mass_4,
                      RooAbsReal& _width_4,
                      
                      RooAbsReal& _mass_5,
                      RooAbsReal& _width_5,
                      
                      RooAbsReal& _mass_6,
                      RooAbsReal& _width_6,
                      
                      RooAbsReal& _mass_7,
                      RooAbsReal& _width_7,
                      
                      RooAbsReal& _amp_1,
                      RooAbsReal& _phase_1,
                      RooAbsReal& _amp_2,
                      RooAbsReal& _phase_2,
                      RooAbsReal& _amp_3,
                      RooAbsReal& _phase_3,
                      RooAbsReal& _amp_4,
                      RooAbsReal& _phase_4,
                      RooAbsReal& _amp_5,
                      RooAbsReal& _phase_5,
                      RooAbsReal& _amp_6,
                      RooAbsReal& _phase_6,
                      RooAbsReal& _amp_7,
                      RooAbsReal& _phase_7,
                      RooAbsReal& _amp_8,
                      RooAbsReal& _phase_8,
                      
                      EFFICIENCY_FUNCTION _efficiency_function,
                      DAI_PDG_constants _s_PDG,
                      DAI_Dalitz_Model_parameters _s_DM_pars,
                      DAI_CacheIntegrators_2D _s_2D);
	RooDalitzAnalysis(const RooDalitzAnalysis& other, const char* name=0);
	virtual TObject* clone(const char* newname) const {
		return new RooDalitzAnalysis(*this,newname);
	}
	inline virtual ~RooDalitzAnalysis() { };
    
	virtual Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const;
	virtual Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const;
    
protected:
    
    RooRealProxy mass_AB;
    RooRealProxy mass_BC;
    
    RooRealProxy mass_1;
    RooRealProxy width_1;
    
    RooRealProxy mass_2;
    RooRealProxy width_2;
    
    RooRealProxy mass_3;
    RooRealProxy width_3;
    
    RooRealProxy mass_4;
    RooRealProxy width_4;
    
    RooRealProxy mass_5;
    RooRealProxy width_5;
    
    RooRealProxy mass_6;
    RooRealProxy width_6;
    
    RooRealProxy mass_7;
    RooRealProxy width_7;
    
    RooRealProxy amp_1;
    RooRealProxy phase_1;
    RooRealProxy amp_2;
    RooRealProxy phase_2;
    RooRealProxy amp_3;
    RooRealProxy phase_3;
    RooRealProxy amp_4;
    RooRealProxy phase_4;
    RooRealProxy amp_5;
    RooRealProxy phase_5;
    RooRealProxy amp_6;
    RooRealProxy phase_6;
    RooRealProxy amp_7;
    RooRealProxy phase_7;
    RooRealProxy amp_8;
    RooRealProxy phase_8;
    
	const double m_Pi0;
	const double m_Pi;
	const double m_K;
	const double m_B0;
    
	const EFFICIENCY_FUNCTION m_efficiency_function;
    const double m_r_1;
    const double m_a_2;
    const double m_r_2;
    const double m_cutoff_2;
    const double m_r_3;
    const double m_r_4;
    const double m_r_5;
    const double m_r_6;
    const double m_a_7;
    const double m_r_7;
    const double m_cutoff_7;
    
	//! in begin of comments prevents ROOT to try to serialize it...
	CacheIntegrator<DalitzAnalysisNormCachedIntegral> *m_norm_cache_integrator; //! don't serialize
	CacheIntegrator<DalitzAnalysisRealCachedIntegral> *m_real_cache_integrator; //! don't serialize
	CacheIntegrator<DalitzAnalysisImagCachedIntegral> *m_imag_cache_integrator; //! don't serialize
    
	Double_t evaluate() const ;
    
private:
    
	ClassDef(RooDalitzAnalysis,1) // Your description goes here...
};

#endif
