/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "RooCategoryPdf.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

ClassImp(RooCategoryPdf) 

RooCategoryPdf::RooCategoryPdf(const char *name, const char *title,
		RooAbsCategory& _c) :
		RooAbsPdf(name,title),
		c("c","c",this,_c) {
}


RooCategoryPdf::RooCategoryPdf(const RooCategoryPdf& other, const char* name) :
		   RooAbsPdf(other,name),
		   c("c",this,other.c) {
}

Double_t RooCategoryPdf::evaluate() const {
	return 1.0;
}

Int_t RooCategoryPdf::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* /*rangeName*/) const {
	if (matchArgs(allVars, analVars, c))
		return 1;
	return 0;
}

Double_t RooCategoryPdf::analyticalIntegral(Int_t code, const char* /*rangeName*/ ) const {
	if (code == 1) {
		return c.arg().numTypes();
	}
	return 1.0;
}




