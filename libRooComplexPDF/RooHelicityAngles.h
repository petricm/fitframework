/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
 * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/

#ifndef ROOHELICITYANGLES
#define ROOHELICITYANGLES

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"

class RooHelicityAngles : public RooAbsPdf {
public:
	RooHelicityAngles() {} ;
	RooHelicityAngles(const char *name, const char *title,
			RooAbsReal& _phi,
			RooAbsReal& _cos_th1,
			RooAbsReal& _cos_th2,
			RooAbsReal& _J1,
			RooAbsReal& _J2,
			RooAbsReal& _amp_m,
			RooAbsReal& _phase_m,
			RooAbsReal& _amp_0,
			RooAbsReal& _phase_0,
			RooAbsReal& _amp_p,
			RooAbsReal& _phase_p);
	RooHelicityAngles(const RooHelicityAngles& other, const char* name=0);
	virtual TObject* clone(const char* newname) const {
		return new RooHelicityAngles(*this,newname);
	}
	inline virtual ~RooHelicityAngles() { };

protected:

	RooRealProxy phi;
	RooRealProxy cos_th1;
	RooRealProxy cos_th2;
	RooRealProxy J1;
	RooRealProxy J2;
	RooRealProxy amp_m;
	RooRealProxy phase_m;
	RooRealProxy amp_0;
	RooRealProxy phase_0;
	RooRealProxy amp_p;
	RooRealProxy phase_p;

	Double_t evaluate() const;

private:

	ClassDef(RooHelicityAngles,1) // Your description goes here...
};

#endif
