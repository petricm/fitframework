/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
 * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/

#ifndef ROODALITZXSD
#define ROODALITZXSD

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"

class RooDalitzXsd : public RooAbsPdf {
public:
	RooDalitzXsd() :  comb(0), m1(0), m2(0), m3(0), mM(0) {} ;
	RooDalitzXsd(const char *name, const char *title,
			RooAbsReal& _m12,
			RooAbsReal& _m23,
			RooAbsReal& _mean1,
			RooAbsReal& _mean2,
            RooAbsReal& _sigma1,
			RooAbsReal& _sigma2,
			RooAbsReal& _border,
            RooAbsReal& _c1,
            RooAbsReal& _c2,
            RooAbsReal& _c3,
            RooAbsReal& _c4,
            int _comb,
			double _m1,
			double _m2,
			double _m3,
			double _mM);
	RooDalitzXsd(const RooDalitzXsd& other, const char* name=0) ;
	virtual TObject* clone(const char* newname) const { return new RooDalitzXsd(*this,newname); }
	inline virtual ~RooDalitzXsd() { }
    
    virtual Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const;
	virtual Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const;
    
protected:

	RooRealProxy m12;
	RooRealProxy m23;
	RooRealProxy mean1;
	RooRealProxy mean2;
	RooRealProxy sigma1;
	RooRealProxy sigma2;
	RooRealProxy border;
	RooRealProxy c1;
	RooRealProxy c2;
	RooRealProxy c3;
	RooRealProxy c4;
    const int comb;
	const double m1;
	const double m2;
	const double m3;
	const double mM;

	Double_t evaluate() const;

private:

	ClassDef(RooDalitzXsd,1) // Your description goes here...
};

#endif

