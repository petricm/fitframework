/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "RooStudentsTDistribution.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 
#include "libComplexPDF/libComplexPDF.h"

ClassImp(RooStudentsTDistribution) 

RooStudentsTDistribution::RooStudentsTDistribution(const char *name, const char *title,
		RooAbsReal& _x,
		RooAbsReal& _mu,
		RooAbsReal& _sigma,
		RooAbsReal& _nu) :
		RooAbsPdf(name,title),
		x("x","x",this,_x),
		mu("mu","mu",this,_mu),
		sigma("sigma","sigma",this,_sigma),
		nu("nu","nu",this,_nu) {
}

RooStudentsTDistribution::RooStudentsTDistribution(const RooStudentsTDistribution& other, const char* name) :
		RooAbsPdf(other,name),
		x("x",this,other.x),
		mu("mu",this,other.mu),
		sigma("sigma",this,other.sigma),
		nu("nu",this,other.nu){
}

Double_t RooStudentsTDistribution::evaluate() const {
	double lambda = 1.0/(sigma*sigma);
	return ComplexPDF::StudentsTDistribution(x,mu,lambda,nu);
}

Double_t RooStudentsTDistribution::get_mean() const {
	double lambda = 1.0/(sigma*sigma);
	return ComplexPDF::StudentsTDistribution_GetMean(mu,lambda,nu);
}

Double_t RooStudentsTDistribution::get_variance() const {
	double lambda = 1.0/(sigma*sigma);
	return ComplexPDF::StudentsTDistribution_GetVariance(mu,lambda,nu);
}
