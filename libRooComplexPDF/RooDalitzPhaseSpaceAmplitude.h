/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
 * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/

#ifndef ROODALITZPHASESPACEAMPLITUDE
#define ROODALITZPHASESPACEAMPLITUDE

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"

class RooDalitzPhaseSpaceAmplitude : public RooAbsPdf {
public:
	RooDalitzPhaseSpaceAmplitude() : m1(0), m2(0), m3(0), mM(0) {} ;
	RooDalitzPhaseSpaceAmplitude(const char *name, const char *title,
			RooAbsReal& _m12,
			RooAbsReal& _m23,
			double _m1,
			double _m2,
			double _m3,
			double _mM);
	RooDalitzPhaseSpaceAmplitude(const RooDalitzPhaseSpaceAmplitude& other, const char* name=0) ;
	virtual TObject* clone(const char* newname) const { return new RooDalitzPhaseSpaceAmplitude(*this,newname); }
	inline virtual ~RooDalitzPhaseSpaceAmplitude() { }
    
    virtual Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const;
	virtual Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const;

protected:

	RooRealProxy m12;
	RooRealProxy m23;
	const double m1;
	const double m2;
	const double m3;
	const double mM;

	Double_t evaluate() const ;

private:

	ClassDef(RooDalitzPhaseSpaceAmplitude,1) // Your description goes here...
};

#endif
