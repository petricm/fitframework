//
// File generated by rootcint at Fri Feb 14 20:10:21 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME libRooComplexPDFdIRooComplexPDF
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "RooComplexPDF.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void RooRelativisticSpinBreitWigner_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooRelativisticSpinBreitWigner(void *p = 0);
   static void *newArray_RooRelativisticSpinBreitWigner(Long_t size, void *p);
   static void delete_RooRelativisticSpinBreitWigner(void *p);
   static void deleteArray_RooRelativisticSpinBreitWigner(void *p);
   static void destruct_RooRelativisticSpinBreitWigner(void *p);
   static void streamer_RooRelativisticSpinBreitWigner(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooRelativisticSpinBreitWigner*)
   {
      ::RooRelativisticSpinBreitWigner *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooRelativisticSpinBreitWigner >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooRelativisticSpinBreitWigner", ::RooRelativisticSpinBreitWigner::Class_Version(), "./libRooComplexPDF/RooRelativisticSpinBreitWigner.h", 16,
                  typeid(::RooRelativisticSpinBreitWigner), DefineBehavior(ptr, ptr),
                  &::RooRelativisticSpinBreitWigner::Dictionary, isa_proxy, 0,
                  sizeof(::RooRelativisticSpinBreitWigner) );
      instance.SetNew(&new_RooRelativisticSpinBreitWigner);
      instance.SetNewArray(&newArray_RooRelativisticSpinBreitWigner);
      instance.SetDelete(&delete_RooRelativisticSpinBreitWigner);
      instance.SetDeleteArray(&deleteArray_RooRelativisticSpinBreitWigner);
      instance.SetDestructor(&destruct_RooRelativisticSpinBreitWigner);
      instance.SetStreamerFunc(&streamer_RooRelativisticSpinBreitWigner);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooRelativisticSpinBreitWigner*)
   {
      return GenerateInitInstanceLocal((::RooRelativisticSpinBreitWigner*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooRelativisticSpinBreitWigner*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooBreitWignerTwoBodyPHSP_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooBreitWignerTwoBodyPHSP(void *p = 0);
   static void *newArray_RooBreitWignerTwoBodyPHSP(Long_t size, void *p);
   static void delete_RooBreitWignerTwoBodyPHSP(void *p);
   static void deleteArray_RooBreitWignerTwoBodyPHSP(void *p);
   static void destruct_RooBreitWignerTwoBodyPHSP(void *p);
   static void streamer_RooBreitWignerTwoBodyPHSP(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooBreitWignerTwoBodyPHSP*)
   {
      ::RooBreitWignerTwoBodyPHSP *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooBreitWignerTwoBodyPHSP >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooBreitWignerTwoBodyPHSP", ::RooBreitWignerTwoBodyPHSP::Class_Version(), "./libRooComplexPDF/RooBreitWignerTwoBodyPHSP.h", 16,
                  typeid(::RooBreitWignerTwoBodyPHSP), DefineBehavior(ptr, ptr),
                  &::RooBreitWignerTwoBodyPHSP::Dictionary, isa_proxy, 0,
                  sizeof(::RooBreitWignerTwoBodyPHSP) );
      instance.SetNew(&new_RooBreitWignerTwoBodyPHSP);
      instance.SetNewArray(&newArray_RooBreitWignerTwoBodyPHSP);
      instance.SetDelete(&delete_RooBreitWignerTwoBodyPHSP);
      instance.SetDeleteArray(&deleteArray_RooBreitWignerTwoBodyPHSP);
      instance.SetDestructor(&destruct_RooBreitWignerTwoBodyPHSP);
      instance.SetStreamerFunc(&streamer_RooBreitWignerTwoBodyPHSP);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooBreitWignerTwoBodyPHSP*)
   {
      return GenerateInitInstanceLocal((::RooBreitWignerTwoBodyPHSP*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooBreitWignerTwoBodyPHSP*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooBreitWignerTwoBodyPHSPEvtGen_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooBreitWignerTwoBodyPHSPEvtGen(void *p = 0);
   static void *newArray_RooBreitWignerTwoBodyPHSPEvtGen(Long_t size, void *p);
   static void delete_RooBreitWignerTwoBodyPHSPEvtGen(void *p);
   static void deleteArray_RooBreitWignerTwoBodyPHSPEvtGen(void *p);
   static void destruct_RooBreitWignerTwoBodyPHSPEvtGen(void *p);
   static void streamer_RooBreitWignerTwoBodyPHSPEvtGen(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooBreitWignerTwoBodyPHSPEvtGen*)
   {
      ::RooBreitWignerTwoBodyPHSPEvtGen *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooBreitWignerTwoBodyPHSPEvtGen >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooBreitWignerTwoBodyPHSPEvtGen", ::RooBreitWignerTwoBodyPHSPEvtGen::Class_Version(), "./libRooComplexPDF/RooBreitWignerTwoBodyPHSPEvtGen.h", 16,
                  typeid(::RooBreitWignerTwoBodyPHSPEvtGen), DefineBehavior(ptr, ptr),
                  &::RooBreitWignerTwoBodyPHSPEvtGen::Dictionary, isa_proxy, 0,
                  sizeof(::RooBreitWignerTwoBodyPHSPEvtGen) );
      instance.SetNew(&new_RooBreitWignerTwoBodyPHSPEvtGen);
      instance.SetNewArray(&newArray_RooBreitWignerTwoBodyPHSPEvtGen);
      instance.SetDelete(&delete_RooBreitWignerTwoBodyPHSPEvtGen);
      instance.SetDeleteArray(&deleteArray_RooBreitWignerTwoBodyPHSPEvtGen);
      instance.SetDestructor(&destruct_RooBreitWignerTwoBodyPHSPEvtGen);
      instance.SetStreamerFunc(&streamer_RooBreitWignerTwoBodyPHSPEvtGen);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooBreitWignerTwoBodyPHSPEvtGen*)
   {
      return GenerateInitInstanceLocal((::RooBreitWignerTwoBodyPHSPEvtGen*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooBreitWignerTwoBodyPHSPEvtGen*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooThreeBodyPhaseSpaceProjection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooThreeBodyPhaseSpaceProjection(void *p = 0);
   static void *newArray_RooThreeBodyPhaseSpaceProjection(Long_t size, void *p);
   static void delete_RooThreeBodyPhaseSpaceProjection(void *p);
   static void deleteArray_RooThreeBodyPhaseSpaceProjection(void *p);
   static void destruct_RooThreeBodyPhaseSpaceProjection(void *p);
   static void streamer_RooThreeBodyPhaseSpaceProjection(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooThreeBodyPhaseSpaceProjection*)
   {
      ::RooThreeBodyPhaseSpaceProjection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooThreeBodyPhaseSpaceProjection >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooThreeBodyPhaseSpaceProjection", ::RooThreeBodyPhaseSpaceProjection::Class_Version(), "./libRooComplexPDF/RooThreeBodyPhaseSpaceProjection.h", 16,
                  typeid(::RooThreeBodyPhaseSpaceProjection), DefineBehavior(ptr, ptr),
                  &::RooThreeBodyPhaseSpaceProjection::Dictionary, isa_proxy, 0,
                  sizeof(::RooThreeBodyPhaseSpaceProjection) );
      instance.SetNew(&new_RooThreeBodyPhaseSpaceProjection);
      instance.SetNewArray(&newArray_RooThreeBodyPhaseSpaceProjection);
      instance.SetDelete(&delete_RooThreeBodyPhaseSpaceProjection);
      instance.SetDeleteArray(&deleteArray_RooThreeBodyPhaseSpaceProjection);
      instance.SetDestructor(&destruct_RooThreeBodyPhaseSpaceProjection);
      instance.SetStreamerFunc(&streamer_RooThreeBodyPhaseSpaceProjection);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooThreeBodyPhaseSpaceProjection*)
   {
      return GenerateInitInstanceLocal((::RooThreeBodyPhaseSpaceProjection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooThreeBodyPhaseSpaceProjection*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooBifurStudentsTDistribution_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooBifurStudentsTDistribution(void *p = 0);
   static void *newArray_RooBifurStudentsTDistribution(Long_t size, void *p);
   static void delete_RooBifurStudentsTDistribution(void *p);
   static void deleteArray_RooBifurStudentsTDistribution(void *p);
   static void destruct_RooBifurStudentsTDistribution(void *p);
   static void streamer_RooBifurStudentsTDistribution(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooBifurStudentsTDistribution*)
   {
      ::RooBifurStudentsTDistribution *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooBifurStudentsTDistribution >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooBifurStudentsTDistribution", ::RooBifurStudentsTDistribution::Class_Version(), "./libRooComplexPDF/RooBifurStudentsTDistribution.h", 16,
                  typeid(::RooBifurStudentsTDistribution), DefineBehavior(ptr, ptr),
                  &::RooBifurStudentsTDistribution::Dictionary, isa_proxy, 0,
                  sizeof(::RooBifurStudentsTDistribution) );
      instance.SetNew(&new_RooBifurStudentsTDistribution);
      instance.SetNewArray(&newArray_RooBifurStudentsTDistribution);
      instance.SetDelete(&delete_RooBifurStudentsTDistribution);
      instance.SetDeleteArray(&deleteArray_RooBifurStudentsTDistribution);
      instance.SetDestructor(&destruct_RooBifurStudentsTDistribution);
      instance.SetStreamerFunc(&streamer_RooBifurStudentsTDistribution);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooBifurStudentsTDistribution*)
   {
      return GenerateInitInstanceLocal((::RooBifurStudentsTDistribution*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooBifurStudentsTDistribution*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooStudentsTDistribution_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooStudentsTDistribution(void *p = 0);
   static void *newArray_RooStudentsTDistribution(Long_t size, void *p);
   static void delete_RooStudentsTDistribution(void *p);
   static void deleteArray_RooStudentsTDistribution(void *p);
   static void destruct_RooStudentsTDistribution(void *p);
   static void streamer_RooStudentsTDistribution(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooStudentsTDistribution*)
   {
      ::RooStudentsTDistribution *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooStudentsTDistribution >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooStudentsTDistribution", ::RooStudentsTDistribution::Class_Version(), "./libRooComplexPDF/RooStudentsTDistribution.h", 16,
                  typeid(::RooStudentsTDistribution), DefineBehavior(ptr, ptr),
                  &::RooStudentsTDistribution::Dictionary, isa_proxy, 0,
                  sizeof(::RooStudentsTDistribution) );
      instance.SetNew(&new_RooStudentsTDistribution);
      instance.SetNewArray(&newArray_RooStudentsTDistribution);
      instance.SetDelete(&delete_RooStudentsTDistribution);
      instance.SetDeleteArray(&deleteArray_RooStudentsTDistribution);
      instance.SetDestructor(&destruct_RooStudentsTDistribution);
      instance.SetStreamerFunc(&streamer_RooStudentsTDistribution);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooStudentsTDistribution*)
   {
      return GenerateInitInstanceLocal((::RooStudentsTDistribution*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooStudentsTDistribution*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooFlatte_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooFlatte(void *p = 0);
   static void *newArray_RooFlatte(Long_t size, void *p);
   static void delete_RooFlatte(void *p);
   static void deleteArray_RooFlatte(void *p);
   static void destruct_RooFlatte(void *p);
   static void streamer_RooFlatte(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooFlatte*)
   {
      ::RooFlatte *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooFlatte >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooFlatte", ::RooFlatte::Class_Version(), "./libRooComplexPDF/RooFlatte.h", 16,
                  typeid(::RooFlatte), DefineBehavior(ptr, ptr),
                  &::RooFlatte::Dictionary, isa_proxy, 0,
                  sizeof(::RooFlatte) );
      instance.SetNew(&new_RooFlatte);
      instance.SetNewArray(&newArray_RooFlatte);
      instance.SetDelete(&delete_RooFlatte);
      instance.SetDeleteArray(&deleteArray_RooFlatte);
      instance.SetDestructor(&destruct_RooFlatte);
      instance.SetStreamerFunc(&streamer_RooFlatte);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooFlatte*)
   {
      return GenerateInitInstanceLocal((::RooFlatte*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooFlatte*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooLASS_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooLASS(void *p = 0);
   static void *newArray_RooLASS(Long_t size, void *p);
   static void delete_RooLASS(void *p);
   static void deleteArray_RooLASS(void *p);
   static void destruct_RooLASS(void *p);
   static void streamer_RooLASS(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooLASS*)
   {
      ::RooLASS *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooLASS >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooLASS", ::RooLASS::Class_Version(), "./libRooComplexPDF/RooLASS.h", 16,
                  typeid(::RooLASS), DefineBehavior(ptr, ptr),
                  &::RooLASS::Dictionary, isa_proxy, 0,
                  sizeof(::RooLASS) );
      instance.SetNew(&new_RooLASS);
      instance.SetNewArray(&newArray_RooLASS);
      instance.SetDelete(&delete_RooLASS);
      instance.SetDeleteArray(&deleteArray_RooLASS);
      instance.SetDestructor(&destruct_RooLASS);
      instance.SetStreamerFunc(&streamer_RooLASS);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooLASS*)
   {
      return GenerateInitInstanceLocal((::RooLASS*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooLASS*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooKPiMass_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooKPiMass(void *p = 0);
   static void *newArray_RooKPiMass(Long_t size, void *p);
   static void delete_RooKPiMass(void *p);
   static void deleteArray_RooKPiMass(void *p);
   static void destruct_RooKPiMass(void *p);
   static void streamer_RooKPiMass(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooKPiMass*)
   {
      ::RooKPiMass *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooKPiMass >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooKPiMass", ::RooKPiMass::Class_Version(), "./libRooComplexPDF/RooKPiMass.h", 16,
                  typeid(::RooKPiMass), DefineBehavior(ptr, ptr),
                  &::RooKPiMass::Dictionary, isa_proxy, 0,
                  sizeof(::RooKPiMass) );
      instance.SetNew(&new_RooKPiMass);
      instance.SetNewArray(&newArray_RooKPiMass);
      instance.SetDelete(&delete_RooKPiMass);
      instance.SetDeleteArray(&deleteArray_RooKPiMass);
      instance.SetDestructor(&destruct_RooKPiMass);
      instance.SetStreamerFunc(&streamer_RooKPiMass);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooKPiMass*)
   {
      return GenerateInitInstanceLocal((::RooKPiMass*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooKPiMass*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooHelicityAngles_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooHelicityAngles(void *p = 0);
   static void *newArray_RooHelicityAngles(Long_t size, void *p);
   static void delete_RooHelicityAngles(void *p);
   static void deleteArray_RooHelicityAngles(void *p);
   static void destruct_RooHelicityAngles(void *p);
   static void streamer_RooHelicityAngles(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooHelicityAngles*)
   {
      ::RooHelicityAngles *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooHelicityAngles >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooHelicityAngles", ::RooHelicityAngles::Class_Version(), "./libRooComplexPDF/RooHelicityAngles.h", 16,
                  typeid(::RooHelicityAngles), DefineBehavior(ptr, ptr),
                  &::RooHelicityAngles::Dictionary, isa_proxy, 0,
                  sizeof(::RooHelicityAngles) );
      instance.SetNew(&new_RooHelicityAngles);
      instance.SetNewArray(&newArray_RooHelicityAngles);
      instance.SetDelete(&delete_RooHelicityAngles);
      instance.SetDeleteArray(&deleteArray_RooHelicityAngles);
      instance.SetDestructor(&destruct_RooHelicityAngles);
      instance.SetStreamerFunc(&streamer_RooHelicityAngles);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooHelicityAngles*)
   {
      return GenerateInitInstanceLocal((::RooHelicityAngles*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooHelicityAngles*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooMassHelicityAngles_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooMassHelicityAngles(void *p = 0);
   static void *newArray_RooMassHelicityAngles(Long_t size, void *p);
   static void delete_RooMassHelicityAngles(void *p);
   static void deleteArray_RooMassHelicityAngles(void *p);
   static void destruct_RooMassHelicityAngles(void *p);
   static void streamer_RooMassHelicityAngles(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooMassHelicityAngles*)
   {
      ::RooMassHelicityAngles *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooMassHelicityAngles >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooMassHelicityAngles", ::RooMassHelicityAngles::Class_Version(), "./libRooComplexPDF/RooMassHelicityAngles.h", 101,
                  typeid(::RooMassHelicityAngles), DefineBehavior(ptr, ptr),
                  &::RooMassHelicityAngles::Dictionary, isa_proxy, 0,
                  sizeof(::RooMassHelicityAngles) );
      instance.SetNew(&new_RooMassHelicityAngles);
      instance.SetNewArray(&newArray_RooMassHelicityAngles);
      instance.SetDelete(&delete_RooMassHelicityAngles);
      instance.SetDeleteArray(&deleteArray_RooMassHelicityAngles);
      instance.SetDestructor(&destruct_RooMassHelicityAngles);
      instance.SetStreamerFunc(&streamer_RooMassHelicityAngles);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooMassHelicityAngles*)
   {
      return GenerateInitInstanceLocal((::RooMassHelicityAngles*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooMassHelicityAngles*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooVarianceGammaDistribution_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooVarianceGammaDistribution(void *p = 0);
   static void *newArray_RooVarianceGammaDistribution(Long_t size, void *p);
   static void delete_RooVarianceGammaDistribution(void *p);
   static void deleteArray_RooVarianceGammaDistribution(void *p);
   static void destruct_RooVarianceGammaDistribution(void *p);
   static void streamer_RooVarianceGammaDistribution(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooVarianceGammaDistribution*)
   {
      ::RooVarianceGammaDistribution *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooVarianceGammaDistribution >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooVarianceGammaDistribution", ::RooVarianceGammaDistribution::Class_Version(), "./libRooComplexPDF/RooVarianceGammaDistribution.h", 16,
                  typeid(::RooVarianceGammaDistribution), DefineBehavior(ptr, ptr),
                  &::RooVarianceGammaDistribution::Dictionary, isa_proxy, 0,
                  sizeof(::RooVarianceGammaDistribution) );
      instance.SetNew(&new_RooVarianceGammaDistribution);
      instance.SetNewArray(&newArray_RooVarianceGammaDistribution);
      instance.SetDelete(&delete_RooVarianceGammaDistribution);
      instance.SetDeleteArray(&deleteArray_RooVarianceGammaDistribution);
      instance.SetDestructor(&destruct_RooVarianceGammaDistribution);
      instance.SetStreamerFunc(&streamer_RooVarianceGammaDistribution);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooVarianceGammaDistribution*)
   {
      return GenerateInitInstanceLocal((::RooVarianceGammaDistribution*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooVarianceGammaDistribution*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooDalitzPhaseSpaceAmplitude_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooDalitzPhaseSpaceAmplitude(void *p = 0);
   static void *newArray_RooDalitzPhaseSpaceAmplitude(Long_t size, void *p);
   static void delete_RooDalitzPhaseSpaceAmplitude(void *p);
   static void deleteArray_RooDalitzPhaseSpaceAmplitude(void *p);
   static void destruct_RooDalitzPhaseSpaceAmplitude(void *p);
   static void streamer_RooDalitzPhaseSpaceAmplitude(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooDalitzPhaseSpaceAmplitude*)
   {
      ::RooDalitzPhaseSpaceAmplitude *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooDalitzPhaseSpaceAmplitude >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooDalitzPhaseSpaceAmplitude", ::RooDalitzPhaseSpaceAmplitude::Class_Version(), "./libRooComplexPDF/RooDalitzPhaseSpaceAmplitude.h", 16,
                  typeid(::RooDalitzPhaseSpaceAmplitude), DefineBehavior(ptr, ptr),
                  &::RooDalitzPhaseSpaceAmplitude::Dictionary, isa_proxy, 0,
                  sizeof(::RooDalitzPhaseSpaceAmplitude) );
      instance.SetNew(&new_RooDalitzPhaseSpaceAmplitude);
      instance.SetNewArray(&newArray_RooDalitzPhaseSpaceAmplitude);
      instance.SetDelete(&delete_RooDalitzPhaseSpaceAmplitude);
      instance.SetDeleteArray(&deleteArray_RooDalitzPhaseSpaceAmplitude);
      instance.SetDestructor(&destruct_RooDalitzPhaseSpaceAmplitude);
      instance.SetStreamerFunc(&streamer_RooDalitzPhaseSpaceAmplitude);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooDalitzPhaseSpaceAmplitude*)
   {
      return GenerateInitInstanceLocal((::RooDalitzPhaseSpaceAmplitude*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooDalitzPhaseSpaceAmplitude*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooDalitzCubicPolynomial_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooDalitzCubicPolynomial(void *p = 0);
   static void *newArray_RooDalitzCubicPolynomial(Long_t size, void *p);
   static void delete_RooDalitzCubicPolynomial(void *p);
   static void deleteArray_RooDalitzCubicPolynomial(void *p);
   static void destruct_RooDalitzCubicPolynomial(void *p);
   static void streamer_RooDalitzCubicPolynomial(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooDalitzCubicPolynomial*)
   {
      ::RooDalitzCubicPolynomial *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooDalitzCubicPolynomial >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooDalitzCubicPolynomial", ::RooDalitzCubicPolynomial::Class_Version(), "./libRooComplexPDF/RooDalitzCubicPolynomial.h", 16,
                  typeid(::RooDalitzCubicPolynomial), DefineBehavior(ptr, ptr),
                  &::RooDalitzCubicPolynomial::Dictionary, isa_proxy, 0,
                  sizeof(::RooDalitzCubicPolynomial) );
      instance.SetNew(&new_RooDalitzCubicPolynomial);
      instance.SetNewArray(&newArray_RooDalitzCubicPolynomial);
      instance.SetDelete(&delete_RooDalitzCubicPolynomial);
      instance.SetDeleteArray(&deleteArray_RooDalitzCubicPolynomial);
      instance.SetDestructor(&destruct_RooDalitzCubicPolynomial);
      instance.SetStreamerFunc(&streamer_RooDalitzCubicPolynomial);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooDalitzCubicPolynomial*)
   {
      return GenerateInitInstanceLocal((::RooDalitzCubicPolynomial*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooDalitzCubicPolynomial*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooDalitzCubicPolynomialSymmetric_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooDalitzCubicPolynomialSymmetric(void *p = 0);
   static void *newArray_RooDalitzCubicPolynomialSymmetric(Long_t size, void *p);
   static void delete_RooDalitzCubicPolynomialSymmetric(void *p);
   static void deleteArray_RooDalitzCubicPolynomialSymmetric(void *p);
   static void destruct_RooDalitzCubicPolynomialSymmetric(void *p);
   static void streamer_RooDalitzCubicPolynomialSymmetric(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooDalitzCubicPolynomialSymmetric*)
   {
      ::RooDalitzCubicPolynomialSymmetric *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooDalitzCubicPolynomialSymmetric >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooDalitzCubicPolynomialSymmetric", ::RooDalitzCubicPolynomialSymmetric::Class_Version(), "./libRooComplexPDF/RooDalitzCubicPolynomialSymmetric.h", 16,
                  typeid(::RooDalitzCubicPolynomialSymmetric), DefineBehavior(ptr, ptr),
                  &::RooDalitzCubicPolynomialSymmetric::Dictionary, isa_proxy, 0,
                  sizeof(::RooDalitzCubicPolynomialSymmetric) );
      instance.SetNew(&new_RooDalitzCubicPolynomialSymmetric);
      instance.SetNewArray(&newArray_RooDalitzCubicPolynomialSymmetric);
      instance.SetDelete(&delete_RooDalitzCubicPolynomialSymmetric);
      instance.SetDeleteArray(&deleteArray_RooDalitzCubicPolynomialSymmetric);
      instance.SetDestructor(&destruct_RooDalitzCubicPolynomialSymmetric);
      instance.SetStreamerFunc(&streamer_RooDalitzCubicPolynomialSymmetric);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooDalitzCubicPolynomialSymmetric*)
   {
      return GenerateInitInstanceLocal((::RooDalitzCubicPolynomialSymmetric*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooDalitzCubicPolynomialSymmetric*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooTwoBodyThresholdFunction_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooTwoBodyThresholdFunction(void *p = 0);
   static void *newArray_RooTwoBodyThresholdFunction(Long_t size, void *p);
   static void delete_RooTwoBodyThresholdFunction(void *p);
   static void deleteArray_RooTwoBodyThresholdFunction(void *p);
   static void destruct_RooTwoBodyThresholdFunction(void *p);
   static void streamer_RooTwoBodyThresholdFunction(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooTwoBodyThresholdFunction*)
   {
      ::RooTwoBodyThresholdFunction *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooTwoBodyThresholdFunction >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooTwoBodyThresholdFunction", ::RooTwoBodyThresholdFunction::Class_Version(), "./libRooComplexPDF/RooTwoBodyThresholdFunction.h", 16,
                  typeid(::RooTwoBodyThresholdFunction), DefineBehavior(ptr, ptr),
                  &::RooTwoBodyThresholdFunction::Dictionary, isa_proxy, 0,
                  sizeof(::RooTwoBodyThresholdFunction) );
      instance.SetNew(&new_RooTwoBodyThresholdFunction);
      instance.SetNewArray(&newArray_RooTwoBodyThresholdFunction);
      instance.SetDelete(&delete_RooTwoBodyThresholdFunction);
      instance.SetDeleteArray(&deleteArray_RooTwoBodyThresholdFunction);
      instance.SetDestructor(&destruct_RooTwoBodyThresholdFunction);
      instance.SetStreamerFunc(&streamer_RooTwoBodyThresholdFunction);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooTwoBodyThresholdFunction*)
   {
      return GenerateInitInstanceLocal((::RooTwoBodyThresholdFunction*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooTwoBodyThresholdFunction*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooMassHelicityAngles_TransformedBase_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooMassHelicityAngles_TransformedBase(void *p = 0);
   static void *newArray_RooMassHelicityAngles_TransformedBase(Long_t size, void *p);
   static void delete_RooMassHelicityAngles_TransformedBase(void *p);
   static void deleteArray_RooMassHelicityAngles_TransformedBase(void *p);
   static void destruct_RooMassHelicityAngles_TransformedBase(void *p);
   static void streamer_RooMassHelicityAngles_TransformedBase(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooMassHelicityAngles_TransformedBase*)
   {
      ::RooMassHelicityAngles_TransformedBase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooMassHelicityAngles_TransformedBase >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooMassHelicityAngles_TransformedBase", ::RooMassHelicityAngles_TransformedBase::Class_Version(), "./libRooComplexPDF/RooMassHelicityAngles_TransformedBase.h", 17,
                  typeid(::RooMassHelicityAngles_TransformedBase), DefineBehavior(ptr, ptr),
                  &::RooMassHelicityAngles_TransformedBase::Dictionary, isa_proxy, 0,
                  sizeof(::RooMassHelicityAngles_TransformedBase) );
      instance.SetNew(&new_RooMassHelicityAngles_TransformedBase);
      instance.SetNewArray(&newArray_RooMassHelicityAngles_TransformedBase);
      instance.SetDelete(&delete_RooMassHelicityAngles_TransformedBase);
      instance.SetDeleteArray(&deleteArray_RooMassHelicityAngles_TransformedBase);
      instance.SetDestructor(&destruct_RooMassHelicityAngles_TransformedBase);
      instance.SetStreamerFunc(&streamer_RooMassHelicityAngles_TransformedBase);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooMassHelicityAngles_TransformedBase*)
   {
      return GenerateInitInstanceLocal((::RooMassHelicityAngles_TransformedBase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooMassHelicityAngles_TransformedBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooMassHelicityAnglesCPV_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooMassHelicityAnglesCPV(void *p = 0);
   static void *newArray_RooMassHelicityAnglesCPV(Long_t size, void *p);
   static void delete_RooMassHelicityAnglesCPV(void *p);
   static void deleteArray_RooMassHelicityAnglesCPV(void *p);
   static void destruct_RooMassHelicityAnglesCPV(void *p);
   static void streamer_RooMassHelicityAnglesCPV(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooMassHelicityAnglesCPV*)
   {
      ::RooMassHelicityAnglesCPV *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooMassHelicityAnglesCPV >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooMassHelicityAnglesCPV", ::RooMassHelicityAnglesCPV::Class_Version(), "./libRooComplexPDF/RooMassHelicityAnglesCPV.h", 35,
                  typeid(::RooMassHelicityAnglesCPV), DefineBehavior(ptr, ptr),
                  &::RooMassHelicityAnglesCPV::Dictionary, isa_proxy, 0,
                  sizeof(::RooMassHelicityAnglesCPV) );
      instance.SetNew(&new_RooMassHelicityAnglesCPV);
      instance.SetNewArray(&newArray_RooMassHelicityAnglesCPV);
      instance.SetDelete(&delete_RooMassHelicityAnglesCPV);
      instance.SetDeleteArray(&deleteArray_RooMassHelicityAnglesCPV);
      instance.SetDestructor(&destruct_RooMassHelicityAnglesCPV);
      instance.SetStreamerFunc(&streamer_RooMassHelicityAnglesCPV);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooMassHelicityAnglesCPV*)
   {
      return GenerateInitInstanceLocal((::RooMassHelicityAnglesCPV*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooMassHelicityAnglesCPV*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooCutPdf_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooCutPdf(void *p = 0);
   static void *newArray_RooCutPdf(Long_t size, void *p);
   static void delete_RooCutPdf(void *p);
   static void deleteArray_RooCutPdf(void *p);
   static void destruct_RooCutPdf(void *p);
   static void streamer_RooCutPdf(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooCutPdf*)
   {
      ::RooCutPdf *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooCutPdf >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooCutPdf", ::RooCutPdf::Class_Version(), "./libRooComplexPDF/RooCutPdf.h", 16,
                  typeid(::RooCutPdf), DefineBehavior(ptr, ptr),
                  &::RooCutPdf::Dictionary, isa_proxy, 0,
                  sizeof(::RooCutPdf) );
      instance.SetNew(&new_RooCutPdf);
      instance.SetNewArray(&newArray_RooCutPdf);
      instance.SetDelete(&delete_RooCutPdf);
      instance.SetDeleteArray(&deleteArray_RooCutPdf);
      instance.SetDestructor(&destruct_RooCutPdf);
      instance.SetStreamerFunc(&streamer_RooCutPdf);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooCutPdf*)
   {
      return GenerateInitInstanceLocal((::RooCutPdf*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooCutPdf*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooChebychevCut_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooChebychevCut(void *p = 0);
   static void *newArray_RooChebychevCut(Long_t size, void *p);
   static void delete_RooChebychevCut(void *p);
   static void deleteArray_RooChebychevCut(void *p);
   static void destruct_RooChebychevCut(void *p);
   static void streamer_RooChebychevCut(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooChebychevCut*)
   {
      ::RooChebychevCut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooChebychevCut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooChebychevCut", ::RooChebychevCut::Class_Version(), "./libRooComplexPDF/RooChebychevCut.h", 25,
                  typeid(::RooChebychevCut), DefineBehavior(ptr, ptr),
                  &::RooChebychevCut::Dictionary, isa_proxy, 0,
                  sizeof(::RooChebychevCut) );
      instance.SetNew(&new_RooChebychevCut);
      instance.SetNewArray(&newArray_RooChebychevCut);
      instance.SetDelete(&delete_RooChebychevCut);
      instance.SetDeleteArray(&deleteArray_RooChebychevCut);
      instance.SetDestructor(&destruct_RooChebychevCut);
      instance.SetStreamerFunc(&streamer_RooChebychevCut);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooChebychevCut*)
   {
      return GenerateInitInstanceLocal((::RooChebychevCut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooChebychevCut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooCategoryPdf_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooCategoryPdf(void *p = 0);
   static void *newArray_RooCategoryPdf(Long_t size, void *p);
   static void delete_RooCategoryPdf(void *p);
   static void deleteArray_RooCategoryPdf(void *p);
   static void destruct_RooCategoryPdf(void *p);
   static void streamer_RooCategoryPdf(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooCategoryPdf*)
   {
      ::RooCategoryPdf *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooCategoryPdf >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooCategoryPdf", ::RooCategoryPdf::Class_Version(), "./libRooComplexPDF/RooCategoryPdf.h", 16,
                  typeid(::RooCategoryPdf), DefineBehavior(ptr, ptr),
                  &::RooCategoryPdf::Dictionary, isa_proxy, 0,
                  sizeof(::RooCategoryPdf) );
      instance.SetNew(&new_RooCategoryPdf);
      instance.SetNewArray(&newArray_RooCategoryPdf);
      instance.SetDelete(&delete_RooCategoryPdf);
      instance.SetDeleteArray(&deleteArray_RooCategoryPdf);
      instance.SetDestructor(&destruct_RooCategoryPdf);
      instance.SetStreamerFunc(&streamer_RooCategoryPdf);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooCategoryPdf*)
   {
      return GenerateInitInstanceLocal((::RooCategoryPdf*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooCategoryPdf*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooFlatteAndNonRes_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooFlatteAndNonRes(void *p = 0);
   static void *newArray_RooFlatteAndNonRes(Long_t size, void *p);
   static void delete_RooFlatteAndNonRes(void *p);
   static void deleteArray_RooFlatteAndNonRes(void *p);
   static void destruct_RooFlatteAndNonRes(void *p);
   static void streamer_RooFlatteAndNonRes(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooFlatteAndNonRes*)
   {
      ::RooFlatteAndNonRes *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooFlatteAndNonRes >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooFlatteAndNonRes", ::RooFlatteAndNonRes::Class_Version(), "./libRooComplexPDF/RooFlatteAndNonRes.h", 16,
                  typeid(::RooFlatteAndNonRes), DefineBehavior(ptr, ptr),
                  &::RooFlatteAndNonRes::Dictionary, isa_proxy, 0,
                  sizeof(::RooFlatteAndNonRes) );
      instance.SetNew(&new_RooFlatteAndNonRes);
      instance.SetNewArray(&newArray_RooFlatteAndNonRes);
      instance.SetDelete(&delete_RooFlatteAndNonRes);
      instance.SetDeleteArray(&deleteArray_RooFlatteAndNonRes);
      instance.SetDestructor(&destruct_RooFlatteAndNonRes);
      instance.SetStreamerFunc(&streamer_RooFlatteAndNonRes);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooFlatteAndNonRes*)
   {
      return GenerateInitInstanceLocal((::RooFlatteAndNonRes*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooFlatteAndNonRes*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooKKInterference_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooKKInterference(void *p = 0);
   static void *newArray_RooKKInterference(Long_t size, void *p);
   static void delete_RooKKInterference(void *p);
   static void deleteArray_RooKKInterference(void *p);
   static void destruct_RooKKInterference(void *p);
   static void streamer_RooKKInterference(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooKKInterference*)
   {
      ::RooKKInterference *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooKKInterference >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooKKInterference", ::RooKKInterference::Class_Version(), "./libRooComplexPDF/RooKKInterference.h", 30,
                  typeid(::RooKKInterference), DefineBehavior(ptr, ptr),
                  &::RooKKInterference::Dictionary, isa_proxy, 0,
                  sizeof(::RooKKInterference) );
      instance.SetNew(&new_RooKKInterference);
      instance.SetNewArray(&newArray_RooKKInterference);
      instance.SetDelete(&delete_RooKKInterference);
      instance.SetDeleteArray(&deleteArray_RooKKInterference);
      instance.SetDestructor(&destruct_RooKKInterference);
      instance.SetStreamerFunc(&streamer_RooKKInterference);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooKKInterference*)
   {
      return GenerateInitInstanceLocal((::RooKKInterference*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooKKInterference*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooKKInterferenceNorm_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooKKInterferenceNorm(void *p = 0);
   static void *newArray_RooKKInterferenceNorm(Long_t size, void *p);
   static void delete_RooKKInterferenceNorm(void *p);
   static void deleteArray_RooKKInterferenceNorm(void *p);
   static void destruct_RooKKInterferenceNorm(void *p);
   static void streamer_RooKKInterferenceNorm(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooKKInterferenceNorm*)
   {
      ::RooKKInterferenceNorm *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooKKInterferenceNorm >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooKKInterferenceNorm", ::RooKKInterferenceNorm::Class_Version(), "./libRooComplexPDF/RooKKInterferenceNorm.h", 18,
                  typeid(::RooKKInterferenceNorm), DefineBehavior(ptr, ptr),
                  &::RooKKInterferenceNorm::Dictionary, isa_proxy, 0,
                  sizeof(::RooKKInterferenceNorm) );
      instance.SetNew(&new_RooKKInterferenceNorm);
      instance.SetNewArray(&newArray_RooKKInterferenceNorm);
      instance.SetDelete(&delete_RooKKInterferenceNorm);
      instance.SetDeleteArray(&deleteArray_RooKKInterferenceNorm);
      instance.SetDestructor(&destruct_RooKKInterferenceNorm);
      instance.SetStreamerFunc(&streamer_RooKKInterferenceNorm);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooKKInterferenceNorm*)
   {
      return GenerateInitInstanceLocal((::RooKKInterferenceNorm*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooKKInterferenceNorm*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooKKInterferencePositive_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooKKInterferencePositive(void *p = 0);
   static void *newArray_RooKKInterferencePositive(Long_t size, void *p);
   static void delete_RooKKInterferencePositive(void *p);
   static void deleteArray_RooKKInterferencePositive(void *p);
   static void destruct_RooKKInterferencePositive(void *p);
   static void streamer_RooKKInterferencePositive(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooKKInterferencePositive*)
   {
      ::RooKKInterferencePositive *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooKKInterferencePositive >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooKKInterferencePositive", ::RooKKInterferencePositive::Class_Version(), "./libRooComplexPDF/RooKKInterferencePositive.h", 18,
                  typeid(::RooKKInterferencePositive), DefineBehavior(ptr, ptr),
                  &::RooKKInterferencePositive::Dictionary, isa_proxy, 0,
                  sizeof(::RooKKInterferencePositive) );
      instance.SetNew(&new_RooKKInterferencePositive);
      instance.SetNewArray(&newArray_RooKKInterferencePositive);
      instance.SetDelete(&delete_RooKKInterferencePositive);
      instance.SetDeleteArray(&deleteArray_RooKKInterferencePositive);
      instance.SetDestructor(&destruct_RooKKInterferencePositive);
      instance.SetStreamerFunc(&streamer_RooKKInterferencePositive);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooKKInterferencePositive*)
   {
      return GenerateInitInstanceLocal((::RooKKInterferencePositive*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooKKInterferencePositive*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooDalitzAnalysis_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooDalitzAnalysis(void *p = 0);
   static void *newArray_RooDalitzAnalysis(Long_t size, void *p);
   static void delete_RooDalitzAnalysis(void *p);
   static void deleteArray_RooDalitzAnalysis(void *p);
   static void destruct_RooDalitzAnalysis(void *p);
   static void streamer_RooDalitzAnalysis(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooDalitzAnalysis*)
   {
      ::RooDalitzAnalysis *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooDalitzAnalysis >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooDalitzAnalysis", ::RooDalitzAnalysis::Class_Version(), "./libRooComplexPDF/RooDalitzAnalysis.h", 69,
                  typeid(::RooDalitzAnalysis), DefineBehavior(ptr, ptr),
                  &::RooDalitzAnalysis::Dictionary, isa_proxy, 0,
                  sizeof(::RooDalitzAnalysis) );
      instance.SetNew(&new_RooDalitzAnalysis);
      instance.SetNewArray(&newArray_RooDalitzAnalysis);
      instance.SetDelete(&delete_RooDalitzAnalysis);
      instance.SetDeleteArray(&deleteArray_RooDalitzAnalysis);
      instance.SetDestructor(&destruct_RooDalitzAnalysis);
      instance.SetStreamerFunc(&streamer_RooDalitzAnalysis);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooDalitzAnalysis*)
   {
      return GenerateInitInstanceLocal((::RooDalitzAnalysis*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooDalitzAnalysis*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooThresholdFunction_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooThresholdFunction(void *p = 0);
   static void *newArray_RooThresholdFunction(Long_t size, void *p);
   static void delete_RooThresholdFunction(void *p);
   static void deleteArray_RooThresholdFunction(void *p);
   static void destruct_RooThresholdFunction(void *p);
   static void streamer_RooThresholdFunction(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooThresholdFunction*)
   {
      ::RooThresholdFunction *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooThresholdFunction >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooThresholdFunction", ::RooThresholdFunction::Class_Version(), "./libRooComplexPDF/RooThresholdFunction.h", 16,
                  typeid(::RooThresholdFunction), DefineBehavior(ptr, ptr),
                  &::RooThresholdFunction::Dictionary, isa_proxy, 0,
                  sizeof(::RooThresholdFunction) );
      instance.SetNew(&new_RooThresholdFunction);
      instance.SetNewArray(&newArray_RooThresholdFunction);
      instance.SetDelete(&delete_RooThresholdFunction);
      instance.SetDeleteArray(&deleteArray_RooThresholdFunction);
      instance.SetDestructor(&destruct_RooThresholdFunction);
      instance.SetStreamerFunc(&streamer_RooThresholdFunction);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooThresholdFunction*)
   {
      return GenerateInitInstanceLocal((::RooThresholdFunction*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooThresholdFunction*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooDalitzDelaunay_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooDalitzDelaunay(void *p = 0);
   static void *newArray_RooDalitzDelaunay(Long_t size, void *p);
   static void delete_RooDalitzDelaunay(void *p);
   static void deleteArray_RooDalitzDelaunay(void *p);
   static void destruct_RooDalitzDelaunay(void *p);
   static void streamer_RooDalitzDelaunay(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooDalitzDelaunay*)
   {
      ::RooDalitzDelaunay *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooDalitzDelaunay >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooDalitzDelaunay", ::RooDalitzDelaunay::Class_Version(), "./libRooComplexPDF/RooDalitzDelaunay.h", 17,
                  typeid(::RooDalitzDelaunay), DefineBehavior(ptr, ptr),
                  &::RooDalitzDelaunay::Dictionary, isa_proxy, 0,
                  sizeof(::RooDalitzDelaunay) );
      instance.SetNew(&new_RooDalitzDelaunay);
      instance.SetNewArray(&newArray_RooDalitzDelaunay);
      instance.SetDelete(&delete_RooDalitzDelaunay);
      instance.SetDeleteArray(&deleteArray_RooDalitzDelaunay);
      instance.SetDestructor(&destruct_RooDalitzDelaunay);
      instance.SetStreamerFunc(&streamer_RooDalitzDelaunay);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooDalitzDelaunay*)
   {
      return GenerateInitInstanceLocal((::RooDalitzDelaunay*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooDalitzDelaunay*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooDalitzAnalysisCPV_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooDalitzAnalysisCPV(void *p = 0);
   static void *newArray_RooDalitzAnalysisCPV(Long_t size, void *p);
   static void delete_RooDalitzAnalysisCPV(void *p);
   static void deleteArray_RooDalitzAnalysisCPV(void *p);
   static void destruct_RooDalitzAnalysisCPV(void *p);
   static void streamer_RooDalitzAnalysisCPV(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooDalitzAnalysisCPV*)
   {
      ::RooDalitzAnalysisCPV *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooDalitzAnalysisCPV >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooDalitzAnalysisCPV", ::RooDalitzAnalysisCPV::Class_Version(), "./libRooComplexPDF/RooDalitzAnalysisCPV.h", 38,
                  typeid(::RooDalitzAnalysisCPV), DefineBehavior(ptr, ptr),
                  &::RooDalitzAnalysisCPV::Dictionary, isa_proxy, 0,
                  sizeof(::RooDalitzAnalysisCPV) );
      instance.SetNew(&new_RooDalitzAnalysisCPV);
      instance.SetNewArray(&newArray_RooDalitzAnalysisCPV);
      instance.SetDelete(&delete_RooDalitzAnalysisCPV);
      instance.SetDeleteArray(&deleteArray_RooDalitzAnalysisCPV);
      instance.SetDestructor(&destruct_RooDalitzAnalysisCPV);
      instance.SetStreamerFunc(&streamer_RooDalitzAnalysisCPV);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooDalitzAnalysisCPV*)
   {
      return GenerateInitInstanceLocal((::RooDalitzAnalysisCPV*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooDalitzAnalysisCPV*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooDalitzGauss_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooDalitzGauss(void *p = 0);
   static void *newArray_RooDalitzGauss(Long_t size, void *p);
   static void delete_RooDalitzGauss(void *p);
   static void deleteArray_RooDalitzGauss(void *p);
   static void destruct_RooDalitzGauss(void *p);
   static void streamer_RooDalitzGauss(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooDalitzGauss*)
   {
      ::RooDalitzGauss *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooDalitzGauss >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooDalitzGauss", ::RooDalitzGauss::Class_Version(), "./libRooComplexPDF/RooDalitzGauss.h", 16,
                  typeid(::RooDalitzGauss), DefineBehavior(ptr, ptr),
                  &::RooDalitzGauss::Dictionary, isa_proxy, 0,
                  sizeof(::RooDalitzGauss) );
      instance.SetNew(&new_RooDalitzGauss);
      instance.SetNewArray(&newArray_RooDalitzGauss);
      instance.SetDelete(&delete_RooDalitzGauss);
      instance.SetDeleteArray(&deleteArray_RooDalitzGauss);
      instance.SetDestructor(&destruct_RooDalitzGauss);
      instance.SetStreamerFunc(&streamer_RooDalitzGauss);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooDalitzGauss*)
   {
      return GenerateInitInstanceLocal((::RooDalitzGauss*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooDalitzGauss*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooDalitzRelativisticSpinBreitWigner_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooDalitzRelativisticSpinBreitWigner(void *p = 0);
   static void *newArray_RooDalitzRelativisticSpinBreitWigner(Long_t size, void *p);
   static void delete_RooDalitzRelativisticSpinBreitWigner(void *p);
   static void deleteArray_RooDalitzRelativisticSpinBreitWigner(void *p);
   static void destruct_RooDalitzRelativisticSpinBreitWigner(void *p);
   static void streamer_RooDalitzRelativisticSpinBreitWigner(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooDalitzRelativisticSpinBreitWigner*)
   {
      ::RooDalitzRelativisticSpinBreitWigner *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooDalitzRelativisticSpinBreitWigner >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooDalitzRelativisticSpinBreitWigner", ::RooDalitzRelativisticSpinBreitWigner::Class_Version(), "./libRooComplexPDF/RooDalitzRelativisticSpinBreitWigner.h", 17,
                  typeid(::RooDalitzRelativisticSpinBreitWigner), DefineBehavior(ptr, ptr),
                  &::RooDalitzRelativisticSpinBreitWigner::Dictionary, isa_proxy, 0,
                  sizeof(::RooDalitzRelativisticSpinBreitWigner) );
      instance.SetNew(&new_RooDalitzRelativisticSpinBreitWigner);
      instance.SetNewArray(&newArray_RooDalitzRelativisticSpinBreitWigner);
      instance.SetDelete(&delete_RooDalitzRelativisticSpinBreitWigner);
      instance.SetDeleteArray(&deleteArray_RooDalitzRelativisticSpinBreitWigner);
      instance.SetDestructor(&destruct_RooDalitzRelativisticSpinBreitWigner);
      instance.SetStreamerFunc(&streamer_RooDalitzRelativisticSpinBreitWigner);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooDalitzRelativisticSpinBreitWigner*)
   {
      return GenerateInitInstanceLocal((::RooDalitzRelativisticSpinBreitWigner*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooDalitzRelativisticSpinBreitWigner*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooDalitzHist_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooDalitzHist(void *p = 0);
   static void *newArray_RooDalitzHist(Long_t size, void *p);
   static void delete_RooDalitzHist(void *p);
   static void deleteArray_RooDalitzHist(void *p);
   static void destruct_RooDalitzHist(void *p);
   static void streamer_RooDalitzHist(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooDalitzHist*)
   {
      ::RooDalitzHist *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooDalitzHist >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooDalitzHist", ::RooDalitzHist::Class_Version(), "./libRooComplexPDF/RooDalitzHist.h", 17,
                  typeid(::RooDalitzHist), DefineBehavior(ptr, ptr),
                  &::RooDalitzHist::Dictionary, isa_proxy, 0,
                  sizeof(::RooDalitzHist) );
      instance.SetNew(&new_RooDalitzHist);
      instance.SetNewArray(&newArray_RooDalitzHist);
      instance.SetDelete(&delete_RooDalitzHist);
      instance.SetDeleteArray(&deleteArray_RooDalitzHist);
      instance.SetDestructor(&destruct_RooDalitzHist);
      instance.SetStreamerFunc(&streamer_RooDalitzHist);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooDalitzHist*)
   {
      return GenerateInitInstanceLocal((::RooDalitzHist*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooDalitzHist*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooDalitzXsd_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooDalitzXsd(void *p = 0);
   static void *newArray_RooDalitzXsd(Long_t size, void *p);
   static void delete_RooDalitzXsd(void *p);
   static void deleteArray_RooDalitzXsd(void *p);
   static void destruct_RooDalitzXsd(void *p);
   static void streamer_RooDalitzXsd(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooDalitzXsd*)
   {
      ::RooDalitzXsd *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooDalitzXsd >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooDalitzXsd", ::RooDalitzXsd::Class_Version(), "./libRooComplexPDF/RooDalitzXsd.h", 16,
                  typeid(::RooDalitzXsd), DefineBehavior(ptr, ptr),
                  &::RooDalitzXsd::Dictionary, isa_proxy, 0,
                  sizeof(::RooDalitzXsd) );
      instance.SetNew(&new_RooDalitzXsd);
      instance.SetNewArray(&newArray_RooDalitzXsd);
      instance.SetDelete(&delete_RooDalitzXsd);
      instance.SetDeleteArray(&deleteArray_RooDalitzXsd);
      instance.SetDestructor(&destruct_RooDalitzXsd);
      instance.SetStreamerFunc(&streamer_RooDalitzXsd);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooDalitzXsd*)
   {
      return GenerateInitInstanceLocal((::RooDalitzXsd*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooDalitzXsd*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RooDalitzNovosibirsk_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooDalitzNovosibirsk(void *p = 0);
   static void *newArray_RooDalitzNovosibirsk(Long_t size, void *p);
   static void delete_RooDalitzNovosibirsk(void *p);
   static void deleteArray_RooDalitzNovosibirsk(void *p);
   static void destruct_RooDalitzNovosibirsk(void *p);
   static void streamer_RooDalitzNovosibirsk(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RooDalitzNovosibirsk*)
   {
      ::RooDalitzNovosibirsk *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooDalitzNovosibirsk >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooDalitzNovosibirsk", ::RooDalitzNovosibirsk::Class_Version(), "./libRooComplexPDF/RooDalitzNovosibirsk.h", 16,
                  typeid(::RooDalitzNovosibirsk), DefineBehavior(ptr, ptr),
                  &::RooDalitzNovosibirsk::Dictionary, isa_proxy, 0,
                  sizeof(::RooDalitzNovosibirsk) );
      instance.SetNew(&new_RooDalitzNovosibirsk);
      instance.SetNewArray(&newArray_RooDalitzNovosibirsk);
      instance.SetDelete(&delete_RooDalitzNovosibirsk);
      instance.SetDeleteArray(&deleteArray_RooDalitzNovosibirsk);
      instance.SetDestructor(&destruct_RooDalitzNovosibirsk);
      instance.SetStreamerFunc(&streamer_RooDalitzNovosibirsk);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RooDalitzNovosibirsk*)
   {
      return GenerateInitInstanceLocal((::RooDalitzNovosibirsk*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooDalitzNovosibirsk*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *RooRelativisticSpinBreitWigner::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooRelativisticSpinBreitWigner::Class_Name()
{
   return "RooRelativisticSpinBreitWigner";
}

//______________________________________________________________________________
const char *RooRelativisticSpinBreitWigner::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooRelativisticSpinBreitWigner*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooRelativisticSpinBreitWigner::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooRelativisticSpinBreitWigner*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooRelativisticSpinBreitWigner::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooRelativisticSpinBreitWigner*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooRelativisticSpinBreitWigner::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooRelativisticSpinBreitWigner*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooBreitWignerTwoBodyPHSP::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooBreitWignerTwoBodyPHSP::Class_Name()
{
   return "RooBreitWignerTwoBodyPHSP";
}

//______________________________________________________________________________
const char *RooBreitWignerTwoBodyPHSP::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooBreitWignerTwoBodyPHSP*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooBreitWignerTwoBodyPHSP::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooBreitWignerTwoBodyPHSP*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooBreitWignerTwoBodyPHSP::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooBreitWignerTwoBodyPHSP*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooBreitWignerTwoBodyPHSP::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooBreitWignerTwoBodyPHSP*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooBreitWignerTwoBodyPHSPEvtGen::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooBreitWignerTwoBodyPHSPEvtGen::Class_Name()
{
   return "RooBreitWignerTwoBodyPHSPEvtGen";
}

//______________________________________________________________________________
const char *RooBreitWignerTwoBodyPHSPEvtGen::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooBreitWignerTwoBodyPHSPEvtGen*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooBreitWignerTwoBodyPHSPEvtGen::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooBreitWignerTwoBodyPHSPEvtGen*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooBreitWignerTwoBodyPHSPEvtGen::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooBreitWignerTwoBodyPHSPEvtGen*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooBreitWignerTwoBodyPHSPEvtGen::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooBreitWignerTwoBodyPHSPEvtGen*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooThreeBodyPhaseSpaceProjection::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooThreeBodyPhaseSpaceProjection::Class_Name()
{
   return "RooThreeBodyPhaseSpaceProjection";
}

//______________________________________________________________________________
const char *RooThreeBodyPhaseSpaceProjection::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooThreeBodyPhaseSpaceProjection*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooThreeBodyPhaseSpaceProjection::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooThreeBodyPhaseSpaceProjection*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooThreeBodyPhaseSpaceProjection::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooThreeBodyPhaseSpaceProjection*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooThreeBodyPhaseSpaceProjection::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooThreeBodyPhaseSpaceProjection*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooBifurStudentsTDistribution::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooBifurStudentsTDistribution::Class_Name()
{
   return "RooBifurStudentsTDistribution";
}

//______________________________________________________________________________
const char *RooBifurStudentsTDistribution::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooBifurStudentsTDistribution*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooBifurStudentsTDistribution::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooBifurStudentsTDistribution*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooBifurStudentsTDistribution::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooBifurStudentsTDistribution*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooBifurStudentsTDistribution::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooBifurStudentsTDistribution*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooStudentsTDistribution::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooStudentsTDistribution::Class_Name()
{
   return "RooStudentsTDistribution";
}

//______________________________________________________________________________
const char *RooStudentsTDistribution::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooStudentsTDistribution*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooStudentsTDistribution::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooStudentsTDistribution*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooStudentsTDistribution::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooStudentsTDistribution*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooStudentsTDistribution::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooStudentsTDistribution*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooFlatte::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooFlatte::Class_Name()
{
   return "RooFlatte";
}

//______________________________________________________________________________
const char *RooFlatte::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooFlatte*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooFlatte::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooFlatte*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooFlatte::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooFlatte*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooFlatte::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooFlatte*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooLASS::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooLASS::Class_Name()
{
   return "RooLASS";
}

//______________________________________________________________________________
const char *RooLASS::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooLASS*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooLASS::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooLASS*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooLASS::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooLASS*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooLASS::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooLASS*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooKPiMass::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooKPiMass::Class_Name()
{
   return "RooKPiMass";
}

//______________________________________________________________________________
const char *RooKPiMass::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooKPiMass*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooKPiMass::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooKPiMass*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooKPiMass::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooKPiMass*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooKPiMass::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooKPiMass*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooHelicityAngles::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooHelicityAngles::Class_Name()
{
   return "RooHelicityAngles";
}

//______________________________________________________________________________
const char *RooHelicityAngles::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooHelicityAngles*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooHelicityAngles::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooHelicityAngles*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooHelicityAngles::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooHelicityAngles*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooHelicityAngles::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooHelicityAngles*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooMassHelicityAngles::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooMassHelicityAngles::Class_Name()
{
   return "RooMassHelicityAngles";
}

//______________________________________________________________________________
const char *RooMassHelicityAngles::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooMassHelicityAngles*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooMassHelicityAngles::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooMassHelicityAngles*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooMassHelicityAngles::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooMassHelicityAngles*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooMassHelicityAngles::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooMassHelicityAngles*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooVarianceGammaDistribution::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooVarianceGammaDistribution::Class_Name()
{
   return "RooVarianceGammaDistribution";
}

//______________________________________________________________________________
const char *RooVarianceGammaDistribution::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooVarianceGammaDistribution*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooVarianceGammaDistribution::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooVarianceGammaDistribution*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooVarianceGammaDistribution::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooVarianceGammaDistribution*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooVarianceGammaDistribution::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooVarianceGammaDistribution*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooDalitzPhaseSpaceAmplitude::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooDalitzPhaseSpaceAmplitude::Class_Name()
{
   return "RooDalitzPhaseSpaceAmplitude";
}

//______________________________________________________________________________
const char *RooDalitzPhaseSpaceAmplitude::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzPhaseSpaceAmplitude*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooDalitzPhaseSpaceAmplitude::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzPhaseSpaceAmplitude*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooDalitzPhaseSpaceAmplitude::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzPhaseSpaceAmplitude*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooDalitzPhaseSpaceAmplitude::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzPhaseSpaceAmplitude*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooDalitzCubicPolynomial::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooDalitzCubicPolynomial::Class_Name()
{
   return "RooDalitzCubicPolynomial";
}

//______________________________________________________________________________
const char *RooDalitzCubicPolynomial::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzCubicPolynomial*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooDalitzCubicPolynomial::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzCubicPolynomial*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooDalitzCubicPolynomial::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzCubicPolynomial*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooDalitzCubicPolynomial::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzCubicPolynomial*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooDalitzCubicPolynomialSymmetric::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooDalitzCubicPolynomialSymmetric::Class_Name()
{
   return "RooDalitzCubicPolynomialSymmetric";
}

//______________________________________________________________________________
const char *RooDalitzCubicPolynomialSymmetric::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzCubicPolynomialSymmetric*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooDalitzCubicPolynomialSymmetric::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzCubicPolynomialSymmetric*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooDalitzCubicPolynomialSymmetric::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzCubicPolynomialSymmetric*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooDalitzCubicPolynomialSymmetric::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzCubicPolynomialSymmetric*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooTwoBodyThresholdFunction::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooTwoBodyThresholdFunction::Class_Name()
{
   return "RooTwoBodyThresholdFunction";
}

//______________________________________________________________________________
const char *RooTwoBodyThresholdFunction::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooTwoBodyThresholdFunction*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooTwoBodyThresholdFunction::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooTwoBodyThresholdFunction*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooTwoBodyThresholdFunction::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooTwoBodyThresholdFunction*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooTwoBodyThresholdFunction::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooTwoBodyThresholdFunction*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooMassHelicityAngles_TransformedBase::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooMassHelicityAngles_TransformedBase::Class_Name()
{
   return "RooMassHelicityAngles_TransformedBase";
}

//______________________________________________________________________________
const char *RooMassHelicityAngles_TransformedBase::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooMassHelicityAngles_TransformedBase*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooMassHelicityAngles_TransformedBase::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooMassHelicityAngles_TransformedBase*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooMassHelicityAngles_TransformedBase::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooMassHelicityAngles_TransformedBase*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooMassHelicityAngles_TransformedBase::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooMassHelicityAngles_TransformedBase*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooMassHelicityAnglesCPV::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooMassHelicityAnglesCPV::Class_Name()
{
   return "RooMassHelicityAnglesCPV";
}

//______________________________________________________________________________
const char *RooMassHelicityAnglesCPV::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooMassHelicityAnglesCPV*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooMassHelicityAnglesCPV::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooMassHelicityAnglesCPV*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooMassHelicityAnglesCPV::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooMassHelicityAnglesCPV*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooMassHelicityAnglesCPV::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooMassHelicityAnglesCPV*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooCutPdf::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooCutPdf::Class_Name()
{
   return "RooCutPdf";
}

//______________________________________________________________________________
const char *RooCutPdf::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooCutPdf*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooCutPdf::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooCutPdf*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooCutPdf::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooCutPdf*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooCutPdf::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooCutPdf*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooChebychevCut::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooChebychevCut::Class_Name()
{
   return "RooChebychevCut";
}

//______________________________________________________________________________
const char *RooChebychevCut::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooChebychevCut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooChebychevCut::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooChebychevCut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooChebychevCut::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooChebychevCut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooChebychevCut::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooChebychevCut*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooCategoryPdf::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooCategoryPdf::Class_Name()
{
   return "RooCategoryPdf";
}

//______________________________________________________________________________
const char *RooCategoryPdf::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooCategoryPdf*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooCategoryPdf::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooCategoryPdf*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooCategoryPdf::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooCategoryPdf*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooCategoryPdf::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooCategoryPdf*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooFlatteAndNonRes::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooFlatteAndNonRes::Class_Name()
{
   return "RooFlatteAndNonRes";
}

//______________________________________________________________________________
const char *RooFlatteAndNonRes::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooFlatteAndNonRes*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooFlatteAndNonRes::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooFlatteAndNonRes*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooFlatteAndNonRes::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooFlatteAndNonRes*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooFlatteAndNonRes::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooFlatteAndNonRes*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooKKInterference::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooKKInterference::Class_Name()
{
   return "RooKKInterference";
}

//______________________________________________________________________________
const char *RooKKInterference::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooKKInterference*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooKKInterference::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooKKInterference*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooKKInterference::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooKKInterference*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooKKInterference::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooKKInterference*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooKKInterferenceNorm::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooKKInterferenceNorm::Class_Name()
{
   return "RooKKInterferenceNorm";
}

//______________________________________________________________________________
const char *RooKKInterferenceNorm::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooKKInterferenceNorm*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooKKInterferenceNorm::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooKKInterferenceNorm*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooKKInterferenceNorm::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooKKInterferenceNorm*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooKKInterferenceNorm::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooKKInterferenceNorm*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooKKInterferencePositive::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooKKInterferencePositive::Class_Name()
{
   return "RooKKInterferencePositive";
}

//______________________________________________________________________________
const char *RooKKInterferencePositive::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooKKInterferencePositive*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooKKInterferencePositive::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooKKInterferencePositive*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooKKInterferencePositive::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooKKInterferencePositive*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooKKInterferencePositive::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooKKInterferencePositive*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooDalitzAnalysis::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooDalitzAnalysis::Class_Name()
{
   return "RooDalitzAnalysis";
}

//______________________________________________________________________________
const char *RooDalitzAnalysis::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzAnalysis*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooDalitzAnalysis::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzAnalysis*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooDalitzAnalysis::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzAnalysis*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooDalitzAnalysis::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzAnalysis*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooThresholdFunction::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooThresholdFunction::Class_Name()
{
   return "RooThresholdFunction";
}

//______________________________________________________________________________
const char *RooThresholdFunction::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooThresholdFunction*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooThresholdFunction::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooThresholdFunction*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooThresholdFunction::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooThresholdFunction*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooThresholdFunction::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooThresholdFunction*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooDalitzDelaunay::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooDalitzDelaunay::Class_Name()
{
   return "RooDalitzDelaunay";
}

//______________________________________________________________________________
const char *RooDalitzDelaunay::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzDelaunay*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooDalitzDelaunay::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzDelaunay*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooDalitzDelaunay::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzDelaunay*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooDalitzDelaunay::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzDelaunay*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooDalitzAnalysisCPV::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooDalitzAnalysisCPV::Class_Name()
{
   return "RooDalitzAnalysisCPV";
}

//______________________________________________________________________________
const char *RooDalitzAnalysisCPV::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzAnalysisCPV*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooDalitzAnalysisCPV::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzAnalysisCPV*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooDalitzAnalysisCPV::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzAnalysisCPV*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooDalitzAnalysisCPV::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzAnalysisCPV*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooDalitzGauss::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooDalitzGauss::Class_Name()
{
   return "RooDalitzGauss";
}

//______________________________________________________________________________
const char *RooDalitzGauss::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzGauss*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooDalitzGauss::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzGauss*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooDalitzGauss::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzGauss*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooDalitzGauss::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzGauss*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooDalitzRelativisticSpinBreitWigner::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooDalitzRelativisticSpinBreitWigner::Class_Name()
{
   return "RooDalitzRelativisticSpinBreitWigner";
}

//______________________________________________________________________________
const char *RooDalitzRelativisticSpinBreitWigner::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzRelativisticSpinBreitWigner*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooDalitzRelativisticSpinBreitWigner::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzRelativisticSpinBreitWigner*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooDalitzRelativisticSpinBreitWigner::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzRelativisticSpinBreitWigner*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooDalitzRelativisticSpinBreitWigner::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzRelativisticSpinBreitWigner*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooDalitzHist::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooDalitzHist::Class_Name()
{
   return "RooDalitzHist";
}

//______________________________________________________________________________
const char *RooDalitzHist::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzHist*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooDalitzHist::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzHist*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooDalitzHist::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzHist*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooDalitzHist::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzHist*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooDalitzXsd::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooDalitzXsd::Class_Name()
{
   return "RooDalitzXsd";
}

//______________________________________________________________________________
const char *RooDalitzXsd::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzXsd*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooDalitzXsd::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzXsd*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooDalitzXsd::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzXsd*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooDalitzXsd::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzXsd*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RooDalitzNovosibirsk::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RooDalitzNovosibirsk::Class_Name()
{
   return "RooDalitzNovosibirsk";
}

//______________________________________________________________________________
const char *RooDalitzNovosibirsk::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzNovosibirsk*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooDalitzNovosibirsk::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzNovosibirsk*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooDalitzNovosibirsk::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzNovosibirsk*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooDalitzNovosibirsk::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RooDalitzNovosibirsk*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void RooRelativisticSpinBreitWigner::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooRelativisticSpinBreitWigner.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      mass_J.Streamer(R__b);
      width_J.Streamer(R__b);
      r.Streamer(R__b);
      J.Streamer(R__b);
      R__b >> const_cast<  double &>( m1 );
      R__b >> const_cast<  double &>( m2 );
      R__b.CheckByteCount(R__s, R__c, RooRelativisticSpinBreitWigner::IsA());
   } else {
      R__c = R__b.WriteVersion(RooRelativisticSpinBreitWigner::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      mass_J.Streamer(R__b);
      width_J.Streamer(R__b);
      r.Streamer(R__b);
      J.Streamer(R__b);
      R__b << const_cast<  double &>( m1 );
      R__b << const_cast<  double &>( m2 );
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooRelativisticSpinBreitWigner::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooRelativisticSpinBreitWigner.
      TClass *R__cl = ::RooRelativisticSpinBreitWigner::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.InspectMember(m, "m.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_J", &mass_J);
      R__insp.InspectMember(mass_J, "mass_J.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_J", &width_J);
      R__insp.InspectMember(width_J, "width_J.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r", &r);
      R__insp.InspectMember(r, "r.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "J", &J);
      R__insp.InspectMember(J, "J.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m1", &m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m2", &m2);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooRelativisticSpinBreitWigner(void *p) {
      return  p ? new(p) ::RooRelativisticSpinBreitWigner : new ::RooRelativisticSpinBreitWigner;
   }
   static void *newArray_RooRelativisticSpinBreitWigner(Long_t nElements, void *p) {
      return p ? new(p) ::RooRelativisticSpinBreitWigner[nElements] : new ::RooRelativisticSpinBreitWigner[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooRelativisticSpinBreitWigner(void *p) {
      delete ((::RooRelativisticSpinBreitWigner*)p);
   }
   static void deleteArray_RooRelativisticSpinBreitWigner(void *p) {
      delete [] ((::RooRelativisticSpinBreitWigner*)p);
   }
   static void destruct_RooRelativisticSpinBreitWigner(void *p) {
      typedef ::RooRelativisticSpinBreitWigner current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooRelativisticSpinBreitWigner(TBuffer &buf, void *obj) {
      ((::RooRelativisticSpinBreitWigner*)obj)->::RooRelativisticSpinBreitWigner::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooRelativisticSpinBreitWigner

//______________________________________________________________________________
void RooBreitWignerTwoBodyPHSP::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooBreitWignerTwoBodyPHSP.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      mass_J.Streamer(R__b);
      width_J.Streamer(R__b);
      R__b >> const_cast<  double &>( m1 );
      R__b >> const_cast<  double &>( m2 );
      R__b.CheckByteCount(R__s, R__c, RooBreitWignerTwoBodyPHSP::IsA());
   } else {
      R__c = R__b.WriteVersion(RooBreitWignerTwoBodyPHSP::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      mass_J.Streamer(R__b);
      width_J.Streamer(R__b);
      R__b << const_cast<  double &>( m1 );
      R__b << const_cast<  double &>( m2 );
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooBreitWignerTwoBodyPHSP::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooBreitWignerTwoBodyPHSP.
      TClass *R__cl = ::RooBreitWignerTwoBodyPHSP::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.InspectMember(m, "m.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_J", &mass_J);
      R__insp.InspectMember(mass_J, "mass_J.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_J", &width_J);
      R__insp.InspectMember(width_J, "width_J.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m1", &m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m2", &m2);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooBreitWignerTwoBodyPHSP(void *p) {
      return  p ? new(p) ::RooBreitWignerTwoBodyPHSP : new ::RooBreitWignerTwoBodyPHSP;
   }
   static void *newArray_RooBreitWignerTwoBodyPHSP(Long_t nElements, void *p) {
      return p ? new(p) ::RooBreitWignerTwoBodyPHSP[nElements] : new ::RooBreitWignerTwoBodyPHSP[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooBreitWignerTwoBodyPHSP(void *p) {
      delete ((::RooBreitWignerTwoBodyPHSP*)p);
   }
   static void deleteArray_RooBreitWignerTwoBodyPHSP(void *p) {
      delete [] ((::RooBreitWignerTwoBodyPHSP*)p);
   }
   static void destruct_RooBreitWignerTwoBodyPHSP(void *p) {
      typedef ::RooBreitWignerTwoBodyPHSP current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooBreitWignerTwoBodyPHSP(TBuffer &buf, void *obj) {
      ((::RooBreitWignerTwoBodyPHSP*)obj)->::RooBreitWignerTwoBodyPHSP::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooBreitWignerTwoBodyPHSP

//______________________________________________________________________________
void RooBreitWignerTwoBodyPHSPEvtGen::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooBreitWignerTwoBodyPHSPEvtGen.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      mass_J.Streamer(R__b);
      width_J.Streamer(R__b);
      R__b >> const_cast<  double &>( cutoff );
      R__b >> const_cast<  double &>( m1 );
      R__b >> const_cast<  double &>( m2 );
      R__b.CheckByteCount(R__s, R__c, RooBreitWignerTwoBodyPHSPEvtGen::IsA());
   } else {
      R__c = R__b.WriteVersion(RooBreitWignerTwoBodyPHSPEvtGen::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      mass_J.Streamer(R__b);
      width_J.Streamer(R__b);
      R__b << const_cast<  double &>( cutoff );
      R__b << const_cast<  double &>( m1 );
      R__b << const_cast<  double &>( m2 );
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooBreitWignerTwoBodyPHSPEvtGen::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooBreitWignerTwoBodyPHSPEvtGen.
      TClass *R__cl = ::RooBreitWignerTwoBodyPHSPEvtGen::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.InspectMember(m, "m.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_J", &mass_J);
      R__insp.InspectMember(mass_J, "mass_J.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_J", &width_J);
      R__insp.InspectMember(width_J, "width_J.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cutoff", &cutoff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m1", &m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m2", &m2);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooBreitWignerTwoBodyPHSPEvtGen(void *p) {
      return  p ? new(p) ::RooBreitWignerTwoBodyPHSPEvtGen : new ::RooBreitWignerTwoBodyPHSPEvtGen;
   }
   static void *newArray_RooBreitWignerTwoBodyPHSPEvtGen(Long_t nElements, void *p) {
      return p ? new(p) ::RooBreitWignerTwoBodyPHSPEvtGen[nElements] : new ::RooBreitWignerTwoBodyPHSPEvtGen[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooBreitWignerTwoBodyPHSPEvtGen(void *p) {
      delete ((::RooBreitWignerTwoBodyPHSPEvtGen*)p);
   }
   static void deleteArray_RooBreitWignerTwoBodyPHSPEvtGen(void *p) {
      delete [] ((::RooBreitWignerTwoBodyPHSPEvtGen*)p);
   }
   static void destruct_RooBreitWignerTwoBodyPHSPEvtGen(void *p) {
      typedef ::RooBreitWignerTwoBodyPHSPEvtGen current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooBreitWignerTwoBodyPHSPEvtGen(TBuffer &buf, void *obj) {
      ((::RooBreitWignerTwoBodyPHSPEvtGen*)obj)->::RooBreitWignerTwoBodyPHSPEvtGen::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooBreitWignerTwoBodyPHSPEvtGen

//______________________________________________________________________________
void RooThreeBodyPhaseSpaceProjection::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooThreeBodyPhaseSpaceProjection.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      m12.Streamer(R__b);
      R__b >> const_cast<  double &>( m1 );
      R__b >> const_cast<  double &>( m2 );
      R__b >> const_cast<  double &>( m3 );
      R__b >> const_cast<  double &>( mM );
      R__b.CheckByteCount(R__s, R__c, RooThreeBodyPhaseSpaceProjection::IsA());
   } else {
      R__c = R__b.WriteVersion(RooThreeBodyPhaseSpaceProjection::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      m12.Streamer(R__b);
      R__b << const_cast<  double &>( m1 );
      R__b << const_cast<  double &>( m2 );
      R__b << const_cast<  double &>( m3 );
      R__b << const_cast<  double &>( mM );
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooThreeBodyPhaseSpaceProjection::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooThreeBodyPhaseSpaceProjection.
      TClass *R__cl = ::RooThreeBodyPhaseSpaceProjection::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m12", &m12);
      R__insp.InspectMember(m12, "m12.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m1", &m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m2", &m2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m3", &m3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mM", &mM);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooThreeBodyPhaseSpaceProjection(void *p) {
      return  p ? new(p) ::RooThreeBodyPhaseSpaceProjection : new ::RooThreeBodyPhaseSpaceProjection;
   }
   static void *newArray_RooThreeBodyPhaseSpaceProjection(Long_t nElements, void *p) {
      return p ? new(p) ::RooThreeBodyPhaseSpaceProjection[nElements] : new ::RooThreeBodyPhaseSpaceProjection[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooThreeBodyPhaseSpaceProjection(void *p) {
      delete ((::RooThreeBodyPhaseSpaceProjection*)p);
   }
   static void deleteArray_RooThreeBodyPhaseSpaceProjection(void *p) {
      delete [] ((::RooThreeBodyPhaseSpaceProjection*)p);
   }
   static void destruct_RooThreeBodyPhaseSpaceProjection(void *p) {
      typedef ::RooThreeBodyPhaseSpaceProjection current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooThreeBodyPhaseSpaceProjection(TBuffer &buf, void *obj) {
      ((::RooThreeBodyPhaseSpaceProjection*)obj)->::RooThreeBodyPhaseSpaceProjection::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooThreeBodyPhaseSpaceProjection

//______________________________________________________________________________
void RooBifurStudentsTDistribution::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooBifurStudentsTDistribution.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      x.Streamer(R__b);
      mu.Streamer(R__b);
      sigma.Streamer(R__b);
      sigma_asym.Streamer(R__b);
      nu_l.Streamer(R__b);
      nu_r.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, RooBifurStudentsTDistribution::IsA());
   } else {
      R__c = R__b.WriteVersion(RooBifurStudentsTDistribution::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      x.Streamer(R__b);
      mu.Streamer(R__b);
      sigma.Streamer(R__b);
      sigma_asym.Streamer(R__b);
      nu_l.Streamer(R__b);
      nu_r.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooBifurStudentsTDistribution::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooBifurStudentsTDistribution.
      TClass *R__cl = ::RooBifurStudentsTDistribution::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.InspectMember(x, "x.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu", &mu);
      R__insp.InspectMember(mu, "mu.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigma", &sigma);
      R__insp.InspectMember(sigma, "sigma.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigma_asym", &sigma_asym);
      R__insp.InspectMember(sigma_asym, "sigma_asym.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_l", &nu_l);
      R__insp.InspectMember(nu_l, "nu_l.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_r", &nu_r);
      R__insp.InspectMember(nu_r, "nu_r.");
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooBifurStudentsTDistribution(void *p) {
      return  p ? new(p) ::RooBifurStudentsTDistribution : new ::RooBifurStudentsTDistribution;
   }
   static void *newArray_RooBifurStudentsTDistribution(Long_t nElements, void *p) {
      return p ? new(p) ::RooBifurStudentsTDistribution[nElements] : new ::RooBifurStudentsTDistribution[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooBifurStudentsTDistribution(void *p) {
      delete ((::RooBifurStudentsTDistribution*)p);
   }
   static void deleteArray_RooBifurStudentsTDistribution(void *p) {
      delete [] ((::RooBifurStudentsTDistribution*)p);
   }
   static void destruct_RooBifurStudentsTDistribution(void *p) {
      typedef ::RooBifurStudentsTDistribution current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooBifurStudentsTDistribution(TBuffer &buf, void *obj) {
      ((::RooBifurStudentsTDistribution*)obj)->::RooBifurStudentsTDistribution::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooBifurStudentsTDistribution

//______________________________________________________________________________
void RooStudentsTDistribution::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooStudentsTDistribution.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      x.Streamer(R__b);
      mu.Streamer(R__b);
      sigma.Streamer(R__b);
      nu.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, RooStudentsTDistribution::IsA());
   } else {
      R__c = R__b.WriteVersion(RooStudentsTDistribution::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      x.Streamer(R__b);
      mu.Streamer(R__b);
      sigma.Streamer(R__b);
      nu.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooStudentsTDistribution::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooStudentsTDistribution.
      TClass *R__cl = ::RooStudentsTDistribution::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.InspectMember(x, "x.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu", &mu);
      R__insp.InspectMember(mu, "mu.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigma", &sigma);
      R__insp.InspectMember(sigma, "sigma.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu", &nu);
      R__insp.InspectMember(nu, "nu.");
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooStudentsTDistribution(void *p) {
      return  p ? new(p) ::RooStudentsTDistribution : new ::RooStudentsTDistribution;
   }
   static void *newArray_RooStudentsTDistribution(Long_t nElements, void *p) {
      return p ? new(p) ::RooStudentsTDistribution[nElements] : new ::RooStudentsTDistribution[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooStudentsTDistribution(void *p) {
      delete ((::RooStudentsTDistribution*)p);
   }
   static void deleteArray_RooStudentsTDistribution(void *p) {
      delete [] ((::RooStudentsTDistribution*)p);
   }
   static void destruct_RooStudentsTDistribution(void *p) {
      typedef ::RooStudentsTDistribution current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooStudentsTDistribution(TBuffer &buf, void *obj) {
      ((::RooStudentsTDistribution*)obj)->::RooStudentsTDistribution::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooStudentsTDistribution

//______________________________________________________________________________
void RooFlatte::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooFlatte.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      mass_R.Streamer(R__b);
      g_1.Streamer(R__b);
      g_2.Streamer(R__b);
      g_3.Streamer(R__b);
      R__b >> const_cast<  double &>( m_1a );
      R__b >> const_cast<  double &>( m_1b );
      R__b >> const_cast<  double &>( m_2a );
      R__b >> const_cast<  double &>( m_2b );
      R__b >> const_cast<  double &>( m_3a );
      R__b >> const_cast<  double &>( m_3b );
      R__b >> const_cast<  double &>( m1 );
      R__b >> const_cast<  double &>( m2 );
      R__b.CheckByteCount(R__s, R__c, RooFlatte::IsA());
   } else {
      R__c = R__b.WriteVersion(RooFlatte::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      mass_R.Streamer(R__b);
      g_1.Streamer(R__b);
      g_2.Streamer(R__b);
      g_3.Streamer(R__b);
      R__b << const_cast<  double &>( m_1a );
      R__b << const_cast<  double &>( m_1b );
      R__b << const_cast<  double &>( m_2a );
      R__b << const_cast<  double &>( m_2b );
      R__b << const_cast<  double &>( m_3a );
      R__b << const_cast<  double &>( m_3b );
      R__b << const_cast<  double &>( m1 );
      R__b << const_cast<  double &>( m2 );
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooFlatte::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooFlatte.
      TClass *R__cl = ::RooFlatte::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.InspectMember(m, "m.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_R", &mass_R);
      R__insp.InspectMember(mass_R, "mass_R.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "g_1", &g_1);
      R__insp.InspectMember(g_1, "g_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "g_2", &g_2);
      R__insp.InspectMember(g_2, "g_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "g_3", &g_3);
      R__insp.InspectMember(g_3, "g_3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_1a", &m_1a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_1b", &m_1b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_2a", &m_2a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_2b", &m_2b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_3a", &m_3a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_3b", &m_3b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m1", &m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m2", &m2);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooFlatte(void *p) {
      return  p ? new(p) ::RooFlatte : new ::RooFlatte;
   }
   static void *newArray_RooFlatte(Long_t nElements, void *p) {
      return p ? new(p) ::RooFlatte[nElements] : new ::RooFlatte[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooFlatte(void *p) {
      delete ((::RooFlatte*)p);
   }
   static void deleteArray_RooFlatte(void *p) {
      delete [] ((::RooFlatte*)p);
   }
   static void destruct_RooFlatte(void *p) {
      typedef ::RooFlatte current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooFlatte(TBuffer &buf, void *obj) {
      ((::RooFlatte*)obj)->::RooFlatte::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooFlatte

//______________________________________________________________________________
void RooLASS::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooLASS.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      mass_0.Streamer(R__b);
      width_0.Streamer(R__b);
      a.Streamer(R__b);
      b.Streamer(R__b);
      R__b >> const_cast<  double &>( m1 );
      R__b >> const_cast<  double &>( m2 );
      R__b.CheckByteCount(R__s, R__c, RooLASS::IsA());
   } else {
      R__c = R__b.WriteVersion(RooLASS::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      mass_0.Streamer(R__b);
      width_0.Streamer(R__b);
      a.Streamer(R__b);
      b.Streamer(R__b);
      R__b << const_cast<  double &>( m1 );
      R__b << const_cast<  double &>( m2 );
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooLASS::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooLASS.
      TClass *R__cl = ::RooLASS::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.InspectMember(m, "m.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_0", &mass_0);
      R__insp.InspectMember(mass_0, "mass_0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_0", &width_0);
      R__insp.InspectMember(width_0, "width_0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a", &a);
      R__insp.InspectMember(a, "a.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "b", &b);
      R__insp.InspectMember(b, "b.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m1", &m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m2", &m2);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooLASS(void *p) {
      return  p ? new(p) ::RooLASS : new ::RooLASS;
   }
   static void *newArray_RooLASS(Long_t nElements, void *p) {
      return p ? new(p) ::RooLASS[nElements] : new ::RooLASS[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooLASS(void *p) {
      delete ((::RooLASS*)p);
   }
   static void deleteArray_RooLASS(void *p) {
      delete [] ((::RooLASS*)p);
   }
   static void destruct_RooLASS(void *p) {
      typedef ::RooLASS current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooLASS(TBuffer &buf, void *obj) {
      ((::RooLASS*)obj)->::RooLASS::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooLASS

//______________________________________________________________________________
void RooKPiMass::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooKPiMass.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      mass_0.Streamer(R__b);
      width_0.Streamer(R__b);
      a.Streamer(R__b);
      b.Streamer(R__b);
      mass_1.Streamer(R__b);
      width_1.Streamer(R__b);
      r_1.Streamer(R__b);
      mass_2.Streamer(R__b);
      width_2.Streamer(R__b);
      r_2.Streamer(R__b);
      amp_0.Streamer(R__b);
      phase_0.Streamer(R__b);
      amp_1.Streamer(R__b);
      phase_1.Streamer(R__b);
      amp_2.Streamer(R__b);
      phase_2.Streamer(R__b);
      R__b >> const_cast<  double &>( m1 );
      R__b >> const_cast<  double &>( m2 );
      R__b.CheckByteCount(R__s, R__c, RooKPiMass::IsA());
   } else {
      R__c = R__b.WriteVersion(RooKPiMass::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      mass_0.Streamer(R__b);
      width_0.Streamer(R__b);
      a.Streamer(R__b);
      b.Streamer(R__b);
      mass_1.Streamer(R__b);
      width_1.Streamer(R__b);
      r_1.Streamer(R__b);
      mass_2.Streamer(R__b);
      width_2.Streamer(R__b);
      r_2.Streamer(R__b);
      amp_0.Streamer(R__b);
      phase_0.Streamer(R__b);
      amp_1.Streamer(R__b);
      phase_1.Streamer(R__b);
      amp_2.Streamer(R__b);
      phase_2.Streamer(R__b);
      R__b << const_cast<  double &>( m1 );
      R__b << const_cast<  double &>( m2 );
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooKPiMass::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooKPiMass.
      TClass *R__cl = ::RooKPiMass::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.InspectMember(m, "m.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_0", &mass_0);
      R__insp.InspectMember(mass_0, "mass_0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_0", &width_0);
      R__insp.InspectMember(width_0, "width_0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a", &a);
      R__insp.InspectMember(a, "a.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "b", &b);
      R__insp.InspectMember(b, "b.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_1", &mass_1);
      R__insp.InspectMember(mass_1, "mass_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_1", &width_1);
      R__insp.InspectMember(width_1, "width_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r_1", &r_1);
      R__insp.InspectMember(r_1, "r_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_2", &mass_2);
      R__insp.InspectMember(mass_2, "mass_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_2", &width_2);
      R__insp.InspectMember(width_2, "width_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r_2", &r_2);
      R__insp.InspectMember(r_2, "r_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_0", &amp_0);
      R__insp.InspectMember(amp_0, "amp_0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_0", &phase_0);
      R__insp.InspectMember(phase_0, "phase_0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_1", &amp_1);
      R__insp.InspectMember(amp_1, "amp_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_1", &phase_1);
      R__insp.InspectMember(phase_1, "phase_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_2", &amp_2);
      R__insp.InspectMember(amp_2, "amp_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_2", &phase_2);
      R__insp.InspectMember(phase_2, "phase_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m1", &m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m2", &m2);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooKPiMass(void *p) {
      return  p ? new(p) ::RooKPiMass : new ::RooKPiMass;
   }
   static void *newArray_RooKPiMass(Long_t nElements, void *p) {
      return p ? new(p) ::RooKPiMass[nElements] : new ::RooKPiMass[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooKPiMass(void *p) {
      delete ((::RooKPiMass*)p);
   }
   static void deleteArray_RooKPiMass(void *p) {
      delete [] ((::RooKPiMass*)p);
   }
   static void destruct_RooKPiMass(void *p) {
      typedef ::RooKPiMass current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooKPiMass(TBuffer &buf, void *obj) {
      ((::RooKPiMass*)obj)->::RooKPiMass::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooKPiMass

//______________________________________________________________________________
void RooHelicityAngles::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooHelicityAngles.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      phi.Streamer(R__b);
      cos_th1.Streamer(R__b);
      cos_th2.Streamer(R__b);
      J1.Streamer(R__b);
      J2.Streamer(R__b);
      amp_m.Streamer(R__b);
      phase_m.Streamer(R__b);
      amp_0.Streamer(R__b);
      phase_0.Streamer(R__b);
      amp_p.Streamer(R__b);
      phase_p.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, RooHelicityAngles::IsA());
   } else {
      R__c = R__b.WriteVersion(RooHelicityAngles::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      phi.Streamer(R__b);
      cos_th1.Streamer(R__b);
      cos_th2.Streamer(R__b);
      J1.Streamer(R__b);
      J2.Streamer(R__b);
      amp_m.Streamer(R__b);
      phase_m.Streamer(R__b);
      amp_0.Streamer(R__b);
      phase_0.Streamer(R__b);
      amp_p.Streamer(R__b);
      phase_p.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooHelicityAngles::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooHelicityAngles.
      TClass *R__cl = ::RooHelicityAngles::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.InspectMember(phi, "phi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cos_th1", &cos_th1);
      R__insp.InspectMember(cos_th1, "cos_th1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cos_th2", &cos_th2);
      R__insp.InspectMember(cos_th2, "cos_th2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "J1", &J1);
      R__insp.InspectMember(J1, "J1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "J2", &J2);
      R__insp.InspectMember(J2, "J2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_m", &amp_m);
      R__insp.InspectMember(amp_m, "amp_m.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_m", &phase_m);
      R__insp.InspectMember(phase_m, "phase_m.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_0", &amp_0);
      R__insp.InspectMember(amp_0, "amp_0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_0", &phase_0);
      R__insp.InspectMember(phase_0, "phase_0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_p", &amp_p);
      R__insp.InspectMember(amp_p, "amp_p.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_p", &phase_p);
      R__insp.InspectMember(phase_p, "phase_p.");
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooHelicityAngles(void *p) {
      return  p ? new(p) ::RooHelicityAngles : new ::RooHelicityAngles;
   }
   static void *newArray_RooHelicityAngles(Long_t nElements, void *p) {
      return p ? new(p) ::RooHelicityAngles[nElements] : new ::RooHelicityAngles[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooHelicityAngles(void *p) {
      delete ((::RooHelicityAngles*)p);
   }
   static void deleteArray_RooHelicityAngles(void *p) {
      delete [] ((::RooHelicityAngles*)p);
   }
   static void destruct_RooHelicityAngles(void *p) {
      typedef ::RooHelicityAngles current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooHelicityAngles(TBuffer &buf, void *obj) {
      ((::RooHelicityAngles*)obj)->::RooHelicityAngles::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooHelicityAngles

//______________________________________________________________________________
void RooMassHelicityAngles::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooMassHelicityAngles.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      phi.Streamer(R__b);
      cos_th1.Streamer(R__b);
      cos_th2.Streamer(R__b);
      mass_0.Streamer(R__b);
      width_0.Streamer(R__b);
      a.Streamer(R__b);
      b.Streamer(R__b);
      mass_1.Streamer(R__b);
      width_1.Streamer(R__b);
      r_1.Streamer(R__b);
      mass_2.Streamer(R__b);
      width_2.Streamer(R__b);
      r_2.Streamer(R__b);
      amp_00.Streamer(R__b);
      phase_00.Streamer(R__b);
      amp_1m.Streamer(R__b);
      phase_1m.Streamer(R__b);
      amp_10.Streamer(R__b);
      phase_10.Streamer(R__b);
      amp_1p.Streamer(R__b);
      phase_1p.Streamer(R__b);
      amp_2m.Streamer(R__b);
      phase_2m.Streamer(R__b);
      amp_20.Streamer(R__b);
      phase_20.Streamer(R__b);
      amp_2p.Streamer(R__b);
      phase_2p.Streamer(R__b);
      R__b >> const_cast<  double &>( m_Pi );
      R__b >> const_cast<  double &>( m_K );
      R__b >> const_cast<  double &>( m_Phi );
      R__b >> const_cast<  double &>( m_B0 );
      void *ptr_m_acceptance_function = (void*)&m_acceptance_function;
      R__b >> *reinterpret_cast<Int_t*>(ptr_m_acceptance_function);
      R__b.CheckByteCount(R__s, R__c, RooMassHelicityAngles::IsA());
   } else {
      R__c = R__b.WriteVersion(RooMassHelicityAngles::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      phi.Streamer(R__b);
      cos_th1.Streamer(R__b);
      cos_th2.Streamer(R__b);
      mass_0.Streamer(R__b);
      width_0.Streamer(R__b);
      a.Streamer(R__b);
      b.Streamer(R__b);
      mass_1.Streamer(R__b);
      width_1.Streamer(R__b);
      r_1.Streamer(R__b);
      mass_2.Streamer(R__b);
      width_2.Streamer(R__b);
      r_2.Streamer(R__b);
      amp_00.Streamer(R__b);
      phase_00.Streamer(R__b);
      amp_1m.Streamer(R__b);
      phase_1m.Streamer(R__b);
      amp_10.Streamer(R__b);
      phase_10.Streamer(R__b);
      amp_1p.Streamer(R__b);
      phase_1p.Streamer(R__b);
      amp_2m.Streamer(R__b);
      phase_2m.Streamer(R__b);
      amp_20.Streamer(R__b);
      phase_20.Streamer(R__b);
      amp_2p.Streamer(R__b);
      phase_2p.Streamer(R__b);
      R__b << const_cast<  double &>( m_Pi );
      R__b << const_cast<  double &>( m_K );
      R__b << const_cast<  double &>( m_Phi );
      R__b << const_cast<  double &>( m_B0 );
      R__b << (Int_t)m_acceptance_function;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooMassHelicityAngles::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooMassHelicityAngles.
      TClass *R__cl = ::RooMassHelicityAngles::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.InspectMember(m, "m.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.InspectMember(phi, "phi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cos_th1", &cos_th1);
      R__insp.InspectMember(cos_th1, "cos_th1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cos_th2", &cos_th2);
      R__insp.InspectMember(cos_th2, "cos_th2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_0", &mass_0);
      R__insp.InspectMember(mass_0, "mass_0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_0", &width_0);
      R__insp.InspectMember(width_0, "width_0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a", &a);
      R__insp.InspectMember(a, "a.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "b", &b);
      R__insp.InspectMember(b, "b.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_1", &mass_1);
      R__insp.InspectMember(mass_1, "mass_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_1", &width_1);
      R__insp.InspectMember(width_1, "width_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r_1", &r_1);
      R__insp.InspectMember(r_1, "r_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_2", &mass_2);
      R__insp.InspectMember(mass_2, "mass_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_2", &width_2);
      R__insp.InspectMember(width_2, "width_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r_2", &r_2);
      R__insp.InspectMember(r_2, "r_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_00", &amp_00);
      R__insp.InspectMember(amp_00, "amp_00.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_00", &phase_00);
      R__insp.InspectMember(phase_00, "phase_00.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_1m", &amp_1m);
      R__insp.InspectMember(amp_1m, "amp_1m.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_1m", &phase_1m);
      R__insp.InspectMember(phase_1m, "phase_1m.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_10", &amp_10);
      R__insp.InspectMember(amp_10, "amp_10.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_10", &phase_10);
      R__insp.InspectMember(phase_10, "phase_10.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_1p", &amp_1p);
      R__insp.InspectMember(amp_1p, "amp_1p.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_1p", &phase_1p);
      R__insp.InspectMember(phase_1p, "phase_1p.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_2m", &amp_2m);
      R__insp.InspectMember(amp_2m, "amp_2m.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_2m", &phase_2m);
      R__insp.InspectMember(phase_2m, "phase_2m.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_20", &amp_20);
      R__insp.InspectMember(amp_20, "amp_20.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_20", &phase_20);
      R__insp.InspectMember(phase_20, "phase_20.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_2p", &amp_2p);
      R__insp.InspectMember(amp_2p, "amp_2p.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_2p", &phase_2p);
      R__insp.InspectMember(phase_2p, "phase_2p.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Pi", &m_Pi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_K", &m_K);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Phi", &m_Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_B0", &m_B0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_acceptance_function", &m_acceptance_function);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_norm_cache_integrator", &m_norm_cache_integrator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_real_cache_integrator", &m_real_cache_integrator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_imag_cache_integrator", &m_imag_cache_integrator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_norm_cache_integrator_phi_th1_th2", &m_norm_cache_integrator_phi_th1_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_real_cache_integrator_phi_th1_th2", &m_real_cache_integrator_phi_th1_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_imag_cache_integrator_phi_th1_th2", &m_imag_cache_integrator_phi_th1_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_norm_cache_integrator_m_th1_th2", &m_norm_cache_integrator_m_th1_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_real_cache_integrator_m_th1_th2", &m_real_cache_integrator_m_th1_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_imag_cache_integrator_m_th1_th2", &m_imag_cache_integrator_m_th1_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_norm_cache_integrator_m_phi_th2", &m_norm_cache_integrator_m_phi_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_real_cache_integrator_m_phi_th2", &m_real_cache_integrator_m_phi_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_imag_cache_integrator_m_phi_th2", &m_imag_cache_integrator_m_phi_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_norm_cache_integrator_m_phi_th1", &m_norm_cache_integrator_m_phi_th1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_real_cache_integrator_m_phi_th1", &m_real_cache_integrator_m_phi_th1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_imag_cache_integrator_m_phi_th1", &m_imag_cache_integrator_m_phi_th1);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooMassHelicityAngles(void *p) {
      return  p ? new(p) ::RooMassHelicityAngles : new ::RooMassHelicityAngles;
   }
   static void *newArray_RooMassHelicityAngles(Long_t nElements, void *p) {
      return p ? new(p) ::RooMassHelicityAngles[nElements] : new ::RooMassHelicityAngles[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooMassHelicityAngles(void *p) {
      delete ((::RooMassHelicityAngles*)p);
   }
   static void deleteArray_RooMassHelicityAngles(void *p) {
      delete [] ((::RooMassHelicityAngles*)p);
   }
   static void destruct_RooMassHelicityAngles(void *p) {
      typedef ::RooMassHelicityAngles current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooMassHelicityAngles(TBuffer &buf, void *obj) {
      ((::RooMassHelicityAngles*)obj)->::RooMassHelicityAngles::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooMassHelicityAngles

//______________________________________________________________________________
void RooVarianceGammaDistribution::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooVarianceGammaDistribution.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      x.Streamer(R__b);
      mu.Streamer(R__b);
      alpha.Streamer(R__b);
      beta.Streamer(R__b);
      lambda.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, RooVarianceGammaDistribution::IsA());
   } else {
      R__c = R__b.WriteVersion(RooVarianceGammaDistribution::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      x.Streamer(R__b);
      mu.Streamer(R__b);
      alpha.Streamer(R__b);
      beta.Streamer(R__b);
      lambda.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooVarianceGammaDistribution::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooVarianceGammaDistribution.
      TClass *R__cl = ::RooVarianceGammaDistribution::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.InspectMember(x, "x.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu", &mu);
      R__insp.InspectMember(mu, "mu.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpha", &alpha);
      R__insp.InspectMember(alpha, "alpha.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beta", &beta);
      R__insp.InspectMember(beta, "beta.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lambda", &lambda);
      R__insp.InspectMember(lambda, "lambda.");
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooVarianceGammaDistribution(void *p) {
      return  p ? new(p) ::RooVarianceGammaDistribution : new ::RooVarianceGammaDistribution;
   }
   static void *newArray_RooVarianceGammaDistribution(Long_t nElements, void *p) {
      return p ? new(p) ::RooVarianceGammaDistribution[nElements] : new ::RooVarianceGammaDistribution[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooVarianceGammaDistribution(void *p) {
      delete ((::RooVarianceGammaDistribution*)p);
   }
   static void deleteArray_RooVarianceGammaDistribution(void *p) {
      delete [] ((::RooVarianceGammaDistribution*)p);
   }
   static void destruct_RooVarianceGammaDistribution(void *p) {
      typedef ::RooVarianceGammaDistribution current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooVarianceGammaDistribution(TBuffer &buf, void *obj) {
      ((::RooVarianceGammaDistribution*)obj)->::RooVarianceGammaDistribution::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooVarianceGammaDistribution

//______________________________________________________________________________
void RooDalitzPhaseSpaceAmplitude::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooDalitzPhaseSpaceAmplitude.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      m12.Streamer(R__b);
      m23.Streamer(R__b);
      R__b >> const_cast<  double &>( m1 );
      R__b >> const_cast<  double &>( m2 );
      R__b >> const_cast<  double &>( m3 );
      R__b >> const_cast<  double &>( mM );
      R__b.CheckByteCount(R__s, R__c, RooDalitzPhaseSpaceAmplitude::IsA());
   } else {
      R__c = R__b.WriteVersion(RooDalitzPhaseSpaceAmplitude::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      m12.Streamer(R__b);
      m23.Streamer(R__b);
      R__b << const_cast<  double &>( m1 );
      R__b << const_cast<  double &>( m2 );
      R__b << const_cast<  double &>( m3 );
      R__b << const_cast<  double &>( mM );
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooDalitzPhaseSpaceAmplitude::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooDalitzPhaseSpaceAmplitude.
      TClass *R__cl = ::RooDalitzPhaseSpaceAmplitude::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m12", &m12);
      R__insp.InspectMember(m12, "m12.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m23", &m23);
      R__insp.InspectMember(m23, "m23.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m1", &m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m2", &m2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m3", &m3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mM", &mM);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooDalitzPhaseSpaceAmplitude(void *p) {
      return  p ? new(p) ::RooDalitzPhaseSpaceAmplitude : new ::RooDalitzPhaseSpaceAmplitude;
   }
   static void *newArray_RooDalitzPhaseSpaceAmplitude(Long_t nElements, void *p) {
      return p ? new(p) ::RooDalitzPhaseSpaceAmplitude[nElements] : new ::RooDalitzPhaseSpaceAmplitude[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooDalitzPhaseSpaceAmplitude(void *p) {
      delete ((::RooDalitzPhaseSpaceAmplitude*)p);
   }
   static void deleteArray_RooDalitzPhaseSpaceAmplitude(void *p) {
      delete [] ((::RooDalitzPhaseSpaceAmplitude*)p);
   }
   static void destruct_RooDalitzPhaseSpaceAmplitude(void *p) {
      typedef ::RooDalitzPhaseSpaceAmplitude current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooDalitzPhaseSpaceAmplitude(TBuffer &buf, void *obj) {
      ((::RooDalitzPhaseSpaceAmplitude*)obj)->::RooDalitzPhaseSpaceAmplitude::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooDalitzPhaseSpaceAmplitude

//______________________________________________________________________________
void RooDalitzCubicPolynomial::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooDalitzCubicPolynomial.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      m12.Streamer(R__b);
      m23.Streamer(R__b);
      E_x.Streamer(R__b);
      E_y.Streamer(R__b);
      E_xx.Streamer(R__b);
      E_xy.Streamer(R__b);
      E_yy.Streamer(R__b);
      E_xxx.Streamer(R__b);
      E_xxy.Streamer(R__b);
      E_xyy.Streamer(R__b);
      E_yyy.Streamer(R__b);
      R__b >> const_cast<  double &>( m1 );
      R__b >> const_cast<  double &>( m2 );
      R__b >> const_cast<  double &>( m3 );
      R__b >> const_cast<  double &>( mM );
      R__b >> const_cast<  double &>( m12_offset );
      R__b >> const_cast<  double &>( m23_offset );
      R__b.CheckByteCount(R__s, R__c, RooDalitzCubicPolynomial::IsA());
   } else {
      R__c = R__b.WriteVersion(RooDalitzCubicPolynomial::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      m12.Streamer(R__b);
      m23.Streamer(R__b);
      E_x.Streamer(R__b);
      E_y.Streamer(R__b);
      E_xx.Streamer(R__b);
      E_xy.Streamer(R__b);
      E_yy.Streamer(R__b);
      E_xxx.Streamer(R__b);
      E_xxy.Streamer(R__b);
      E_xyy.Streamer(R__b);
      E_yyy.Streamer(R__b);
      R__b << const_cast<  double &>( m1 );
      R__b << const_cast<  double &>( m2 );
      R__b << const_cast<  double &>( m3 );
      R__b << const_cast<  double &>( mM );
      R__b << const_cast<  double &>( m12_offset );
      R__b << const_cast<  double &>( m23_offset );
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooDalitzCubicPolynomial::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooDalitzCubicPolynomial.
      TClass *R__cl = ::RooDalitzCubicPolynomial::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m12", &m12);
      R__insp.InspectMember(m12, "m12.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m23", &m23);
      R__insp.InspectMember(m23, "m23.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_x", &E_x);
      R__insp.InspectMember(E_x, "E_x.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_y", &E_y);
      R__insp.InspectMember(E_y, "E_y.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_xx", &E_xx);
      R__insp.InspectMember(E_xx, "E_xx.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_xy", &E_xy);
      R__insp.InspectMember(E_xy, "E_xy.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_yy", &E_yy);
      R__insp.InspectMember(E_yy, "E_yy.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_xxx", &E_xxx);
      R__insp.InspectMember(E_xxx, "E_xxx.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_xxy", &E_xxy);
      R__insp.InspectMember(E_xxy, "E_xxy.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_xyy", &E_xyy);
      R__insp.InspectMember(E_xyy, "E_xyy.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_yyy", &E_yyy);
      R__insp.InspectMember(E_yyy, "E_yyy.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m1", &m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m2", &m2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m3", &m3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mM", &mM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m12_offset", &m12_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m23_offset", &m23_offset);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooDalitzCubicPolynomial(void *p) {
      return  p ? new(p) ::RooDalitzCubicPolynomial : new ::RooDalitzCubicPolynomial;
   }
   static void *newArray_RooDalitzCubicPolynomial(Long_t nElements, void *p) {
      return p ? new(p) ::RooDalitzCubicPolynomial[nElements] : new ::RooDalitzCubicPolynomial[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooDalitzCubicPolynomial(void *p) {
      delete ((::RooDalitzCubicPolynomial*)p);
   }
   static void deleteArray_RooDalitzCubicPolynomial(void *p) {
      delete [] ((::RooDalitzCubicPolynomial*)p);
   }
   static void destruct_RooDalitzCubicPolynomial(void *p) {
      typedef ::RooDalitzCubicPolynomial current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooDalitzCubicPolynomial(TBuffer &buf, void *obj) {
      ((::RooDalitzCubicPolynomial*)obj)->::RooDalitzCubicPolynomial::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooDalitzCubicPolynomial

//______________________________________________________________________________
void RooDalitzCubicPolynomialSymmetric::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooDalitzCubicPolynomialSymmetric.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      m12.Streamer(R__b);
      m23.Streamer(R__b);
      E_1.Streamer(R__b);
      E_2.Streamer(R__b);
      E_3.Streamer(R__b);
      E_xy.Streamer(R__b);
      E_xyn.Streamer(R__b);
      R__b >> const_cast<  double &>( m1 );
      R__b >> const_cast<  double &>( m2 );
      R__b >> const_cast<  double &>( m3 );
      R__b >> const_cast<  double &>( mM );
      R__b >> const_cast<  double &>( m12_offset );
      R__b >> const_cast<  double &>( m23_offset );
      R__b.CheckByteCount(R__s, R__c, RooDalitzCubicPolynomialSymmetric::IsA());
   } else {
      R__c = R__b.WriteVersion(RooDalitzCubicPolynomialSymmetric::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      m12.Streamer(R__b);
      m23.Streamer(R__b);
      E_1.Streamer(R__b);
      E_2.Streamer(R__b);
      E_3.Streamer(R__b);
      E_xy.Streamer(R__b);
      E_xyn.Streamer(R__b);
      R__b << const_cast<  double &>( m1 );
      R__b << const_cast<  double &>( m2 );
      R__b << const_cast<  double &>( m3 );
      R__b << const_cast<  double &>( mM );
      R__b << const_cast<  double &>( m12_offset );
      R__b << const_cast<  double &>( m23_offset );
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooDalitzCubicPolynomialSymmetric::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooDalitzCubicPolynomialSymmetric.
      TClass *R__cl = ::RooDalitzCubicPolynomialSymmetric::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m12", &m12);
      R__insp.InspectMember(m12, "m12.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m23", &m23);
      R__insp.InspectMember(m23, "m23.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_1", &E_1);
      R__insp.InspectMember(E_1, "E_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_2", &E_2);
      R__insp.InspectMember(E_2, "E_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_3", &E_3);
      R__insp.InspectMember(E_3, "E_3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_xy", &E_xy);
      R__insp.InspectMember(E_xy, "E_xy.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_xyn", &E_xyn);
      R__insp.InspectMember(E_xyn, "E_xyn.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m1", &m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m2", &m2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m3", &m3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mM", &mM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m12_offset", &m12_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m23_offset", &m23_offset);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooDalitzCubicPolynomialSymmetric(void *p) {
      return  p ? new(p) ::RooDalitzCubicPolynomialSymmetric : new ::RooDalitzCubicPolynomialSymmetric;
   }
   static void *newArray_RooDalitzCubicPolynomialSymmetric(Long_t nElements, void *p) {
      return p ? new(p) ::RooDalitzCubicPolynomialSymmetric[nElements] : new ::RooDalitzCubicPolynomialSymmetric[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooDalitzCubicPolynomialSymmetric(void *p) {
      delete ((::RooDalitzCubicPolynomialSymmetric*)p);
   }
   static void deleteArray_RooDalitzCubicPolynomialSymmetric(void *p) {
      delete [] ((::RooDalitzCubicPolynomialSymmetric*)p);
   }
   static void destruct_RooDalitzCubicPolynomialSymmetric(void *p) {
      typedef ::RooDalitzCubicPolynomialSymmetric current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooDalitzCubicPolynomialSymmetric(TBuffer &buf, void *obj) {
      ((::RooDalitzCubicPolynomialSymmetric*)obj)->::RooDalitzCubicPolynomialSymmetric::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooDalitzCubicPolynomialSymmetric

//______________________________________________________________________________
void RooTwoBodyThresholdFunction::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooTwoBodyThresholdFunction.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      a.Streamer(R__b);
      R__b >> const_cast<  double &>( m_min );
      R__b.CheckByteCount(R__s, R__c, RooTwoBodyThresholdFunction::IsA());
   } else {
      R__c = R__b.WriteVersion(RooTwoBodyThresholdFunction::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      a.Streamer(R__b);
      R__b << const_cast<  double &>( m_min );
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooTwoBodyThresholdFunction::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooTwoBodyThresholdFunction.
      TClass *R__cl = ::RooTwoBodyThresholdFunction::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.InspectMember(m, "m.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a", &a);
      R__insp.InspectMember(a, "a.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_min", &m_min);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooTwoBodyThresholdFunction(void *p) {
      return  p ? new(p) ::RooTwoBodyThresholdFunction : new ::RooTwoBodyThresholdFunction;
   }
   static void *newArray_RooTwoBodyThresholdFunction(Long_t nElements, void *p) {
      return p ? new(p) ::RooTwoBodyThresholdFunction[nElements] : new ::RooTwoBodyThresholdFunction[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooTwoBodyThresholdFunction(void *p) {
      delete ((::RooTwoBodyThresholdFunction*)p);
   }
   static void deleteArray_RooTwoBodyThresholdFunction(void *p) {
      delete [] ((::RooTwoBodyThresholdFunction*)p);
   }
   static void destruct_RooTwoBodyThresholdFunction(void *p) {
      typedef ::RooTwoBodyThresholdFunction current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooTwoBodyThresholdFunction(TBuffer &buf, void *obj) {
      ((::RooTwoBodyThresholdFunction*)obj)->::RooTwoBodyThresholdFunction::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooTwoBodyThresholdFunction

//______________________________________________________________________________
void RooMassHelicityAngles_TransformedBase::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooMassHelicityAngles_TransformedBase.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      phi.Streamer(R__b);
      cos_th1.Streamer(R__b);
      cos_th2.Streamer(R__b);
      mass_0.Streamer(R__b);
      width_0.Streamer(R__b);
      a.Streamer(R__b);
      b.Streamer(R__b);
      mass_1.Streamer(R__b);
      width_1.Streamer(R__b);
      r_1.Streamer(R__b);
      mass_2.Streamer(R__b);
      width_2.Streamer(R__b);
      r_2.Streamer(R__b);
      amp_00.Streamer(R__b);
      phase_00.Streamer(R__b);
      amp_10.Streamer(R__b);
      phase_10.Streamer(R__b);
      amp_1para.Streamer(R__b);
      phase_1para.Streamer(R__b);
      amp_1perp.Streamer(R__b);
      phase_1perp.Streamer(R__b);
      amp_20.Streamer(R__b);
      phase_20.Streamer(R__b);
      amp_2para.Streamer(R__b);
      phase_2para.Streamer(R__b);
      amp_2perp.Streamer(R__b);
      phase_2perp.Streamer(R__b);
      R__b >> const_cast<  double &>( m_Pi );
      R__b >> const_cast<  double &>( m_K );
      R__b >> const_cast<  double &>( m_Phi );
      R__b >> const_cast<  double &>( m_B0 );
      void *ptr_m_acceptance_function = (void*)&m_acceptance_function;
      R__b >> *reinterpret_cast<Int_t*>(ptr_m_acceptance_function);
      R__b.CheckByteCount(R__s, R__c, RooMassHelicityAngles_TransformedBase::IsA());
   } else {
      R__c = R__b.WriteVersion(RooMassHelicityAngles_TransformedBase::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      phi.Streamer(R__b);
      cos_th1.Streamer(R__b);
      cos_th2.Streamer(R__b);
      mass_0.Streamer(R__b);
      width_0.Streamer(R__b);
      a.Streamer(R__b);
      b.Streamer(R__b);
      mass_1.Streamer(R__b);
      width_1.Streamer(R__b);
      r_1.Streamer(R__b);
      mass_2.Streamer(R__b);
      width_2.Streamer(R__b);
      r_2.Streamer(R__b);
      amp_00.Streamer(R__b);
      phase_00.Streamer(R__b);
      amp_10.Streamer(R__b);
      phase_10.Streamer(R__b);
      amp_1para.Streamer(R__b);
      phase_1para.Streamer(R__b);
      amp_1perp.Streamer(R__b);
      phase_1perp.Streamer(R__b);
      amp_20.Streamer(R__b);
      phase_20.Streamer(R__b);
      amp_2para.Streamer(R__b);
      phase_2para.Streamer(R__b);
      amp_2perp.Streamer(R__b);
      phase_2perp.Streamer(R__b);
      R__b << const_cast<  double &>( m_Pi );
      R__b << const_cast<  double &>( m_K );
      R__b << const_cast<  double &>( m_Phi );
      R__b << const_cast<  double &>( m_B0 );
      R__b << (Int_t)m_acceptance_function;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooMassHelicityAngles_TransformedBase::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooMassHelicityAngles_TransformedBase.
      TClass *R__cl = ::RooMassHelicityAngles_TransformedBase::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.InspectMember(m, "m.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.InspectMember(phi, "phi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cos_th1", &cos_th1);
      R__insp.InspectMember(cos_th1, "cos_th1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cos_th2", &cos_th2);
      R__insp.InspectMember(cos_th2, "cos_th2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_0", &mass_0);
      R__insp.InspectMember(mass_0, "mass_0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_0", &width_0);
      R__insp.InspectMember(width_0, "width_0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a", &a);
      R__insp.InspectMember(a, "a.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "b", &b);
      R__insp.InspectMember(b, "b.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_1", &mass_1);
      R__insp.InspectMember(mass_1, "mass_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_1", &width_1);
      R__insp.InspectMember(width_1, "width_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r_1", &r_1);
      R__insp.InspectMember(r_1, "r_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_2", &mass_2);
      R__insp.InspectMember(mass_2, "mass_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_2", &width_2);
      R__insp.InspectMember(width_2, "width_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r_2", &r_2);
      R__insp.InspectMember(r_2, "r_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_00", &amp_00);
      R__insp.InspectMember(amp_00, "amp_00.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_00", &phase_00);
      R__insp.InspectMember(phase_00, "phase_00.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_10", &amp_10);
      R__insp.InspectMember(amp_10, "amp_10.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_10", &phase_10);
      R__insp.InspectMember(phase_10, "phase_10.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_1para", &amp_1para);
      R__insp.InspectMember(amp_1para, "amp_1para.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_1para", &phase_1para);
      R__insp.InspectMember(phase_1para, "phase_1para.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_1perp", &amp_1perp);
      R__insp.InspectMember(amp_1perp, "amp_1perp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_1perp", &phase_1perp);
      R__insp.InspectMember(phase_1perp, "phase_1perp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_20", &amp_20);
      R__insp.InspectMember(amp_20, "amp_20.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_20", &phase_20);
      R__insp.InspectMember(phase_20, "phase_20.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_2para", &amp_2para);
      R__insp.InspectMember(amp_2para, "amp_2para.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_2para", &phase_2para);
      R__insp.InspectMember(phase_2para, "phase_2para.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_2perp", &amp_2perp);
      R__insp.InspectMember(amp_2perp, "amp_2perp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_2perp", &phase_2perp);
      R__insp.InspectMember(phase_2perp, "phase_2perp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Pi", &m_Pi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_K", &m_K);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Phi", &m_Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_B0", &m_B0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_acceptance_function", &m_acceptance_function);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_norm_cache_integrator", &m_norm_cache_integrator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_real_cache_integrator", &m_real_cache_integrator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_imag_cache_integrator", &m_imag_cache_integrator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_norm_cache_integrator_phi_th1_th2", &m_norm_cache_integrator_phi_th1_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_real_cache_integrator_phi_th1_th2", &m_real_cache_integrator_phi_th1_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_imag_cache_integrator_phi_th1_th2", &m_imag_cache_integrator_phi_th1_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_norm_cache_integrator_m_th1_th2", &m_norm_cache_integrator_m_th1_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_real_cache_integrator_m_th1_th2", &m_real_cache_integrator_m_th1_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_imag_cache_integrator_m_th1_th2", &m_imag_cache_integrator_m_th1_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_norm_cache_integrator_m_phi_th2", &m_norm_cache_integrator_m_phi_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_real_cache_integrator_m_phi_th2", &m_real_cache_integrator_m_phi_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_imag_cache_integrator_m_phi_th2", &m_imag_cache_integrator_m_phi_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_norm_cache_integrator_m_phi_th1", &m_norm_cache_integrator_m_phi_th1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_real_cache_integrator_m_phi_th1", &m_real_cache_integrator_m_phi_th1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_imag_cache_integrator_m_phi_th1", &m_imag_cache_integrator_m_phi_th1);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooMassHelicityAngles_TransformedBase(void *p) {
      return  p ? new(p) ::RooMassHelicityAngles_TransformedBase : new ::RooMassHelicityAngles_TransformedBase;
   }
   static void *newArray_RooMassHelicityAngles_TransformedBase(Long_t nElements, void *p) {
      return p ? new(p) ::RooMassHelicityAngles_TransformedBase[nElements] : new ::RooMassHelicityAngles_TransformedBase[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooMassHelicityAngles_TransformedBase(void *p) {
      delete ((::RooMassHelicityAngles_TransformedBase*)p);
   }
   static void deleteArray_RooMassHelicityAngles_TransformedBase(void *p) {
      delete [] ((::RooMassHelicityAngles_TransformedBase*)p);
   }
   static void destruct_RooMassHelicityAngles_TransformedBase(void *p) {
      typedef ::RooMassHelicityAngles_TransformedBase current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooMassHelicityAngles_TransformedBase(TBuffer &buf, void *obj) {
      ((::RooMassHelicityAngles_TransformedBase*)obj)->::RooMassHelicityAngles_TransformedBase::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooMassHelicityAngles_TransformedBase

//______________________________________________________________________________
void RooMassHelicityAnglesCPV::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooMassHelicityAnglesCPV.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      phi.Streamer(R__b);
      cos_th1.Streamer(R__b);
      cos_th2.Streamer(R__b);
      channel.Streamer(R__b);
      mass_0.Streamer(R__b);
      width_0.Streamer(R__b);
      a.Streamer(R__b);
      b.Streamer(R__b);
      mass_1.Streamer(R__b);
      width_1.Streamer(R__b);
      r_1.Streamer(R__b);
      mass_2.Streamer(R__b);
      width_2.Streamer(R__b);
      r_2.Streamer(R__b);
      amp_00.Streamer(R__b);
      phase_00.Streamer(R__b);
      amp_10.Streamer(R__b);
      phase_10.Streamer(R__b);
      amp_1para.Streamer(R__b);
      phase_1para.Streamer(R__b);
      amp_1perp.Streamer(R__b);
      phase_1perp.Streamer(R__b);
      amp_20.Streamer(R__b);
      phase_20.Streamer(R__b);
      amp_2para.Streamer(R__b);
      phase_2para.Streamer(R__b);
      amp_2perp.Streamer(R__b);
      phase_2perp.Streamer(R__b);
      amp_00_CC.Streamer(R__b);
      phase_00_CC.Streamer(R__b);
      amp_10_CC.Streamer(R__b);
      phase_10_CC.Streamer(R__b);
      amp_1para_CC.Streamer(R__b);
      phase_1para_CC.Streamer(R__b);
      amp_1perp_CC.Streamer(R__b);
      phase_1perp_CC.Streamer(R__b);
      amp_20_CC.Streamer(R__b);
      phase_20_CC.Streamer(R__b);
      amp_2para_CC.Streamer(R__b);
      phase_2para_CC.Streamer(R__b);
      amp_2perp_CC.Streamer(R__b);
      phase_2perp_CC.Streamer(R__b);
      R__b >> const_cast<  double &>( m_Pi );
      R__b >> const_cast<  double &>( m_K );
      R__b >> const_cast<  double &>( m_Phi );
      R__b >> const_cast<  double &>( m_B0 );
      void *ptr_m_acceptance_function = (void*)&m_acceptance_function;
      R__b >> *reinterpret_cast<Int_t*>(ptr_m_acceptance_function);
      R__b.CheckByteCount(R__s, R__c, RooMassHelicityAnglesCPV::IsA());
   } else {
      R__c = R__b.WriteVersion(RooMassHelicityAnglesCPV::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      phi.Streamer(R__b);
      cos_th1.Streamer(R__b);
      cos_th2.Streamer(R__b);
      channel.Streamer(R__b);
      mass_0.Streamer(R__b);
      width_0.Streamer(R__b);
      a.Streamer(R__b);
      b.Streamer(R__b);
      mass_1.Streamer(R__b);
      width_1.Streamer(R__b);
      r_1.Streamer(R__b);
      mass_2.Streamer(R__b);
      width_2.Streamer(R__b);
      r_2.Streamer(R__b);
      amp_00.Streamer(R__b);
      phase_00.Streamer(R__b);
      amp_10.Streamer(R__b);
      phase_10.Streamer(R__b);
      amp_1para.Streamer(R__b);
      phase_1para.Streamer(R__b);
      amp_1perp.Streamer(R__b);
      phase_1perp.Streamer(R__b);
      amp_20.Streamer(R__b);
      phase_20.Streamer(R__b);
      amp_2para.Streamer(R__b);
      phase_2para.Streamer(R__b);
      amp_2perp.Streamer(R__b);
      phase_2perp.Streamer(R__b);
      amp_00_CC.Streamer(R__b);
      phase_00_CC.Streamer(R__b);
      amp_10_CC.Streamer(R__b);
      phase_10_CC.Streamer(R__b);
      amp_1para_CC.Streamer(R__b);
      phase_1para_CC.Streamer(R__b);
      amp_1perp_CC.Streamer(R__b);
      phase_1perp_CC.Streamer(R__b);
      amp_20_CC.Streamer(R__b);
      phase_20_CC.Streamer(R__b);
      amp_2para_CC.Streamer(R__b);
      phase_2para_CC.Streamer(R__b);
      amp_2perp_CC.Streamer(R__b);
      phase_2perp_CC.Streamer(R__b);
      R__b << const_cast<  double &>( m_Pi );
      R__b << const_cast<  double &>( m_K );
      R__b << const_cast<  double &>( m_Phi );
      R__b << const_cast<  double &>( m_B0 );
      R__b << (Int_t)m_acceptance_function;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooMassHelicityAnglesCPV::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooMassHelicityAnglesCPV.
      TClass *R__cl = ::RooMassHelicityAnglesCPV::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.InspectMember(m, "m.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.InspectMember(phi, "phi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cos_th1", &cos_th1);
      R__insp.InspectMember(cos_th1, "cos_th1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cos_th2", &cos_th2);
      R__insp.InspectMember(cos_th2, "cos_th2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channel", &channel);
      R__insp.InspectMember(channel, "channel.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_0", &mass_0);
      R__insp.InspectMember(mass_0, "mass_0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_0", &width_0);
      R__insp.InspectMember(width_0, "width_0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a", &a);
      R__insp.InspectMember(a, "a.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "b", &b);
      R__insp.InspectMember(b, "b.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_1", &mass_1);
      R__insp.InspectMember(mass_1, "mass_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_1", &width_1);
      R__insp.InspectMember(width_1, "width_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r_1", &r_1);
      R__insp.InspectMember(r_1, "r_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_2", &mass_2);
      R__insp.InspectMember(mass_2, "mass_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_2", &width_2);
      R__insp.InspectMember(width_2, "width_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r_2", &r_2);
      R__insp.InspectMember(r_2, "r_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_00", &amp_00);
      R__insp.InspectMember(amp_00, "amp_00.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_00", &phase_00);
      R__insp.InspectMember(phase_00, "phase_00.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_10", &amp_10);
      R__insp.InspectMember(amp_10, "amp_10.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_10", &phase_10);
      R__insp.InspectMember(phase_10, "phase_10.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_1para", &amp_1para);
      R__insp.InspectMember(amp_1para, "amp_1para.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_1para", &phase_1para);
      R__insp.InspectMember(phase_1para, "phase_1para.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_1perp", &amp_1perp);
      R__insp.InspectMember(amp_1perp, "amp_1perp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_1perp", &phase_1perp);
      R__insp.InspectMember(phase_1perp, "phase_1perp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_20", &amp_20);
      R__insp.InspectMember(amp_20, "amp_20.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_20", &phase_20);
      R__insp.InspectMember(phase_20, "phase_20.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_2para", &amp_2para);
      R__insp.InspectMember(amp_2para, "amp_2para.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_2para", &phase_2para);
      R__insp.InspectMember(phase_2para, "phase_2para.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_2perp", &amp_2perp);
      R__insp.InspectMember(amp_2perp, "amp_2perp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_2perp", &phase_2perp);
      R__insp.InspectMember(phase_2perp, "phase_2perp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_00_CC", &amp_00_CC);
      R__insp.InspectMember(amp_00_CC, "amp_00_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_00_CC", &phase_00_CC);
      R__insp.InspectMember(phase_00_CC, "phase_00_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_10_CC", &amp_10_CC);
      R__insp.InspectMember(amp_10_CC, "amp_10_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_10_CC", &phase_10_CC);
      R__insp.InspectMember(phase_10_CC, "phase_10_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_1para_CC", &amp_1para_CC);
      R__insp.InspectMember(amp_1para_CC, "amp_1para_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_1para_CC", &phase_1para_CC);
      R__insp.InspectMember(phase_1para_CC, "phase_1para_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_1perp_CC", &amp_1perp_CC);
      R__insp.InspectMember(amp_1perp_CC, "amp_1perp_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_1perp_CC", &phase_1perp_CC);
      R__insp.InspectMember(phase_1perp_CC, "phase_1perp_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_20_CC", &amp_20_CC);
      R__insp.InspectMember(amp_20_CC, "amp_20_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_20_CC", &phase_20_CC);
      R__insp.InspectMember(phase_20_CC, "phase_20_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_2para_CC", &amp_2para_CC);
      R__insp.InspectMember(amp_2para_CC, "amp_2para_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_2para_CC", &phase_2para_CC);
      R__insp.InspectMember(phase_2para_CC, "phase_2para_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_2perp_CC", &amp_2perp_CC);
      R__insp.InspectMember(amp_2perp_CC, "amp_2perp_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_2perp_CC", &phase_2perp_CC);
      R__insp.InspectMember(phase_2perp_CC, "phase_2perp_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Pi", &m_Pi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_K", &m_K);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Phi", &m_Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_B0", &m_B0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_acceptance_function", &m_acceptance_function);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_norm_cache_integrator", &m_norm_cache_integrator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_real_cache_integrator", &m_real_cache_integrator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_imag_cache_integrator", &m_imag_cache_integrator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_norm_cache_integrator_phi_th1_th2", &m_norm_cache_integrator_phi_th1_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_real_cache_integrator_phi_th1_th2", &m_real_cache_integrator_phi_th1_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_imag_cache_integrator_phi_th1_th2", &m_imag_cache_integrator_phi_th1_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_norm_cache_integrator_m_th1_th2", &m_norm_cache_integrator_m_th1_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_real_cache_integrator_m_th1_th2", &m_real_cache_integrator_m_th1_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_imag_cache_integrator_m_th1_th2", &m_imag_cache_integrator_m_th1_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_norm_cache_integrator_m_phi_th2", &m_norm_cache_integrator_m_phi_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_real_cache_integrator_m_phi_th2", &m_real_cache_integrator_m_phi_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_imag_cache_integrator_m_phi_th2", &m_imag_cache_integrator_m_phi_th2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_norm_cache_integrator_m_phi_th1", &m_norm_cache_integrator_m_phi_th1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_real_cache_integrator_m_phi_th1", &m_real_cache_integrator_m_phi_th1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_imag_cache_integrator_m_phi_th1", &m_imag_cache_integrator_m_phi_th1);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooMassHelicityAnglesCPV(void *p) {
      return  p ? new(p) ::RooMassHelicityAnglesCPV : new ::RooMassHelicityAnglesCPV;
   }
   static void *newArray_RooMassHelicityAnglesCPV(Long_t nElements, void *p) {
      return p ? new(p) ::RooMassHelicityAnglesCPV[nElements] : new ::RooMassHelicityAnglesCPV[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooMassHelicityAnglesCPV(void *p) {
      delete ((::RooMassHelicityAnglesCPV*)p);
   }
   static void deleteArray_RooMassHelicityAnglesCPV(void *p) {
      delete [] ((::RooMassHelicityAnglesCPV*)p);
   }
   static void destruct_RooMassHelicityAnglesCPV(void *p) {
      typedef ::RooMassHelicityAnglesCPV current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooMassHelicityAnglesCPV(TBuffer &buf, void *obj) {
      ((::RooMassHelicityAnglesCPV*)obj)->::RooMassHelicityAnglesCPV::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooMassHelicityAnglesCPV

//______________________________________________________________________________
void RooCutPdf::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooCutPdf.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      x.Streamer(R__b);
      R__b >> const_cast<  double &>( m_cut_value );
      R__b >> const_cast<  bool &>( m_left_non_zero );
      R__b.CheckByteCount(R__s, R__c, RooCutPdf::IsA());
   } else {
      R__c = R__b.WriteVersion(RooCutPdf::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      x.Streamer(R__b);
      R__b << const_cast<  double &>( m_cut_value );
      R__b << const_cast<  bool &>( m_left_non_zero );
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooCutPdf::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooCutPdf.
      TClass *R__cl = ::RooCutPdf::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.InspectMember(x, "x.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_cut_value", &m_cut_value);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_left_non_zero", &m_left_non_zero);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooCutPdf(void *p) {
      return  p ? new(p) ::RooCutPdf : new ::RooCutPdf;
   }
   static void *newArray_RooCutPdf(Long_t nElements, void *p) {
      return p ? new(p) ::RooCutPdf[nElements] : new ::RooCutPdf[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooCutPdf(void *p) {
      delete ((::RooCutPdf*)p);
   }
   static void deleteArray_RooCutPdf(void *p) {
      delete [] ((::RooCutPdf*)p);
   }
   static void destruct_RooCutPdf(void *p) {
      typedef ::RooCutPdf current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooCutPdf(TBuffer &buf, void *obj) {
      ((::RooCutPdf*)obj)->::RooCutPdf::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooCutPdf

//______________________________________________________________________________
void RooChebychevCut::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooChebychevCut.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      _x.Streamer(R__b);
      _coefList.Streamer(R__b);
      R__b >> _cut_value;
      R__b.CheckByteCount(R__s, R__c, RooChebychevCut::IsA());
   } else {
      R__c = R__b.WriteVersion(RooChebychevCut::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      _x.Streamer(R__b);
      _coefList.Streamer(R__b);
      R__b << _cut_value;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooChebychevCut::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooChebychevCut.
      TClass *R__cl = ::RooChebychevCut::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_x", &_x);
      R__insp.InspectMember(_x, "_x.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_coefList", &_coefList);
      R__insp.InspectMember(_coefList, "_coefList.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_value", &_cut_value);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooChebychevCut(void *p) {
      return  p ? new(p) ::RooChebychevCut : new ::RooChebychevCut;
   }
   static void *newArray_RooChebychevCut(Long_t nElements, void *p) {
      return p ? new(p) ::RooChebychevCut[nElements] : new ::RooChebychevCut[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooChebychevCut(void *p) {
      delete ((::RooChebychevCut*)p);
   }
   static void deleteArray_RooChebychevCut(void *p) {
      delete [] ((::RooChebychevCut*)p);
   }
   static void destruct_RooChebychevCut(void *p) {
      typedef ::RooChebychevCut current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooChebychevCut(TBuffer &buf, void *obj) {
      ((::RooChebychevCut*)obj)->::RooChebychevCut::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooChebychevCut

//______________________________________________________________________________
void RooCategoryPdf::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooCategoryPdf.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      c.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, RooCategoryPdf::IsA());
   } else {
      R__c = R__b.WriteVersion(RooCategoryPdf::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      c.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooCategoryPdf::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooCategoryPdf.
      TClass *R__cl = ::RooCategoryPdf::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c", &c);
      R__insp.InspectMember(c, "c.");
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooCategoryPdf(void *p) {
      return  p ? new(p) ::RooCategoryPdf : new ::RooCategoryPdf;
   }
   static void *newArray_RooCategoryPdf(Long_t nElements, void *p) {
      return p ? new(p) ::RooCategoryPdf[nElements] : new ::RooCategoryPdf[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooCategoryPdf(void *p) {
      delete ((::RooCategoryPdf*)p);
   }
   static void deleteArray_RooCategoryPdf(void *p) {
      delete [] ((::RooCategoryPdf*)p);
   }
   static void destruct_RooCategoryPdf(void *p) {
      typedef ::RooCategoryPdf current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooCategoryPdf(TBuffer &buf, void *obj) {
      ((::RooCategoryPdf*)obj)->::RooCategoryPdf::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooCategoryPdf

//______________________________________________________________________________
void RooFlatteAndNonRes::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooFlatteAndNonRes.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      amp_flatte.Streamer(R__b);
      phase_flatte.Streamer(R__b);
      mass_R.Streamer(R__b);
      g_1.Streamer(R__b);
      g_2.Streamer(R__b);
      g_3.Streamer(R__b);
      amp_nonres.Streamer(R__b);
      phase_nonres.Streamer(R__b);
      R__b >> const_cast<  double &>( m_1a );
      R__b >> const_cast<  double &>( m_1b );
      R__b >> const_cast<  double &>( m_2a );
      R__b >> const_cast<  double &>( m_2b );
      R__b >> const_cast<  double &>( m_3a );
      R__b >> const_cast<  double &>( m_3b );
      R__b >> const_cast<  double &>( m1 );
      R__b >> const_cast<  double &>( m2 );
      R__b >> const_cast<  double &>( m3 );
      R__b >> const_cast<  double &>( mM );
      R__b.CheckByteCount(R__s, R__c, RooFlatteAndNonRes::IsA());
   } else {
      R__c = R__b.WriteVersion(RooFlatteAndNonRes::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      amp_flatte.Streamer(R__b);
      phase_flatte.Streamer(R__b);
      mass_R.Streamer(R__b);
      g_1.Streamer(R__b);
      g_2.Streamer(R__b);
      g_3.Streamer(R__b);
      amp_nonres.Streamer(R__b);
      phase_nonres.Streamer(R__b);
      R__b << const_cast<  double &>( m_1a );
      R__b << const_cast<  double &>( m_1b );
      R__b << const_cast<  double &>( m_2a );
      R__b << const_cast<  double &>( m_2b );
      R__b << const_cast<  double &>( m_3a );
      R__b << const_cast<  double &>( m_3b );
      R__b << const_cast<  double &>( m1 );
      R__b << const_cast<  double &>( m2 );
      R__b << const_cast<  double &>( m3 );
      R__b << const_cast<  double &>( mM );
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooFlatteAndNonRes::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooFlatteAndNonRes.
      TClass *R__cl = ::RooFlatteAndNonRes::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.InspectMember(m, "m.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_flatte", &amp_flatte);
      R__insp.InspectMember(amp_flatte, "amp_flatte.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_flatte", &phase_flatte);
      R__insp.InspectMember(phase_flatte, "phase_flatte.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_R", &mass_R);
      R__insp.InspectMember(mass_R, "mass_R.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "g_1", &g_1);
      R__insp.InspectMember(g_1, "g_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "g_2", &g_2);
      R__insp.InspectMember(g_2, "g_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "g_3", &g_3);
      R__insp.InspectMember(g_3, "g_3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_nonres", &amp_nonres);
      R__insp.InspectMember(amp_nonres, "amp_nonres.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_nonres", &phase_nonres);
      R__insp.InspectMember(phase_nonres, "phase_nonres.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_1a", &m_1a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_1b", &m_1b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_2a", &m_2a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_2b", &m_2b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_3a", &m_3a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_3b", &m_3b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m1", &m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m2", &m2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m3", &m3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mM", &mM);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooFlatteAndNonRes(void *p) {
      return  p ? new(p) ::RooFlatteAndNonRes : new ::RooFlatteAndNonRes;
   }
   static void *newArray_RooFlatteAndNonRes(Long_t nElements, void *p) {
      return p ? new(p) ::RooFlatteAndNonRes[nElements] : new ::RooFlatteAndNonRes[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooFlatteAndNonRes(void *p) {
      delete ((::RooFlatteAndNonRes*)p);
   }
   static void deleteArray_RooFlatteAndNonRes(void *p) {
      delete [] ((::RooFlatteAndNonRes*)p);
   }
   static void destruct_RooFlatteAndNonRes(void *p) {
      typedef ::RooFlatteAndNonRes current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooFlatteAndNonRes(TBuffer &buf, void *obj) {
      ((::RooFlatteAndNonRes*)obj)->::RooFlatteAndNonRes::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooFlatteAndNonRes

//______________________________________________________________________________
void RooKKInterference::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooKKInterference.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      phi.Streamer(R__b);
      cos_th1.Streamer(R__b);
      cos_th2.Streamer(R__b);
      amp_flatte.Streamer(R__b);
      phase_flatte.Streamer(R__b);
      mass_flatte.Streamer(R__b);
      g_1.Streamer(R__b);
      g_2.Streamer(R__b);
      g_3.Streamer(R__b);
      amp_phi_long.Streamer(R__b);
      phase_phi_long.Streamer(R__b);
      amp_phi_para.Streamer(R__b);
      phase_phi_para.Streamer(R__b);
      amp_phi_perp.Streamer(R__b);
      phase_phi_perp.Streamer(R__b);
      mass_phi.Streamer(R__b);
      width_phi.Streamer(R__b);
      r_phi.Streamer(R__b);
      J_phi.Streamer(R__b);
      void *ptr_m_acceptance_function = (void*)&m_acceptance_function;
      R__b >> *reinterpret_cast<Int_t*>(ptr_m_acceptance_function);
      R__b >> const_cast<  double &>( m_1a );
      R__b >> const_cast<  double &>( m_1b );
      R__b >> const_cast<  double &>( m_2a );
      R__b >> const_cast<  double &>( m_2b );
      R__b >> const_cast<  double &>( m_3a );
      R__b >> const_cast<  double &>( m_3b );
      R__b >> const_cast<  double &>( m1 );
      R__b >> const_cast<  double &>( m2 );
      R__b >> const_cast<  double &>( m3 );
      R__b >> const_cast<  double &>( mM );
      R__b.CheckByteCount(R__s, R__c, RooKKInterference::IsA());
   } else {
      R__c = R__b.WriteVersion(RooKKInterference::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      phi.Streamer(R__b);
      cos_th1.Streamer(R__b);
      cos_th2.Streamer(R__b);
      amp_flatte.Streamer(R__b);
      phase_flatte.Streamer(R__b);
      mass_flatte.Streamer(R__b);
      g_1.Streamer(R__b);
      g_2.Streamer(R__b);
      g_3.Streamer(R__b);
      amp_phi_long.Streamer(R__b);
      phase_phi_long.Streamer(R__b);
      amp_phi_para.Streamer(R__b);
      phase_phi_para.Streamer(R__b);
      amp_phi_perp.Streamer(R__b);
      phase_phi_perp.Streamer(R__b);
      mass_phi.Streamer(R__b);
      width_phi.Streamer(R__b);
      r_phi.Streamer(R__b);
      J_phi.Streamer(R__b);
      R__b << (Int_t)m_acceptance_function;
      R__b << const_cast<  double &>( m_1a );
      R__b << const_cast<  double &>( m_1b );
      R__b << const_cast<  double &>( m_2a );
      R__b << const_cast<  double &>( m_2b );
      R__b << const_cast<  double &>( m_3a );
      R__b << const_cast<  double &>( m_3b );
      R__b << const_cast<  double &>( m1 );
      R__b << const_cast<  double &>( m2 );
      R__b << const_cast<  double &>( m3 );
      R__b << const_cast<  double &>( mM );
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooKKInterference::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooKKInterference.
      TClass *R__cl = ::RooKKInterference::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.InspectMember(m, "m.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.InspectMember(phi, "phi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cos_th1", &cos_th1);
      R__insp.InspectMember(cos_th1, "cos_th1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cos_th2", &cos_th2);
      R__insp.InspectMember(cos_th2, "cos_th2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_flatte", &amp_flatte);
      R__insp.InspectMember(amp_flatte, "amp_flatte.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_flatte", &phase_flatte);
      R__insp.InspectMember(phase_flatte, "phase_flatte.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_flatte", &mass_flatte);
      R__insp.InspectMember(mass_flatte, "mass_flatte.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "g_1", &g_1);
      R__insp.InspectMember(g_1, "g_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "g_2", &g_2);
      R__insp.InspectMember(g_2, "g_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "g_3", &g_3);
      R__insp.InspectMember(g_3, "g_3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_phi_long", &amp_phi_long);
      R__insp.InspectMember(amp_phi_long, "amp_phi_long.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_phi_long", &phase_phi_long);
      R__insp.InspectMember(phase_phi_long, "phase_phi_long.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_phi_para", &amp_phi_para);
      R__insp.InspectMember(amp_phi_para, "amp_phi_para.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_phi_para", &phase_phi_para);
      R__insp.InspectMember(phase_phi_para, "phase_phi_para.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_phi_perp", &amp_phi_perp);
      R__insp.InspectMember(amp_phi_perp, "amp_phi_perp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_phi_perp", &phase_phi_perp);
      R__insp.InspectMember(phase_phi_perp, "phase_phi_perp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_phi", &mass_phi);
      R__insp.InspectMember(mass_phi, "mass_phi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_phi", &width_phi);
      R__insp.InspectMember(width_phi, "width_phi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r_phi", &r_phi);
      R__insp.InspectMember(r_phi, "r_phi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "J_phi", &J_phi);
      R__insp.InspectMember(J_phi, "J_phi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_acceptance_function", &m_acceptance_function);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_1a", &m_1a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_1b", &m_1b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_2a", &m_2a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_2b", &m_2b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_3a", &m_3a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_3b", &m_3b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m1", &m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m2", &m2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m3", &m3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mM", &mM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_norm_cache_integrator", &m_norm_cache_integrator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_real_cache_integrator", &m_real_cache_integrator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_imag_cache_integrator", &m_imag_cache_integrator);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooKKInterference(void *p) {
      return  p ? new(p) ::RooKKInterference : new ::RooKKInterference;
   }
   static void *newArray_RooKKInterference(Long_t nElements, void *p) {
      return p ? new(p) ::RooKKInterference[nElements] : new ::RooKKInterference[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooKKInterference(void *p) {
      delete ((::RooKKInterference*)p);
   }
   static void deleteArray_RooKKInterference(void *p) {
      delete [] ((::RooKKInterference*)p);
   }
   static void destruct_RooKKInterference(void *p) {
      typedef ::RooKKInterference current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooKKInterference(TBuffer &buf, void *obj) {
      ((::RooKKInterference*)obj)->::RooKKInterference::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooKKInterference

//______________________________________________________________________________
void RooKKInterferenceNorm::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooKKInterferenceNorm.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      phi.Streamer(R__b);
      cos_th1.Streamer(R__b);
      cos_th2.Streamer(R__b);
      amp_flatte.Streamer(R__b);
      phase_flatte.Streamer(R__b);
      mass_flatte.Streamer(R__b);
      g_1.Streamer(R__b);
      g_2.Streamer(R__b);
      g_3.Streamer(R__b);
      amp_phi_long.Streamer(R__b);
      phase_phi_long.Streamer(R__b);
      amp_phi_para.Streamer(R__b);
      phase_phi_para.Streamer(R__b);
      amp_phi_perp.Streamer(R__b);
      phase_phi_perp.Streamer(R__b);
      mass_phi.Streamer(R__b);
      width_phi.Streamer(R__b);
      r_phi.Streamer(R__b);
      J_phi.Streamer(R__b);
      void *ptr_m_acceptance_function = (void*)&m_acceptance_function;
      R__b >> *reinterpret_cast<Int_t*>(ptr_m_acceptance_function);
      R__b >> const_cast<  double &>( m_1a );
      R__b >> const_cast<  double &>( m_1b );
      R__b >> const_cast<  double &>( m_2a );
      R__b >> const_cast<  double &>( m_2b );
      R__b >> const_cast<  double &>( m_3a );
      R__b >> const_cast<  double &>( m_3b );
      R__b >> const_cast<  double &>( m1 );
      R__b >> const_cast<  double &>( m2 );
      R__b >> const_cast<  double &>( m3 );
      R__b >> const_cast<  double &>( mM );
      R__b.CheckByteCount(R__s, R__c, RooKKInterferenceNorm::IsA());
   } else {
      R__c = R__b.WriteVersion(RooKKInterferenceNorm::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      phi.Streamer(R__b);
      cos_th1.Streamer(R__b);
      cos_th2.Streamer(R__b);
      amp_flatte.Streamer(R__b);
      phase_flatte.Streamer(R__b);
      mass_flatte.Streamer(R__b);
      g_1.Streamer(R__b);
      g_2.Streamer(R__b);
      g_3.Streamer(R__b);
      amp_phi_long.Streamer(R__b);
      phase_phi_long.Streamer(R__b);
      amp_phi_para.Streamer(R__b);
      phase_phi_para.Streamer(R__b);
      amp_phi_perp.Streamer(R__b);
      phase_phi_perp.Streamer(R__b);
      mass_phi.Streamer(R__b);
      width_phi.Streamer(R__b);
      r_phi.Streamer(R__b);
      J_phi.Streamer(R__b);
      R__b << (Int_t)m_acceptance_function;
      R__b << const_cast<  double &>( m_1a );
      R__b << const_cast<  double &>( m_1b );
      R__b << const_cast<  double &>( m_2a );
      R__b << const_cast<  double &>( m_2b );
      R__b << const_cast<  double &>( m_3a );
      R__b << const_cast<  double &>( m_3b );
      R__b << const_cast<  double &>( m1 );
      R__b << const_cast<  double &>( m2 );
      R__b << const_cast<  double &>( m3 );
      R__b << const_cast<  double &>( mM );
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooKKInterferenceNorm::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooKKInterferenceNorm.
      TClass *R__cl = ::RooKKInterferenceNorm::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.InspectMember(m, "m.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.InspectMember(phi, "phi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cos_th1", &cos_th1);
      R__insp.InspectMember(cos_th1, "cos_th1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cos_th2", &cos_th2);
      R__insp.InspectMember(cos_th2, "cos_th2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_flatte", &amp_flatte);
      R__insp.InspectMember(amp_flatte, "amp_flatte.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_flatte", &phase_flatte);
      R__insp.InspectMember(phase_flatte, "phase_flatte.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_flatte", &mass_flatte);
      R__insp.InspectMember(mass_flatte, "mass_flatte.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "g_1", &g_1);
      R__insp.InspectMember(g_1, "g_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "g_2", &g_2);
      R__insp.InspectMember(g_2, "g_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "g_3", &g_3);
      R__insp.InspectMember(g_3, "g_3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_phi_long", &amp_phi_long);
      R__insp.InspectMember(amp_phi_long, "amp_phi_long.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_phi_long", &phase_phi_long);
      R__insp.InspectMember(phase_phi_long, "phase_phi_long.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_phi_para", &amp_phi_para);
      R__insp.InspectMember(amp_phi_para, "amp_phi_para.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_phi_para", &phase_phi_para);
      R__insp.InspectMember(phase_phi_para, "phase_phi_para.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_phi_perp", &amp_phi_perp);
      R__insp.InspectMember(amp_phi_perp, "amp_phi_perp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_phi_perp", &phase_phi_perp);
      R__insp.InspectMember(phase_phi_perp, "phase_phi_perp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_phi", &mass_phi);
      R__insp.InspectMember(mass_phi, "mass_phi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_phi", &width_phi);
      R__insp.InspectMember(width_phi, "width_phi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r_phi", &r_phi);
      R__insp.InspectMember(r_phi, "r_phi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "J_phi", &J_phi);
      R__insp.InspectMember(J_phi, "J_phi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_acceptance_function", &m_acceptance_function);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_1a", &m_1a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_1b", &m_1b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_2a", &m_2a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_2b", &m_2b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_3a", &m_3a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_3b", &m_3b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m1", &m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m2", &m2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m3", &m3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mM", &mM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_norm_cache_integrator", &m_norm_cache_integrator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_real_cache_integrator", &m_real_cache_integrator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_imag_cache_integrator", &m_imag_cache_integrator);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooKKInterferenceNorm(void *p) {
      return  p ? new(p) ::RooKKInterferenceNorm : new ::RooKKInterferenceNorm;
   }
   static void *newArray_RooKKInterferenceNorm(Long_t nElements, void *p) {
      return p ? new(p) ::RooKKInterferenceNorm[nElements] : new ::RooKKInterferenceNorm[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooKKInterferenceNorm(void *p) {
      delete ((::RooKKInterferenceNorm*)p);
   }
   static void deleteArray_RooKKInterferenceNorm(void *p) {
      delete [] ((::RooKKInterferenceNorm*)p);
   }
   static void destruct_RooKKInterferenceNorm(void *p) {
      typedef ::RooKKInterferenceNorm current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooKKInterferenceNorm(TBuffer &buf, void *obj) {
      ((::RooKKInterferenceNorm*)obj)->::RooKKInterferenceNorm::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooKKInterferenceNorm

//______________________________________________________________________________
void RooKKInterferencePositive::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooKKInterferencePositive.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      phi.Streamer(R__b);
      cos_th1.Streamer(R__b);
      cos_th2.Streamer(R__b);
      amp_flatte.Streamer(R__b);
      phase_flatte.Streamer(R__b);
      mass_flatte.Streamer(R__b);
      g_1.Streamer(R__b);
      g_2.Streamer(R__b);
      g_3.Streamer(R__b);
      amp_phi_long.Streamer(R__b);
      phase_phi_long.Streamer(R__b);
      amp_phi_para.Streamer(R__b);
      phase_phi_para.Streamer(R__b);
      amp_phi_perp.Streamer(R__b);
      phase_phi_perp.Streamer(R__b);
      mass_phi.Streamer(R__b);
      width_phi.Streamer(R__b);
      r_phi.Streamer(R__b);
      J_phi.Streamer(R__b);
      void *ptr_m_acceptance_function = (void*)&m_acceptance_function;
      R__b >> *reinterpret_cast<Int_t*>(ptr_m_acceptance_function);
      R__b >> const_cast<  double &>( m_1a );
      R__b >> const_cast<  double &>( m_1b );
      R__b >> const_cast<  double &>( m_2a );
      R__b >> const_cast<  double &>( m_2b );
      R__b >> const_cast<  double &>( m_3a );
      R__b >> const_cast<  double &>( m_3b );
      R__b >> const_cast<  double &>( m1 );
      R__b >> const_cast<  double &>( m2 );
      R__b >> const_cast<  double &>( m3 );
      R__b >> const_cast<  double &>( mM );
      R__b.CheckByteCount(R__s, R__c, RooKKInterferencePositive::IsA());
   } else {
      R__c = R__b.WriteVersion(RooKKInterferencePositive::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      m.Streamer(R__b);
      phi.Streamer(R__b);
      cos_th1.Streamer(R__b);
      cos_th2.Streamer(R__b);
      amp_flatte.Streamer(R__b);
      phase_flatte.Streamer(R__b);
      mass_flatte.Streamer(R__b);
      g_1.Streamer(R__b);
      g_2.Streamer(R__b);
      g_3.Streamer(R__b);
      amp_phi_long.Streamer(R__b);
      phase_phi_long.Streamer(R__b);
      amp_phi_para.Streamer(R__b);
      phase_phi_para.Streamer(R__b);
      amp_phi_perp.Streamer(R__b);
      phase_phi_perp.Streamer(R__b);
      mass_phi.Streamer(R__b);
      width_phi.Streamer(R__b);
      r_phi.Streamer(R__b);
      J_phi.Streamer(R__b);
      R__b << (Int_t)m_acceptance_function;
      R__b << const_cast<  double &>( m_1a );
      R__b << const_cast<  double &>( m_1b );
      R__b << const_cast<  double &>( m_2a );
      R__b << const_cast<  double &>( m_2b );
      R__b << const_cast<  double &>( m_3a );
      R__b << const_cast<  double &>( m_3b );
      R__b << const_cast<  double &>( m1 );
      R__b << const_cast<  double &>( m2 );
      R__b << const_cast<  double &>( m3 );
      R__b << const_cast<  double &>( mM );
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooKKInterferencePositive::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooKKInterferencePositive.
      TClass *R__cl = ::RooKKInterferencePositive::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.InspectMember(m, "m.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.InspectMember(phi, "phi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cos_th1", &cos_th1);
      R__insp.InspectMember(cos_th1, "cos_th1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cos_th2", &cos_th2);
      R__insp.InspectMember(cos_th2, "cos_th2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_flatte", &amp_flatte);
      R__insp.InspectMember(amp_flatte, "amp_flatte.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_flatte", &phase_flatte);
      R__insp.InspectMember(phase_flatte, "phase_flatte.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_flatte", &mass_flatte);
      R__insp.InspectMember(mass_flatte, "mass_flatte.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "g_1", &g_1);
      R__insp.InspectMember(g_1, "g_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "g_2", &g_2);
      R__insp.InspectMember(g_2, "g_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "g_3", &g_3);
      R__insp.InspectMember(g_3, "g_3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_phi_long", &amp_phi_long);
      R__insp.InspectMember(amp_phi_long, "amp_phi_long.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_phi_long", &phase_phi_long);
      R__insp.InspectMember(phase_phi_long, "phase_phi_long.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_phi_para", &amp_phi_para);
      R__insp.InspectMember(amp_phi_para, "amp_phi_para.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_phi_para", &phase_phi_para);
      R__insp.InspectMember(phase_phi_para, "phase_phi_para.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_phi_perp", &amp_phi_perp);
      R__insp.InspectMember(amp_phi_perp, "amp_phi_perp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_phi_perp", &phase_phi_perp);
      R__insp.InspectMember(phase_phi_perp, "phase_phi_perp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_phi", &mass_phi);
      R__insp.InspectMember(mass_phi, "mass_phi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_phi", &width_phi);
      R__insp.InspectMember(width_phi, "width_phi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r_phi", &r_phi);
      R__insp.InspectMember(r_phi, "r_phi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "J_phi", &J_phi);
      R__insp.InspectMember(J_phi, "J_phi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_acceptance_function", &m_acceptance_function);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_1a", &m_1a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_1b", &m_1b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_2a", &m_2a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_2b", &m_2b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_3a", &m_3a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_3b", &m_3b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m1", &m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m2", &m2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m3", &m3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mM", &mM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_norm_cache_integrator", &m_norm_cache_integrator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_real_cache_integrator", &m_real_cache_integrator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_imag_cache_integrator", &m_imag_cache_integrator);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooKKInterferencePositive(void *p) {
      return  p ? new(p) ::RooKKInterferencePositive : new ::RooKKInterferencePositive;
   }
   static void *newArray_RooKKInterferencePositive(Long_t nElements, void *p) {
      return p ? new(p) ::RooKKInterferencePositive[nElements] : new ::RooKKInterferencePositive[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooKKInterferencePositive(void *p) {
      delete ((::RooKKInterferencePositive*)p);
   }
   static void deleteArray_RooKKInterferencePositive(void *p) {
      delete [] ((::RooKKInterferencePositive*)p);
   }
   static void destruct_RooKKInterferencePositive(void *p) {
      typedef ::RooKKInterferencePositive current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooKKInterferencePositive(TBuffer &buf, void *obj) {
      ((::RooKKInterferencePositive*)obj)->::RooKKInterferencePositive::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooKKInterferencePositive

//______________________________________________________________________________
void RooDalitzAnalysis::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooDalitzAnalysis.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      mass_AB.Streamer(R__b);
      mass_BC.Streamer(R__b);
      mass_1.Streamer(R__b);
      width_1.Streamer(R__b);
      mass_2.Streamer(R__b);
      width_2.Streamer(R__b);
      mass_3.Streamer(R__b);
      width_3.Streamer(R__b);
      mass_4.Streamer(R__b);
      width_4.Streamer(R__b);
      mass_5.Streamer(R__b);
      width_5.Streamer(R__b);
      mass_6.Streamer(R__b);
      width_6.Streamer(R__b);
      mass_7.Streamer(R__b);
      width_7.Streamer(R__b);
      amp_1.Streamer(R__b);
      phase_1.Streamer(R__b);
      amp_2.Streamer(R__b);
      phase_2.Streamer(R__b);
      amp_3.Streamer(R__b);
      phase_3.Streamer(R__b);
      amp_4.Streamer(R__b);
      phase_4.Streamer(R__b);
      amp_5.Streamer(R__b);
      phase_5.Streamer(R__b);
      amp_6.Streamer(R__b);
      phase_6.Streamer(R__b);
      amp_7.Streamer(R__b);
      phase_7.Streamer(R__b);
      amp_8.Streamer(R__b);
      phase_8.Streamer(R__b);
      R__b >> const_cast<  double &>( m_Pi0 );
      R__b >> const_cast<  double &>( m_Pi );
      R__b >> const_cast<  double &>( m_K );
      R__b >> const_cast<  double &>( m_B0 );
      void *ptr_m_efficiency_function = (void*)&m_efficiency_function;
      R__b >> *reinterpret_cast<Int_t*>(ptr_m_efficiency_function);
      R__b >> const_cast<  double &>( m_r_1 );
      R__b >> const_cast<  double &>( m_a_2 );
      R__b >> const_cast<  double &>( m_r_2 );
      R__b >> const_cast<  double &>( m_cutoff_2 );
      R__b >> const_cast<  double &>( m_r_3 );
      R__b >> const_cast<  double &>( m_r_4 );
      R__b >> const_cast<  double &>( m_r_5 );
      R__b >> const_cast<  double &>( m_r_6 );
      R__b >> const_cast<  double &>( m_a_7 );
      R__b >> const_cast<  double &>( m_r_7 );
      R__b >> const_cast<  double &>( m_cutoff_7 );
      R__b.CheckByteCount(R__s, R__c, RooDalitzAnalysis::IsA());
   } else {
      R__c = R__b.WriteVersion(RooDalitzAnalysis::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      mass_AB.Streamer(R__b);
      mass_BC.Streamer(R__b);
      mass_1.Streamer(R__b);
      width_1.Streamer(R__b);
      mass_2.Streamer(R__b);
      width_2.Streamer(R__b);
      mass_3.Streamer(R__b);
      width_3.Streamer(R__b);
      mass_4.Streamer(R__b);
      width_4.Streamer(R__b);
      mass_5.Streamer(R__b);
      width_5.Streamer(R__b);
      mass_6.Streamer(R__b);
      width_6.Streamer(R__b);
      mass_7.Streamer(R__b);
      width_7.Streamer(R__b);
      amp_1.Streamer(R__b);
      phase_1.Streamer(R__b);
      amp_2.Streamer(R__b);
      phase_2.Streamer(R__b);
      amp_3.Streamer(R__b);
      phase_3.Streamer(R__b);
      amp_4.Streamer(R__b);
      phase_4.Streamer(R__b);
      amp_5.Streamer(R__b);
      phase_5.Streamer(R__b);
      amp_6.Streamer(R__b);
      phase_6.Streamer(R__b);
      amp_7.Streamer(R__b);
      phase_7.Streamer(R__b);
      amp_8.Streamer(R__b);
      phase_8.Streamer(R__b);
      R__b << const_cast<  double &>( m_Pi0 );
      R__b << const_cast<  double &>( m_Pi );
      R__b << const_cast<  double &>( m_K );
      R__b << const_cast<  double &>( m_B0 );
      R__b << (Int_t)m_efficiency_function;
      R__b << const_cast<  double &>( m_r_1 );
      R__b << const_cast<  double &>( m_a_2 );
      R__b << const_cast<  double &>( m_r_2 );
      R__b << const_cast<  double &>( m_cutoff_2 );
      R__b << const_cast<  double &>( m_r_3 );
      R__b << const_cast<  double &>( m_r_4 );
      R__b << const_cast<  double &>( m_r_5 );
      R__b << const_cast<  double &>( m_r_6 );
      R__b << const_cast<  double &>( m_a_7 );
      R__b << const_cast<  double &>( m_r_7 );
      R__b << const_cast<  double &>( m_cutoff_7 );
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooDalitzAnalysis::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooDalitzAnalysis.
      TClass *R__cl = ::RooDalitzAnalysis::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_AB", &mass_AB);
      R__insp.InspectMember(mass_AB, "mass_AB.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_BC", &mass_BC);
      R__insp.InspectMember(mass_BC, "mass_BC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_1", &mass_1);
      R__insp.InspectMember(mass_1, "mass_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_1", &width_1);
      R__insp.InspectMember(width_1, "width_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_2", &mass_2);
      R__insp.InspectMember(mass_2, "mass_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_2", &width_2);
      R__insp.InspectMember(width_2, "width_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_3", &mass_3);
      R__insp.InspectMember(mass_3, "mass_3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_3", &width_3);
      R__insp.InspectMember(width_3, "width_3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_4", &mass_4);
      R__insp.InspectMember(mass_4, "mass_4.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_4", &width_4);
      R__insp.InspectMember(width_4, "width_4.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_5", &mass_5);
      R__insp.InspectMember(mass_5, "mass_5.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_5", &width_5);
      R__insp.InspectMember(width_5, "width_5.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_6", &mass_6);
      R__insp.InspectMember(mass_6, "mass_6.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_6", &width_6);
      R__insp.InspectMember(width_6, "width_6.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_7", &mass_7);
      R__insp.InspectMember(mass_7, "mass_7.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_7", &width_7);
      R__insp.InspectMember(width_7, "width_7.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_1", &amp_1);
      R__insp.InspectMember(amp_1, "amp_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_1", &phase_1);
      R__insp.InspectMember(phase_1, "phase_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_2", &amp_2);
      R__insp.InspectMember(amp_2, "amp_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_2", &phase_2);
      R__insp.InspectMember(phase_2, "phase_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_3", &amp_3);
      R__insp.InspectMember(amp_3, "amp_3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_3", &phase_3);
      R__insp.InspectMember(phase_3, "phase_3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_4", &amp_4);
      R__insp.InspectMember(amp_4, "amp_4.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_4", &phase_4);
      R__insp.InspectMember(phase_4, "phase_4.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_5", &amp_5);
      R__insp.InspectMember(amp_5, "amp_5.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_5", &phase_5);
      R__insp.InspectMember(phase_5, "phase_5.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_6", &amp_6);
      R__insp.InspectMember(amp_6, "amp_6.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_6", &phase_6);
      R__insp.InspectMember(phase_6, "phase_6.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_7", &amp_7);
      R__insp.InspectMember(amp_7, "amp_7.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_7", &phase_7);
      R__insp.InspectMember(phase_7, "phase_7.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_8", &amp_8);
      R__insp.InspectMember(amp_8, "amp_8.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_8", &phase_8);
      R__insp.InspectMember(phase_8, "phase_8.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Pi0", &m_Pi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Pi", &m_Pi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_K", &m_K);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_B0", &m_B0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_efficiency_function", &m_efficiency_function);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_r_1", &m_r_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_a_2", &m_a_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_r_2", &m_r_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_cutoff_2", &m_cutoff_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_r_3", &m_r_3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_r_4", &m_r_4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_r_5", &m_r_5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_r_6", &m_r_6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_a_7", &m_a_7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_r_7", &m_r_7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_cutoff_7", &m_cutoff_7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_norm_cache_integrator", &m_norm_cache_integrator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_real_cache_integrator", &m_real_cache_integrator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_imag_cache_integrator", &m_imag_cache_integrator);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooDalitzAnalysis(void *p) {
      return  p ? new(p) ::RooDalitzAnalysis : new ::RooDalitzAnalysis;
   }
   static void *newArray_RooDalitzAnalysis(Long_t nElements, void *p) {
      return p ? new(p) ::RooDalitzAnalysis[nElements] : new ::RooDalitzAnalysis[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooDalitzAnalysis(void *p) {
      delete ((::RooDalitzAnalysis*)p);
   }
   static void deleteArray_RooDalitzAnalysis(void *p) {
      delete [] ((::RooDalitzAnalysis*)p);
   }
   static void destruct_RooDalitzAnalysis(void *p) {
      typedef ::RooDalitzAnalysis current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooDalitzAnalysis(TBuffer &buf, void *obj) {
      ((::RooDalitzAnalysis*)obj)->::RooDalitzAnalysis::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooDalitzAnalysis

//______________________________________________________________________________
void RooThresholdFunction::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooThresholdFunction.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      m12.Streamer(R__b);
      m23.Streamer(R__b);
      Ec1.Streamer(R__b);
      Ec2.Streamer(R__b);
      Ec3.Streamer(R__b);
      Eth1.Streamer(R__b);
      Eth2.Streamer(R__b);
      Eth3.Streamer(R__b);
      E_x.Streamer(R__b);
      E_y.Streamer(R__b);
      E_xx.Streamer(R__b);
      E_xy.Streamer(R__b);
      E_yy.Streamer(R__b);
      E_xxx.Streamer(R__b);
      E_xxy.Streamer(R__b);
      E_xyy.Streamer(R__b);
      E_yyy.Streamer(R__b);
      R__b >> const_cast<  double &>( m12_offset );
      R__b >> const_cast<  double &>( m23_offset );
      R__b >> mM;
      R__b >> m1;
      R__b >> m2;
      R__b >> m3;
      R__b.CheckByteCount(R__s, R__c, RooThresholdFunction::IsA());
   } else {
      R__c = R__b.WriteVersion(RooThresholdFunction::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      m12.Streamer(R__b);
      m23.Streamer(R__b);
      Ec1.Streamer(R__b);
      Ec2.Streamer(R__b);
      Ec3.Streamer(R__b);
      Eth1.Streamer(R__b);
      Eth2.Streamer(R__b);
      Eth3.Streamer(R__b);
      E_x.Streamer(R__b);
      E_y.Streamer(R__b);
      E_xx.Streamer(R__b);
      E_xy.Streamer(R__b);
      E_yy.Streamer(R__b);
      E_xxx.Streamer(R__b);
      E_xxy.Streamer(R__b);
      E_xyy.Streamer(R__b);
      E_yyy.Streamer(R__b);
      R__b << const_cast<  double &>( m12_offset );
      R__b << const_cast<  double &>( m23_offset );
      R__b << mM;
      R__b << m1;
      R__b << m2;
      R__b << m3;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooThresholdFunction::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooThresholdFunction.
      TClass *R__cl = ::RooThresholdFunction::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m12", &m12);
      R__insp.InspectMember(m12, "m12.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m23", &m23);
      R__insp.InspectMember(m23, "m23.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ec1", &Ec1);
      R__insp.InspectMember(Ec1, "Ec1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ec2", &Ec2);
      R__insp.InspectMember(Ec2, "Ec2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ec3", &Ec3);
      R__insp.InspectMember(Ec3, "Ec3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eth1", &Eth1);
      R__insp.InspectMember(Eth1, "Eth1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eth2", &Eth2);
      R__insp.InspectMember(Eth2, "Eth2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eth3", &Eth3);
      R__insp.InspectMember(Eth3, "Eth3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_x", &E_x);
      R__insp.InspectMember(E_x, "E_x.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_y", &E_y);
      R__insp.InspectMember(E_y, "E_y.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_xx", &E_xx);
      R__insp.InspectMember(E_xx, "E_xx.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_xy", &E_xy);
      R__insp.InspectMember(E_xy, "E_xy.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_yy", &E_yy);
      R__insp.InspectMember(E_yy, "E_yy.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_xxx", &E_xxx);
      R__insp.InspectMember(E_xxx, "E_xxx.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_xxy", &E_xxy);
      R__insp.InspectMember(E_xxy, "E_xxy.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_xyy", &E_xyy);
      R__insp.InspectMember(E_xyy, "E_xyy.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_yyy", &E_yyy);
      R__insp.InspectMember(E_yyy, "E_yyy.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m12_offset", &m12_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m23_offset", &m23_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mM", &mM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m1", &m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m2", &m2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m3", &m3);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooThresholdFunction(void *p) {
      return  p ? new(p) ::RooThresholdFunction : new ::RooThresholdFunction;
   }
   static void *newArray_RooThresholdFunction(Long_t nElements, void *p) {
      return p ? new(p) ::RooThresholdFunction[nElements] : new ::RooThresholdFunction[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooThresholdFunction(void *p) {
      delete ((::RooThresholdFunction*)p);
   }
   static void deleteArray_RooThresholdFunction(void *p) {
      delete [] ((::RooThresholdFunction*)p);
   }
   static void destruct_RooThresholdFunction(void *p) {
      typedef ::RooThresholdFunction current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooThresholdFunction(TBuffer &buf, void *obj) {
      ((::RooThresholdFunction*)obj)->::RooThresholdFunction::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooThresholdFunction

//______________________________________________________________________________
void RooDalitzDelaunay::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooDalitzDelaunay.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      m12.Streamer(R__b);
      m23.Streamer(R__b);
      R__b >> graph;
      R__b >> const_cast<  double &>( mM );
      R__b >> const_cast<  double &>( m1 );
      R__b >> const_cast<  double &>( m2 );
      R__b >> const_cast<  double &>( m3 );
      R__b.CheckByteCount(R__s, R__c, RooDalitzDelaunay::IsA());
   } else {
      R__c = R__b.WriteVersion(RooDalitzDelaunay::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      m12.Streamer(R__b);
      m23.Streamer(R__b);
      R__b << graph;
      R__b << const_cast<  double &>( mM );
      R__b << const_cast<  double &>( m1 );
      R__b << const_cast<  double &>( m2 );
      R__b << const_cast<  double &>( m3 );
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooDalitzDelaunay::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooDalitzDelaunay.
      TClass *R__cl = ::RooDalitzDelaunay::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m12", &m12);
      R__insp.InspectMember(m12, "m12.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m23", &m23);
      R__insp.InspectMember(m23, "m23.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*graph", &graph);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mM", &mM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m1", &m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m2", &m2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m3", &m3);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooDalitzDelaunay(void *p) {
      return  p ? new(p) ::RooDalitzDelaunay : new ::RooDalitzDelaunay;
   }
   static void *newArray_RooDalitzDelaunay(Long_t nElements, void *p) {
      return p ? new(p) ::RooDalitzDelaunay[nElements] : new ::RooDalitzDelaunay[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooDalitzDelaunay(void *p) {
      delete ((::RooDalitzDelaunay*)p);
   }
   static void deleteArray_RooDalitzDelaunay(void *p) {
      delete [] ((::RooDalitzDelaunay*)p);
   }
   static void destruct_RooDalitzDelaunay(void *p) {
      typedef ::RooDalitzDelaunay current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooDalitzDelaunay(TBuffer &buf, void *obj) {
      ((::RooDalitzDelaunay*)obj)->::RooDalitzDelaunay::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooDalitzDelaunay

//______________________________________________________________________________
void RooDalitzAnalysisCPV::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooDalitzAnalysisCPV.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      mass_AB.Streamer(R__b);
      mass_BC.Streamer(R__b);
      channel.Streamer(R__b);
      mass_1.Streamer(R__b);
      width_1.Streamer(R__b);
      mass_2.Streamer(R__b);
      width_2.Streamer(R__b);
      mass_3.Streamer(R__b);
      width_3.Streamer(R__b);
      mass_4.Streamer(R__b);
      width_4.Streamer(R__b);
      mass_5.Streamer(R__b);
      width_5.Streamer(R__b);
      mass_6.Streamer(R__b);
      width_6.Streamer(R__b);
      mass_7.Streamer(R__b);
      width_7.Streamer(R__b);
      amp_1.Streamer(R__b);
      phase_1.Streamer(R__b);
      amp_2.Streamer(R__b);
      phase_2.Streamer(R__b);
      amp_3.Streamer(R__b);
      phase_3.Streamer(R__b);
      amp_4.Streamer(R__b);
      phase_4.Streamer(R__b);
      amp_5.Streamer(R__b);
      phase_5.Streamer(R__b);
      amp_6.Streamer(R__b);
      phase_6.Streamer(R__b);
      amp_7.Streamer(R__b);
      phase_7.Streamer(R__b);
      amp_8.Streamer(R__b);
      phase_8.Streamer(R__b);
      amp_1_CC.Streamer(R__b);
      phase_1_CC.Streamer(R__b);
      amp_2_CC.Streamer(R__b);
      phase_2_CC.Streamer(R__b);
      amp_3_CC.Streamer(R__b);
      phase_3_CC.Streamer(R__b);
      amp_4_CC.Streamer(R__b);
      phase_4_CC.Streamer(R__b);
      amp_5_CC.Streamer(R__b);
      phase_5_CC.Streamer(R__b);
      amp_6_CC.Streamer(R__b);
      phase_6_CC.Streamer(R__b);
      amp_7_CC.Streamer(R__b);
      phase_7_CC.Streamer(R__b);
      amp_8_CC.Streamer(R__b);
      phase_8_CC.Streamer(R__b);
      R__b >> const_cast<  double &>( m_Pi0 );
      R__b >> const_cast<  double &>( m_Pi );
      R__b >> const_cast<  double &>( m_K );
      R__b >> const_cast<  double &>( m_B0 );
      void *ptr_m_efficiency_function = (void*)&m_efficiency_function;
      R__b >> *reinterpret_cast<Int_t*>(ptr_m_efficiency_function);
      R__b >> const_cast<  double &>( m_r_1 );
      R__b >> const_cast<  double &>( m_a_2 );
      R__b >> const_cast<  double &>( m_r_2 );
      R__b >> const_cast<  double &>( m_cutoff_2 );
      R__b >> const_cast<  double &>( m_r_3 );
      R__b >> const_cast<  double &>( m_r_4 );
      R__b >> const_cast<  double &>( m_r_5 );
      R__b >> const_cast<  double &>( m_r_6 );
      R__b >> const_cast<  double &>( m_a_7 );
      R__b >> const_cast<  double &>( m_r_7 );
      R__b >> const_cast<  double &>( m_cutoff_7 );
      R__b.CheckByteCount(R__s, R__c, RooDalitzAnalysisCPV::IsA());
   } else {
      R__c = R__b.WriteVersion(RooDalitzAnalysisCPV::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      mass_AB.Streamer(R__b);
      mass_BC.Streamer(R__b);
      channel.Streamer(R__b);
      mass_1.Streamer(R__b);
      width_1.Streamer(R__b);
      mass_2.Streamer(R__b);
      width_2.Streamer(R__b);
      mass_3.Streamer(R__b);
      width_3.Streamer(R__b);
      mass_4.Streamer(R__b);
      width_4.Streamer(R__b);
      mass_5.Streamer(R__b);
      width_5.Streamer(R__b);
      mass_6.Streamer(R__b);
      width_6.Streamer(R__b);
      mass_7.Streamer(R__b);
      width_7.Streamer(R__b);
      amp_1.Streamer(R__b);
      phase_1.Streamer(R__b);
      amp_2.Streamer(R__b);
      phase_2.Streamer(R__b);
      amp_3.Streamer(R__b);
      phase_3.Streamer(R__b);
      amp_4.Streamer(R__b);
      phase_4.Streamer(R__b);
      amp_5.Streamer(R__b);
      phase_5.Streamer(R__b);
      amp_6.Streamer(R__b);
      phase_6.Streamer(R__b);
      amp_7.Streamer(R__b);
      phase_7.Streamer(R__b);
      amp_8.Streamer(R__b);
      phase_8.Streamer(R__b);
      amp_1_CC.Streamer(R__b);
      phase_1_CC.Streamer(R__b);
      amp_2_CC.Streamer(R__b);
      phase_2_CC.Streamer(R__b);
      amp_3_CC.Streamer(R__b);
      phase_3_CC.Streamer(R__b);
      amp_4_CC.Streamer(R__b);
      phase_4_CC.Streamer(R__b);
      amp_5_CC.Streamer(R__b);
      phase_5_CC.Streamer(R__b);
      amp_6_CC.Streamer(R__b);
      phase_6_CC.Streamer(R__b);
      amp_7_CC.Streamer(R__b);
      phase_7_CC.Streamer(R__b);
      amp_8_CC.Streamer(R__b);
      phase_8_CC.Streamer(R__b);
      R__b << const_cast<  double &>( m_Pi0 );
      R__b << const_cast<  double &>( m_Pi );
      R__b << const_cast<  double &>( m_K );
      R__b << const_cast<  double &>( m_B0 );
      R__b << (Int_t)m_efficiency_function;
      R__b << const_cast<  double &>( m_r_1 );
      R__b << const_cast<  double &>( m_a_2 );
      R__b << const_cast<  double &>( m_r_2 );
      R__b << const_cast<  double &>( m_cutoff_2 );
      R__b << const_cast<  double &>( m_r_3 );
      R__b << const_cast<  double &>( m_r_4 );
      R__b << const_cast<  double &>( m_r_5 );
      R__b << const_cast<  double &>( m_r_6 );
      R__b << const_cast<  double &>( m_a_7 );
      R__b << const_cast<  double &>( m_r_7 );
      R__b << const_cast<  double &>( m_cutoff_7 );
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooDalitzAnalysisCPV::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooDalitzAnalysisCPV.
      TClass *R__cl = ::RooDalitzAnalysisCPV::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_AB", &mass_AB);
      R__insp.InspectMember(mass_AB, "mass_AB.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_BC", &mass_BC);
      R__insp.InspectMember(mass_BC, "mass_BC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channel", &channel);
      R__insp.InspectMember(channel, "channel.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_1", &mass_1);
      R__insp.InspectMember(mass_1, "mass_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_1", &width_1);
      R__insp.InspectMember(width_1, "width_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_2", &mass_2);
      R__insp.InspectMember(mass_2, "mass_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_2", &width_2);
      R__insp.InspectMember(width_2, "width_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_3", &mass_3);
      R__insp.InspectMember(mass_3, "mass_3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_3", &width_3);
      R__insp.InspectMember(width_3, "width_3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_4", &mass_4);
      R__insp.InspectMember(mass_4, "mass_4.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_4", &width_4);
      R__insp.InspectMember(width_4, "width_4.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_5", &mass_5);
      R__insp.InspectMember(mass_5, "mass_5.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_5", &width_5);
      R__insp.InspectMember(width_5, "width_5.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_6", &mass_6);
      R__insp.InspectMember(mass_6, "mass_6.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_6", &width_6);
      R__insp.InspectMember(width_6, "width_6.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_7", &mass_7);
      R__insp.InspectMember(mass_7, "mass_7.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_7", &width_7);
      R__insp.InspectMember(width_7, "width_7.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_1", &amp_1);
      R__insp.InspectMember(amp_1, "amp_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_1", &phase_1);
      R__insp.InspectMember(phase_1, "phase_1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_2", &amp_2);
      R__insp.InspectMember(amp_2, "amp_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_2", &phase_2);
      R__insp.InspectMember(phase_2, "phase_2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_3", &amp_3);
      R__insp.InspectMember(amp_3, "amp_3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_3", &phase_3);
      R__insp.InspectMember(phase_3, "phase_3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_4", &amp_4);
      R__insp.InspectMember(amp_4, "amp_4.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_4", &phase_4);
      R__insp.InspectMember(phase_4, "phase_4.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_5", &amp_5);
      R__insp.InspectMember(amp_5, "amp_5.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_5", &phase_5);
      R__insp.InspectMember(phase_5, "phase_5.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_6", &amp_6);
      R__insp.InspectMember(amp_6, "amp_6.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_6", &phase_6);
      R__insp.InspectMember(phase_6, "phase_6.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_7", &amp_7);
      R__insp.InspectMember(amp_7, "amp_7.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_7", &phase_7);
      R__insp.InspectMember(phase_7, "phase_7.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_8", &amp_8);
      R__insp.InspectMember(amp_8, "amp_8.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_8", &phase_8);
      R__insp.InspectMember(phase_8, "phase_8.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_1_CC", &amp_1_CC);
      R__insp.InspectMember(amp_1_CC, "amp_1_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_1_CC", &phase_1_CC);
      R__insp.InspectMember(phase_1_CC, "phase_1_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_2_CC", &amp_2_CC);
      R__insp.InspectMember(amp_2_CC, "amp_2_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_2_CC", &phase_2_CC);
      R__insp.InspectMember(phase_2_CC, "phase_2_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_3_CC", &amp_3_CC);
      R__insp.InspectMember(amp_3_CC, "amp_3_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_3_CC", &phase_3_CC);
      R__insp.InspectMember(phase_3_CC, "phase_3_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_4_CC", &amp_4_CC);
      R__insp.InspectMember(amp_4_CC, "amp_4_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_4_CC", &phase_4_CC);
      R__insp.InspectMember(phase_4_CC, "phase_4_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_5_CC", &amp_5_CC);
      R__insp.InspectMember(amp_5_CC, "amp_5_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_5_CC", &phase_5_CC);
      R__insp.InspectMember(phase_5_CC, "phase_5_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_6_CC", &amp_6_CC);
      R__insp.InspectMember(amp_6_CC, "amp_6_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_6_CC", &phase_6_CC);
      R__insp.InspectMember(phase_6_CC, "phase_6_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_7_CC", &amp_7_CC);
      R__insp.InspectMember(amp_7_CC, "amp_7_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_7_CC", &phase_7_CC);
      R__insp.InspectMember(phase_7_CC, "phase_7_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amp_8_CC", &amp_8_CC);
      R__insp.InspectMember(amp_8_CC, "amp_8_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phase_8_CC", &phase_8_CC);
      R__insp.InspectMember(phase_8_CC, "phase_8_CC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Pi0", &m_Pi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Pi", &m_Pi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_K", &m_K);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_B0", &m_B0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_efficiency_function", &m_efficiency_function);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_r_1", &m_r_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_a_2", &m_a_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_r_2", &m_r_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_cutoff_2", &m_cutoff_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_r_3", &m_r_3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_r_4", &m_r_4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_r_5", &m_r_5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_r_6", &m_r_6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_a_7", &m_a_7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_r_7", &m_r_7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_cutoff_7", &m_cutoff_7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_norm_cache_integrator", &m_norm_cache_integrator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_real_cache_integrator", &m_real_cache_integrator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_imag_cache_integrator", &m_imag_cache_integrator);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooDalitzAnalysisCPV(void *p) {
      return  p ? new(p) ::RooDalitzAnalysisCPV : new ::RooDalitzAnalysisCPV;
   }
   static void *newArray_RooDalitzAnalysisCPV(Long_t nElements, void *p) {
      return p ? new(p) ::RooDalitzAnalysisCPV[nElements] : new ::RooDalitzAnalysisCPV[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooDalitzAnalysisCPV(void *p) {
      delete ((::RooDalitzAnalysisCPV*)p);
   }
   static void deleteArray_RooDalitzAnalysisCPV(void *p) {
      delete [] ((::RooDalitzAnalysisCPV*)p);
   }
   static void destruct_RooDalitzAnalysisCPV(void *p) {
      typedef ::RooDalitzAnalysisCPV current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooDalitzAnalysisCPV(TBuffer &buf, void *obj) {
      ((::RooDalitzAnalysisCPV*)obj)->::RooDalitzAnalysisCPV::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooDalitzAnalysisCPV

//______________________________________________________________________________
void RooDalitzGauss::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooDalitzGauss.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      m12.Streamer(R__b);
      m23.Streamer(R__b);
      mean.Streamer(R__b);
      sigma.Streamer(R__b);
      c1.Streamer(R__b);
      c2.Streamer(R__b);
      c3.Streamer(R__b);
      c4.Streamer(R__b);
      R__b >> const_cast<  int &>( comb );
      R__b >> const_cast<  double &>( m1 );
      R__b >> const_cast<  double &>( m2 );
      R__b >> const_cast<  double &>( m3 );
      R__b >> const_cast<  double &>( mM );
      R__b.CheckByteCount(R__s, R__c, RooDalitzGauss::IsA());
   } else {
      R__c = R__b.WriteVersion(RooDalitzGauss::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      m12.Streamer(R__b);
      m23.Streamer(R__b);
      mean.Streamer(R__b);
      sigma.Streamer(R__b);
      c1.Streamer(R__b);
      c2.Streamer(R__b);
      c3.Streamer(R__b);
      c4.Streamer(R__b);
      R__b << const_cast<  int &>( comb );
      R__b << const_cast<  double &>( m1 );
      R__b << const_cast<  double &>( m2 );
      R__b << const_cast<  double &>( m3 );
      R__b << const_cast<  double &>( mM );
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooDalitzGauss::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooDalitzGauss.
      TClass *R__cl = ::RooDalitzGauss::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m12", &m12);
      R__insp.InspectMember(m12, "m12.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m23", &m23);
      R__insp.InspectMember(m23, "m23.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mean", &mean);
      R__insp.InspectMember(mean, "mean.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigma", &sigma);
      R__insp.InspectMember(sigma, "sigma.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c1", &c1);
      R__insp.InspectMember(c1, "c1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c2", &c2);
      R__insp.InspectMember(c2, "c2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c3", &c3);
      R__insp.InspectMember(c3, "c3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c4", &c4);
      R__insp.InspectMember(c4, "c4.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "comb", &comb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m1", &m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m2", &m2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m3", &m3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mM", &mM);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooDalitzGauss(void *p) {
      return  p ? new(p) ::RooDalitzGauss : new ::RooDalitzGauss;
   }
   static void *newArray_RooDalitzGauss(Long_t nElements, void *p) {
      return p ? new(p) ::RooDalitzGauss[nElements] : new ::RooDalitzGauss[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooDalitzGauss(void *p) {
      delete ((::RooDalitzGauss*)p);
   }
   static void deleteArray_RooDalitzGauss(void *p) {
      delete [] ((::RooDalitzGauss*)p);
   }
   static void destruct_RooDalitzGauss(void *p) {
      typedef ::RooDalitzGauss current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooDalitzGauss(TBuffer &buf, void *obj) {
      ((::RooDalitzGauss*)obj)->::RooDalitzGauss::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooDalitzGauss

//______________________________________________________________________________
void RooDalitzRelativisticSpinBreitWigner::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooDalitzRelativisticSpinBreitWigner.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      m12.Streamer(R__b);
      m23.Streamer(R__b);
      mass_J.Streamer(R__b);
      width_J.Streamer(R__b);
      c1.Streamer(R__b);
      c2.Streamer(R__b);
      c3.Streamer(R__b);
      c4.Streamer(R__b);
      R__b >> const_cast<  double &>( radius );
      R__b >> const_cast<  unsigned int &>( spin );
      R__b >> const_cast<  int &>( comb );
      R__b >> const_cast<  double &>( m1 );
      R__b >> const_cast<  double &>( m2 );
      R__b >> const_cast<  double &>( m3 );
      R__b >> const_cast<  double &>( mM );
      R__b.CheckByteCount(R__s, R__c, RooDalitzRelativisticSpinBreitWigner::IsA());
   } else {
      R__c = R__b.WriteVersion(RooDalitzRelativisticSpinBreitWigner::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      m12.Streamer(R__b);
      m23.Streamer(R__b);
      mass_J.Streamer(R__b);
      width_J.Streamer(R__b);
      c1.Streamer(R__b);
      c2.Streamer(R__b);
      c3.Streamer(R__b);
      c4.Streamer(R__b);
      R__b << const_cast<  double &>( radius );
      R__b << const_cast<  unsigned int &>( spin );
      R__b << const_cast<  int &>( comb );
      R__b << const_cast<  double &>( m1 );
      R__b << const_cast<  double &>( m2 );
      R__b << const_cast<  double &>( m3 );
      R__b << const_cast<  double &>( mM );
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooDalitzRelativisticSpinBreitWigner::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooDalitzRelativisticSpinBreitWigner.
      TClass *R__cl = ::RooDalitzRelativisticSpinBreitWigner::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m12", &m12);
      R__insp.InspectMember(m12, "m12.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m23", &m23);
      R__insp.InspectMember(m23, "m23.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass_J", &mass_J);
      R__insp.InspectMember(mass_J, "mass_J.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width_J", &width_J);
      R__insp.InspectMember(width_J, "width_J.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c1", &c1);
      R__insp.InspectMember(c1, "c1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c2", &c2);
      R__insp.InspectMember(c2, "c2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c3", &c3);
      R__insp.InspectMember(c3, "c3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c4", &c4);
      R__insp.InspectMember(c4, "c4.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "radius", &radius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "spin", &spin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "comb", &comb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m1", &m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m2", &m2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m3", &m3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mM", &mM);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooDalitzRelativisticSpinBreitWigner(void *p) {
      return  p ? new(p) ::RooDalitzRelativisticSpinBreitWigner : new ::RooDalitzRelativisticSpinBreitWigner;
   }
   static void *newArray_RooDalitzRelativisticSpinBreitWigner(Long_t nElements, void *p) {
      return p ? new(p) ::RooDalitzRelativisticSpinBreitWigner[nElements] : new ::RooDalitzRelativisticSpinBreitWigner[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooDalitzRelativisticSpinBreitWigner(void *p) {
      delete ((::RooDalitzRelativisticSpinBreitWigner*)p);
   }
   static void deleteArray_RooDalitzRelativisticSpinBreitWigner(void *p) {
      delete [] ((::RooDalitzRelativisticSpinBreitWigner*)p);
   }
   static void destruct_RooDalitzRelativisticSpinBreitWigner(void *p) {
      typedef ::RooDalitzRelativisticSpinBreitWigner current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooDalitzRelativisticSpinBreitWigner(TBuffer &buf, void *obj) {
      ((::RooDalitzRelativisticSpinBreitWigner*)obj)->::RooDalitzRelativisticSpinBreitWigner::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooDalitzRelativisticSpinBreitWigner

//______________________________________________________________________________
void RooDalitzHist::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooDalitzHist.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      m12.Streamer(R__b);
      m23.Streamer(R__b);
      R__b >> hist;
      R__b >> const_cast<  double &>( mM );
      R__b >> const_cast<  double &>( m1 );
      R__b >> const_cast<  double &>( m2 );
      R__b >> const_cast<  double &>( m3 );
      R__b.CheckByteCount(R__s, R__c, RooDalitzHist::IsA());
   } else {
      R__c = R__b.WriteVersion(RooDalitzHist::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      m12.Streamer(R__b);
      m23.Streamer(R__b);
      R__b << (TObject*)hist;
      R__b << const_cast<  double &>( mM );
      R__b << const_cast<  double &>( m1 );
      R__b << const_cast<  double &>( m2 );
      R__b << const_cast<  double &>( m3 );
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooDalitzHist::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooDalitzHist.
      TClass *R__cl = ::RooDalitzHist::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m12", &m12);
      R__insp.InspectMember(m12, "m12.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m23", &m23);
      R__insp.InspectMember(m23, "m23.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist", &hist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mM", &mM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m1", &m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m2", &m2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m3", &m3);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooDalitzHist(void *p) {
      return  p ? new(p) ::RooDalitzHist : new ::RooDalitzHist;
   }
   static void *newArray_RooDalitzHist(Long_t nElements, void *p) {
      return p ? new(p) ::RooDalitzHist[nElements] : new ::RooDalitzHist[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooDalitzHist(void *p) {
      delete ((::RooDalitzHist*)p);
   }
   static void deleteArray_RooDalitzHist(void *p) {
      delete [] ((::RooDalitzHist*)p);
   }
   static void destruct_RooDalitzHist(void *p) {
      typedef ::RooDalitzHist current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooDalitzHist(TBuffer &buf, void *obj) {
      ((::RooDalitzHist*)obj)->::RooDalitzHist::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooDalitzHist

//______________________________________________________________________________
void RooDalitzXsd::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooDalitzXsd.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      m12.Streamer(R__b);
      m23.Streamer(R__b);
      mean1.Streamer(R__b);
      mean2.Streamer(R__b);
      sigma1.Streamer(R__b);
      sigma2.Streamer(R__b);
      border.Streamer(R__b);
      c1.Streamer(R__b);
      c2.Streamer(R__b);
      c3.Streamer(R__b);
      c4.Streamer(R__b);
      R__b >> const_cast<  int &>( comb );
      R__b >> const_cast<  double &>( m1 );
      R__b >> const_cast<  double &>( m2 );
      R__b >> const_cast<  double &>( m3 );
      R__b >> const_cast<  double &>( mM );
      R__b.CheckByteCount(R__s, R__c, RooDalitzXsd::IsA());
   } else {
      R__c = R__b.WriteVersion(RooDalitzXsd::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      m12.Streamer(R__b);
      m23.Streamer(R__b);
      mean1.Streamer(R__b);
      mean2.Streamer(R__b);
      sigma1.Streamer(R__b);
      sigma2.Streamer(R__b);
      border.Streamer(R__b);
      c1.Streamer(R__b);
      c2.Streamer(R__b);
      c3.Streamer(R__b);
      c4.Streamer(R__b);
      R__b << const_cast<  int &>( comb );
      R__b << const_cast<  double &>( m1 );
      R__b << const_cast<  double &>( m2 );
      R__b << const_cast<  double &>( m3 );
      R__b << const_cast<  double &>( mM );
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooDalitzXsd::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooDalitzXsd.
      TClass *R__cl = ::RooDalitzXsd::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m12", &m12);
      R__insp.InspectMember(m12, "m12.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m23", &m23);
      R__insp.InspectMember(m23, "m23.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mean1", &mean1);
      R__insp.InspectMember(mean1, "mean1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mean2", &mean2);
      R__insp.InspectMember(mean2, "mean2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigma1", &sigma1);
      R__insp.InspectMember(sigma1, "sigma1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigma2", &sigma2);
      R__insp.InspectMember(sigma2, "sigma2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "border", &border);
      R__insp.InspectMember(border, "border.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c1", &c1);
      R__insp.InspectMember(c1, "c1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c2", &c2);
      R__insp.InspectMember(c2, "c2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c3", &c3);
      R__insp.InspectMember(c3, "c3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c4", &c4);
      R__insp.InspectMember(c4, "c4.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "comb", &comb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m1", &m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m2", &m2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m3", &m3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mM", &mM);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooDalitzXsd(void *p) {
      return  p ? new(p) ::RooDalitzXsd : new ::RooDalitzXsd;
   }
   static void *newArray_RooDalitzXsd(Long_t nElements, void *p) {
      return p ? new(p) ::RooDalitzXsd[nElements] : new ::RooDalitzXsd[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooDalitzXsd(void *p) {
      delete ((::RooDalitzXsd*)p);
   }
   static void deleteArray_RooDalitzXsd(void *p) {
      delete [] ((::RooDalitzXsd*)p);
   }
   static void destruct_RooDalitzXsd(void *p) {
      typedef ::RooDalitzXsd current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooDalitzXsd(TBuffer &buf, void *obj) {
      ((::RooDalitzXsd*)obj)->::RooDalitzXsd::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooDalitzXsd

//______________________________________________________________________________
void RooDalitzNovosibirsk::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooDalitzNovosibirsk.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      m12.Streamer(R__b);
      m23.Streamer(R__b);
      mean.Streamer(R__b);
      sigma.Streamer(R__b);
      tail.Streamer(R__b);
      c1.Streamer(R__b);
      c2.Streamer(R__b);
      c3.Streamer(R__b);
      c4.Streamer(R__b);
      R__b >> const_cast<  int &>( comb );
      R__b >> const_cast<  double &>( m1 );
      R__b >> const_cast<  double &>( m2 );
      R__b >> const_cast<  double &>( m3 );
      R__b >> const_cast<  double &>( mM );
      R__b.CheckByteCount(R__s, R__c, RooDalitzNovosibirsk::IsA());
   } else {
      R__c = R__b.WriteVersion(RooDalitzNovosibirsk::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      m12.Streamer(R__b);
      m23.Streamer(R__b);
      mean.Streamer(R__b);
      sigma.Streamer(R__b);
      tail.Streamer(R__b);
      c1.Streamer(R__b);
      c2.Streamer(R__b);
      c3.Streamer(R__b);
      c4.Streamer(R__b);
      R__b << const_cast<  int &>( comb );
      R__b << const_cast<  double &>( m1 );
      R__b << const_cast<  double &>( m2 );
      R__b << const_cast<  double &>( m3 );
      R__b << const_cast<  double &>( mM );
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RooDalitzNovosibirsk::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooDalitzNovosibirsk.
      TClass *R__cl = ::RooDalitzNovosibirsk::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m12", &m12);
      R__insp.InspectMember(m12, "m12.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m23", &m23);
      R__insp.InspectMember(m23, "m23.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mean", &mean);
      R__insp.InspectMember(mean, "mean.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigma", &sigma);
      R__insp.InspectMember(sigma, "sigma.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tail", &tail);
      R__insp.InspectMember(tail, "tail.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c1", &c1);
      R__insp.InspectMember(c1, "c1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c2", &c2);
      R__insp.InspectMember(c2, "c2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c3", &c3);
      R__insp.InspectMember(c3, "c3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c4", &c4);
      R__insp.InspectMember(c4, "c4.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "comb", &comb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m1", &m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m2", &m2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m3", &m3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mM", &mM);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RooDalitzNovosibirsk(void *p) {
      return  p ? new(p) ::RooDalitzNovosibirsk : new ::RooDalitzNovosibirsk;
   }
   static void *newArray_RooDalitzNovosibirsk(Long_t nElements, void *p) {
      return p ? new(p) ::RooDalitzNovosibirsk[nElements] : new ::RooDalitzNovosibirsk[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooDalitzNovosibirsk(void *p) {
      delete ((::RooDalitzNovosibirsk*)p);
   }
   static void deleteArray_RooDalitzNovosibirsk(void *p) {
      delete [] ((::RooDalitzNovosibirsk*)p);
   }
   static void destruct_RooDalitzNovosibirsk(void *p) {
      typedef ::RooDalitzNovosibirsk current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RooDalitzNovosibirsk(TBuffer &buf, void *obj) {
      ((::RooDalitzNovosibirsk*)obj)->::RooDalitzNovosibirsk::Streamer(buf);
   }
} // end of namespace ROOT for class ::RooDalitzNovosibirsk

/********************************************************
* libRooComplexPDF/RooComplexPDF.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableRooComplexPDF();

extern "C" void G__set_cpp_environmentRooComplexPDF() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("libRooComplexPDF/RooRelativisticSpinBreitWigner.h");
  G__add_compiledheader("libRooComplexPDF/RooBreitWignerTwoBodyPHSP.h");
  G__add_compiledheader("libRooComplexPDF/RooBreitWignerTwoBodyPHSPEvtGen.h");
  G__add_compiledheader("libRooComplexPDF/RooThreeBodyPhaseSpaceProjection.h");
  G__add_compiledheader("libRooComplexPDF/RooBifurStudentsTDistribution.h");
  G__add_compiledheader("libRooComplexPDF/RooStudentsTDistribution.h");
  G__add_compiledheader("libRooComplexPDF/RooFlatte.h");
  G__add_compiledheader("libRooComplexPDF/RooLASS.h");
  G__add_compiledheader("libRooComplexPDF/RooKPiMass.h");
  G__add_compiledheader("libRooComplexPDF/RooHelicityAngles.h");
  G__add_compiledheader("libRooComplexPDF/RooMassHelicityAngles.h");
  G__add_compiledheader("libRooComplexPDF/RooVarianceGammaDistribution.h");
  G__add_compiledheader("libRooComplexPDF/RooDalitzPhaseSpaceAmplitude.h");
  G__add_compiledheader("libRooComplexPDF/RooDalitzCubicPolynomial.h");
  G__add_compiledheader("libRooComplexPDF/RooDalitzCubicPolynomialSymmetric.h");
  G__add_compiledheader("libRooComplexPDF/RooTwoBodyThresholdFunction.h");
  G__add_compiledheader("libRooComplexPDF/RooMassHelicityAngles_TransformedBase.h");
  G__add_compiledheader("libRooComplexPDF/RooMassHelicityAnglesCPV.h");
  G__add_compiledheader("libRooComplexPDF/RooCutPdf.h");
  G__add_compiledheader("libRooComplexPDF/RooChebychevCut.h");
  G__add_compiledheader("libRooComplexPDF/RooCategoryPdf.h");
  G__add_compiledheader("libRooComplexPDF/RooFlatteAndNonRes.h");
  G__add_compiledheader("libRooComplexPDF/RooKKInterference.h");
  G__add_compiledheader("libRooComplexPDF/RooKKInterferenceNorm.h");
  G__add_compiledheader("libRooComplexPDF/RooKKInterferencePositive.h");
  G__add_compiledheader("libRooComplexPDF/RooDalitzAnalysis.h");
  G__add_compiledheader("libRooComplexPDF/RooThresholdFunction.h");
  G__add_compiledheader("libRooComplexPDF/RooDalitzDelaunay.h");
  G__add_compiledheader("libRooComplexPDF/RooDalitzAnalysisCPV.h");
  G__add_compiledheader("libRooComplexPDF/RooDalitzGauss.h");
  G__add_compiledheader("libRooComplexPDF/RooDalitzRelativisticSpinBreitWigner.h");
  G__add_compiledheader("libRooComplexPDF/RooDalitzHist.h");
  G__add_compiledheader("libRooComplexPDF/RooDalitzXsd.h");
  G__add_compiledheader("libRooComplexPDF/RooDalitzNovosibirsk.h");
  G__cpp_reset_tagtableRooComplexPDF();
}
#include <new>
extern "C" int G__cpp_dllrevRooComplexPDF() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* RooRelativisticSpinBreitWigner */
static int G__RooComplexPDF_813_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooRelativisticSpinBreitWigner* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooRelativisticSpinBreitWigner[n];
     } else {
       p = new((void*) gvp) RooRelativisticSpinBreitWigner[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooRelativisticSpinBreitWigner;
     } else {
       p = new((void*) gvp) RooRelativisticSpinBreitWigner;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRelativisticSpinBreitWigner));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_813_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooRelativisticSpinBreitWigner* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooRelativisticSpinBreitWigner(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
   } else {
     p = new((void*) gvp) RooRelativisticSpinBreitWigner(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRelativisticSpinBreitWigner));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_813_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooRelativisticSpinBreitWigner* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooRelativisticSpinBreitWigner(*(RooRelativisticSpinBreitWigner*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooRelativisticSpinBreitWigner(*(RooRelativisticSpinBreitWigner*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooRelativisticSpinBreitWigner(*(RooRelativisticSpinBreitWigner*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooRelativisticSpinBreitWigner(*(RooRelativisticSpinBreitWigner*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRelativisticSpinBreitWigner));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_813_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RooRelativisticSpinBreitWigner*) G__getstructoffset())->CalculateMomentum((const double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_813_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooRelativisticSpinBreitWigner::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_813_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooRelativisticSpinBreitWigner::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_813_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooRelativisticSpinBreitWigner::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_813_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooRelativisticSpinBreitWigner::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_813_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooRelativisticSpinBreitWigner*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_813_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooRelativisticSpinBreitWigner::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_813_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooRelativisticSpinBreitWigner::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_813_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooRelativisticSpinBreitWigner::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_813_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooRelativisticSpinBreitWigner::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooRelativisticSpinBreitWigner G__TRooRelativisticSpinBreitWigner;
static int G__RooComplexPDF_813_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooRelativisticSpinBreitWigner*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooRelativisticSpinBreitWigner*) (soff+(sizeof(RooRelativisticSpinBreitWigner)*i)))->~G__TRooRelativisticSpinBreitWigner();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooRelativisticSpinBreitWigner*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooRelativisticSpinBreitWigner*) (soff))->~G__TRooRelativisticSpinBreitWigner();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooBreitWignerTwoBodyPHSP */
static int G__RooComplexPDF_814_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooBreitWignerTwoBodyPHSP* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooBreitWignerTwoBodyPHSP[n];
     } else {
       p = new((void*) gvp) RooBreitWignerTwoBodyPHSP[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooBreitWignerTwoBodyPHSP;
     } else {
       p = new((void*) gvp) RooBreitWignerTwoBodyPHSP;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSP));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_814_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooBreitWignerTwoBodyPHSP* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooBreitWignerTwoBodyPHSP(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) RooBreitWignerTwoBodyPHSP(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSP));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_814_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooBreitWignerTwoBodyPHSP* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooBreitWignerTwoBodyPHSP(*(RooBreitWignerTwoBodyPHSP*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooBreitWignerTwoBodyPHSP(*(RooBreitWignerTwoBodyPHSP*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooBreitWignerTwoBodyPHSP(*(RooBreitWignerTwoBodyPHSP*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooBreitWignerTwoBodyPHSP(*(RooBreitWignerTwoBodyPHSP*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSP));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_814_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooBreitWignerTwoBodyPHSP::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_814_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooBreitWignerTwoBodyPHSP::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_814_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooBreitWignerTwoBodyPHSP::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_814_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooBreitWignerTwoBodyPHSP::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_814_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooBreitWignerTwoBodyPHSP*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_814_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooBreitWignerTwoBodyPHSP::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_814_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooBreitWignerTwoBodyPHSP::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_814_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooBreitWignerTwoBodyPHSP::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_814_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooBreitWignerTwoBodyPHSP::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooBreitWignerTwoBodyPHSP G__TRooBreitWignerTwoBodyPHSP;
static int G__RooComplexPDF_814_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooBreitWignerTwoBodyPHSP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooBreitWignerTwoBodyPHSP*) (soff+(sizeof(RooBreitWignerTwoBodyPHSP)*i)))->~G__TRooBreitWignerTwoBodyPHSP();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooBreitWignerTwoBodyPHSP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooBreitWignerTwoBodyPHSP*) (soff))->~G__TRooBreitWignerTwoBodyPHSP();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooBreitWignerTwoBodyPHSPEvtGen */
static int G__RooComplexPDF_815_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooBreitWignerTwoBodyPHSPEvtGen* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooBreitWignerTwoBodyPHSPEvtGen[n];
     } else {
       p = new((void*) gvp) RooBreitWignerTwoBodyPHSPEvtGen[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooBreitWignerTwoBodyPHSPEvtGen;
     } else {
       p = new((void*) gvp) RooBreitWignerTwoBodyPHSPEvtGen;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSPEvtGen));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_815_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooBreitWignerTwoBodyPHSPEvtGen* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooBreitWignerTwoBodyPHSPEvtGen(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
   } else {
     p = new((void*) gvp) RooBreitWignerTwoBodyPHSPEvtGen(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSPEvtGen));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_815_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooBreitWignerTwoBodyPHSPEvtGen* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooBreitWignerTwoBodyPHSPEvtGen(*(RooBreitWignerTwoBodyPHSPEvtGen*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooBreitWignerTwoBodyPHSPEvtGen(*(RooBreitWignerTwoBodyPHSPEvtGen*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooBreitWignerTwoBodyPHSPEvtGen(*(RooBreitWignerTwoBodyPHSPEvtGen*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooBreitWignerTwoBodyPHSPEvtGen(*(RooBreitWignerTwoBodyPHSPEvtGen*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSPEvtGen));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_815_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooBreitWignerTwoBodyPHSPEvtGen::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_815_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooBreitWignerTwoBodyPHSPEvtGen::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_815_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooBreitWignerTwoBodyPHSPEvtGen::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_815_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooBreitWignerTwoBodyPHSPEvtGen::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_815_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooBreitWignerTwoBodyPHSPEvtGen*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_815_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooBreitWignerTwoBodyPHSPEvtGen::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_815_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooBreitWignerTwoBodyPHSPEvtGen::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_815_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooBreitWignerTwoBodyPHSPEvtGen::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_815_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooBreitWignerTwoBodyPHSPEvtGen::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooBreitWignerTwoBodyPHSPEvtGen G__TRooBreitWignerTwoBodyPHSPEvtGen;
static int G__RooComplexPDF_815_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooBreitWignerTwoBodyPHSPEvtGen*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooBreitWignerTwoBodyPHSPEvtGen*) (soff+(sizeof(RooBreitWignerTwoBodyPHSPEvtGen)*i)))->~G__TRooBreitWignerTwoBodyPHSPEvtGen();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooBreitWignerTwoBodyPHSPEvtGen*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooBreitWignerTwoBodyPHSPEvtGen*) (soff))->~G__TRooBreitWignerTwoBodyPHSPEvtGen();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooThreeBodyPhaseSpaceProjection */
static int G__RooComplexPDF_816_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooThreeBodyPhaseSpaceProjection* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooThreeBodyPhaseSpaceProjection[n];
     } else {
       p = new((void*) gvp) RooThreeBodyPhaseSpaceProjection[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooThreeBodyPhaseSpaceProjection;
     } else {
       p = new((void*) gvp) RooThreeBodyPhaseSpaceProjection;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooThreeBodyPhaseSpaceProjection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_816_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooThreeBodyPhaseSpaceProjection* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooThreeBodyPhaseSpaceProjection(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) RooThreeBodyPhaseSpaceProjection(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooThreeBodyPhaseSpaceProjection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_816_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooThreeBodyPhaseSpaceProjection* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooThreeBodyPhaseSpaceProjection(*(RooThreeBodyPhaseSpaceProjection*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooThreeBodyPhaseSpaceProjection(*(RooThreeBodyPhaseSpaceProjection*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooThreeBodyPhaseSpaceProjection(*(RooThreeBodyPhaseSpaceProjection*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooThreeBodyPhaseSpaceProjection(*(RooThreeBodyPhaseSpaceProjection*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooThreeBodyPhaseSpaceProjection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_816_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooThreeBodyPhaseSpaceProjection::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_816_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooThreeBodyPhaseSpaceProjection::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_816_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooThreeBodyPhaseSpaceProjection::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_816_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooThreeBodyPhaseSpaceProjection::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_816_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooThreeBodyPhaseSpaceProjection*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_816_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooThreeBodyPhaseSpaceProjection::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_816_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooThreeBodyPhaseSpaceProjection::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_816_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooThreeBodyPhaseSpaceProjection::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_816_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooThreeBodyPhaseSpaceProjection::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooThreeBodyPhaseSpaceProjection G__TRooThreeBodyPhaseSpaceProjection;
static int G__RooComplexPDF_816_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooThreeBodyPhaseSpaceProjection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooThreeBodyPhaseSpaceProjection*) (soff+(sizeof(RooThreeBodyPhaseSpaceProjection)*i)))->~G__TRooThreeBodyPhaseSpaceProjection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooThreeBodyPhaseSpaceProjection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooThreeBodyPhaseSpaceProjection*) (soff))->~G__TRooThreeBodyPhaseSpaceProjection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooBifurStudentsTDistribution */
static int G__RooComplexPDF_817_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooBifurStudentsTDistribution* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooBifurStudentsTDistribution[n];
     } else {
       p = new((void*) gvp) RooBifurStudentsTDistribution[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooBifurStudentsTDistribution;
     } else {
       p = new((void*) gvp) RooBifurStudentsTDistribution;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooBifurStudentsTDistribution));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_817_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooBifurStudentsTDistribution* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooBifurStudentsTDistribution(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref);
   } else {
     p = new((void*) gvp) RooBifurStudentsTDistribution(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooBifurStudentsTDistribution));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_817_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooBifurStudentsTDistribution* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooBifurStudentsTDistribution(*(RooBifurStudentsTDistribution*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooBifurStudentsTDistribution(*(RooBifurStudentsTDistribution*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooBifurStudentsTDistribution(*(RooBifurStudentsTDistribution*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooBifurStudentsTDistribution(*(RooBifurStudentsTDistribution*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooBifurStudentsTDistribution));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_817_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooBifurStudentsTDistribution::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_817_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooBifurStudentsTDistribution::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_817_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooBifurStudentsTDistribution::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_817_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooBifurStudentsTDistribution::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_817_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooBifurStudentsTDistribution*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_817_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooBifurStudentsTDistribution::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_817_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooBifurStudentsTDistribution::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_817_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooBifurStudentsTDistribution::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_817_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooBifurStudentsTDistribution::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooBifurStudentsTDistribution G__TRooBifurStudentsTDistribution;
static int G__RooComplexPDF_817_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooBifurStudentsTDistribution*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooBifurStudentsTDistribution*) (soff+(sizeof(RooBifurStudentsTDistribution)*i)))->~G__TRooBifurStudentsTDistribution();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooBifurStudentsTDistribution*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooBifurStudentsTDistribution*) (soff))->~G__TRooBifurStudentsTDistribution();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooStudentsTDistribution */
static int G__RooComplexPDF_818_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooStudentsTDistribution* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooStudentsTDistribution[n];
     } else {
       p = new((void*) gvp) RooStudentsTDistribution[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooStudentsTDistribution;
     } else {
       p = new((void*) gvp) RooStudentsTDistribution;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooStudentsTDistribution));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_818_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooStudentsTDistribution* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooStudentsTDistribution(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref);
   } else {
     p = new((void*) gvp) RooStudentsTDistribution(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooStudentsTDistribution));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_818_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooStudentsTDistribution* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooStudentsTDistribution(*(RooStudentsTDistribution*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooStudentsTDistribution(*(RooStudentsTDistribution*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooStudentsTDistribution(*(RooStudentsTDistribution*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooStudentsTDistribution(*(RooStudentsTDistribution*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooStudentsTDistribution));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_818_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RooStudentsTDistribution*) G__getstructoffset())->get_mean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_818_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RooStudentsTDistribution*) G__getstructoffset())->get_variance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_818_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooStudentsTDistribution::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_818_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooStudentsTDistribution::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_818_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooStudentsTDistribution::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_818_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooStudentsTDistribution::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_818_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooStudentsTDistribution*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_818_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooStudentsTDistribution::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_818_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooStudentsTDistribution::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_818_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooStudentsTDistribution::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_818_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooStudentsTDistribution::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooStudentsTDistribution G__TRooStudentsTDistribution;
static int G__RooComplexPDF_818_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooStudentsTDistribution*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooStudentsTDistribution*) (soff+(sizeof(RooStudentsTDistribution)*i)))->~G__TRooStudentsTDistribution();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooStudentsTDistribution*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooStudentsTDistribution*) (soff))->~G__TRooStudentsTDistribution();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooFlatte */
static int G__RooComplexPDF_819_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooFlatte* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooFlatte[n];
     } else {
       p = new((void*) gvp) RooFlatte[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooFlatte;
     } else {
       p = new((void*) gvp) RooFlatte;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatte));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_819_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooFlatte* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 15
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooFlatte(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]));
   } else {
     p = new((void*) gvp) RooFlatte(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatte));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_819_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooFlatte* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooFlatte(*(RooFlatte*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooFlatte(*(RooFlatte*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooFlatte(*(RooFlatte*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooFlatte(*(RooFlatte*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatte));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_819_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RooFlatte*) G__getstructoffset())->CalculateMomentum((const double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_819_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooFlatte::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_819_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooFlatte::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_819_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooFlatte::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_819_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooFlatte::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_819_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooFlatte*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_819_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooFlatte::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_819_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooFlatte::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_819_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooFlatte::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_819_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooFlatte::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooFlatte G__TRooFlatte;
static int G__RooComplexPDF_819_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooFlatte*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooFlatte*) (soff+(sizeof(RooFlatte)*i)))->~G__TRooFlatte();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooFlatte*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooFlatte*) (soff))->~G__TRooFlatte();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooLASS */
static int G__RooComplexPDF_820_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooLASS* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooLASS[n];
     } else {
       p = new((void*) gvp) RooLASS[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooLASS;
     } else {
       p = new((void*) gvp) RooLASS;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooLASS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_820_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooLASS* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooLASS(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
   } else {
     p = new((void*) gvp) RooLASS(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooLASS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_820_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooLASS* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooLASS(*(RooLASS*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooLASS(*(RooLASS*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooLASS(*(RooLASS*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooLASS(*(RooLASS*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooLASS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_820_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RooLASS*) G__getstructoffset())->CalculateMomentum((const double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_820_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooLASS::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_820_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooLASS::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_820_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooLASS::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_820_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooLASS::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_820_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooLASS*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_820_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooLASS::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_820_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooLASS::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_820_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooLASS::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_820_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooLASS::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooLASS G__TRooLASS;
static int G__RooComplexPDF_820_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooLASS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooLASS*) (soff+(sizeof(RooLASS)*i)))->~G__TRooLASS();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooLASS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooLASS*) (soff))->~G__TRooLASS();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooKPiMass */
static int G__RooComplexPDF_821_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooKPiMass* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooKPiMass[n];
     } else {
       p = new((void*) gvp) RooKPiMass[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooKPiMass;
     } else {
       p = new((void*) gvp) RooKPiMass;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooKPiMass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_821_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooKPiMass* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 21
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooKPiMass(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, *(RooAbsReal*) libp->para[13].ref
, *(RooAbsReal*) libp->para[14].ref, *(RooAbsReal*) libp->para[15].ref
, *(RooAbsReal*) libp->para[16].ref, *(RooAbsReal*) libp->para[17].ref
, *(RooAbsReal*) libp->para[18].ref, (double) G__double(libp->para[19])
, (double) G__double(libp->para[20]));
   } else {
     p = new((void*) gvp) RooKPiMass(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, *(RooAbsReal*) libp->para[13].ref
, *(RooAbsReal*) libp->para[14].ref, *(RooAbsReal*) libp->para[15].ref
, *(RooAbsReal*) libp->para[16].ref, *(RooAbsReal*) libp->para[17].ref
, *(RooAbsReal*) libp->para[18].ref, (double) G__double(libp->para[19])
, (double) G__double(libp->para[20]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooKPiMass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_821_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooKPiMass* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooKPiMass(*(RooKPiMass*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooKPiMass(*(RooKPiMass*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooKPiMass(*(RooKPiMass*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooKPiMass(*(RooKPiMass*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooKPiMass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_821_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RooKPiMass*) G__getstructoffset())->CalculateMomentum((const double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_821_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooKPiMass::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_821_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooKPiMass::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_821_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooKPiMass::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_821_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooKPiMass::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_821_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooKPiMass*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_821_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooKPiMass::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_821_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooKPiMass::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_821_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooKPiMass::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_821_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooKPiMass::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooKPiMass G__TRooKPiMass;
static int G__RooComplexPDF_821_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooKPiMass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooKPiMass*) (soff+(sizeof(RooKPiMass)*i)))->~G__TRooKPiMass();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooKPiMass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooKPiMass*) (soff))->~G__TRooKPiMass();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooHelicityAngles */
static int G__RooComplexPDF_822_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooHelicityAngles* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooHelicityAngles[n];
     } else {
       p = new((void*) gvp) RooHelicityAngles[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooHelicityAngles;
     } else {
       p = new((void*) gvp) RooHelicityAngles;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooHelicityAngles));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_822_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooHelicityAngles* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 13
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooHelicityAngles(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref);
   } else {
     p = new((void*) gvp) RooHelicityAngles(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooHelicityAngles));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_822_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooHelicityAngles* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooHelicityAngles(*(RooHelicityAngles*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooHelicityAngles(*(RooHelicityAngles*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooHelicityAngles(*(RooHelicityAngles*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooHelicityAngles(*(RooHelicityAngles*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooHelicityAngles));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_822_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooHelicityAngles::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_822_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooHelicityAngles::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_822_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooHelicityAngles::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_822_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooHelicityAngles::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_822_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooHelicityAngles*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_822_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooHelicityAngles::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_822_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooHelicityAngles::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_822_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooHelicityAngles::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_822_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooHelicityAngles::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooHelicityAngles G__TRooHelicityAngles;
static int G__RooComplexPDF_822_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooHelicityAngles*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooHelicityAngles*) (soff+(sizeof(RooHelicityAngles)*i)))->~G__TRooHelicityAngles();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooHelicityAngles*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooHelicityAngles*) (soff))->~G__TRooHelicityAngles();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooMassHelicityAngles */
static int G__RooComplexPDF_861_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooMassHelicityAngles* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooMassHelicityAngles[n];
     } else {
       p = new((void*) gvp) RooMassHelicityAngles[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooMassHelicityAngles;
     } else {
       p = new((void*) gvp) RooMassHelicityAngles;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_861_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooMassHelicityAngles* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 37
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooMassHelicityAngles(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, *(RooAbsReal*) libp->para[13].ref
, *(RooAbsReal*) libp->para[14].ref, *(RooAbsReal*) libp->para[15].ref
, *(RooAbsReal*) libp->para[16].ref, *(RooAbsReal*) libp->para[17].ref
, *(RooAbsReal*) libp->para[18].ref, *(RooAbsReal*) libp->para[19].ref
, *(RooAbsReal*) libp->para[20].ref, *(RooAbsReal*) libp->para[21].ref
, *(RooAbsReal*) libp->para[22].ref, *(RooAbsReal*) libp->para[23].ref
, *(RooAbsReal*) libp->para[24].ref, *(RooAbsReal*) libp->para[25].ref
, *(RooAbsReal*) libp->para[26].ref, *(RooAbsReal*) libp->para[27].ref
, *(RooAbsReal*) libp->para[28].ref, *(RooAbsReal*) libp->para[29].ref
, (ACCEPTANCE_FUNCTION) G__int(libp->para[30]), *((MHI_PDG_constants*) G__int(libp->para[31]))
, *((MHI_CacheIntegrators_4D*) G__int(libp->para[32])), *((MHI_CacheIntegrators_3D_phi_th1_th2*) G__int(libp->para[33]))
, *((MHI_CacheIntegrators_3D_m_th1_th2*) G__int(libp->para[34])), *((MHI_CacheIntegrators_3D_m_phi_th2*) G__int(libp->para[35]))
, *((MHI_CacheIntegrators_3D_m_phi_th1*) G__int(libp->para[36])));
   } else {
     p = new((void*) gvp) RooMassHelicityAngles(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, *(RooAbsReal*) libp->para[13].ref
, *(RooAbsReal*) libp->para[14].ref, *(RooAbsReal*) libp->para[15].ref
, *(RooAbsReal*) libp->para[16].ref, *(RooAbsReal*) libp->para[17].ref
, *(RooAbsReal*) libp->para[18].ref, *(RooAbsReal*) libp->para[19].ref
, *(RooAbsReal*) libp->para[20].ref, *(RooAbsReal*) libp->para[21].ref
, *(RooAbsReal*) libp->para[22].ref, *(RooAbsReal*) libp->para[23].ref
, *(RooAbsReal*) libp->para[24].ref, *(RooAbsReal*) libp->para[25].ref
, *(RooAbsReal*) libp->para[26].ref, *(RooAbsReal*) libp->para[27].ref
, *(RooAbsReal*) libp->para[28].ref, *(RooAbsReal*) libp->para[29].ref
, (ACCEPTANCE_FUNCTION) G__int(libp->para[30]), *((MHI_PDG_constants*) G__int(libp->para[31]))
, *((MHI_CacheIntegrators_4D*) G__int(libp->para[32])), *((MHI_CacheIntegrators_3D_phi_th1_th2*) G__int(libp->para[33]))
, *((MHI_CacheIntegrators_3D_m_th1_th2*) G__int(libp->para[34])), *((MHI_CacheIntegrators_3D_m_phi_th2*) G__int(libp->para[35]))
, *((MHI_CacheIntegrators_3D_m_phi_th1*) G__int(libp->para[36])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_861_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooMassHelicityAngles* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooMassHelicityAngles(*(RooMassHelicityAngles*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooMassHelicityAngles(*(RooMassHelicityAngles*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooMassHelicityAngles(*(RooMassHelicityAngles*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooMassHelicityAngles(*(RooMassHelicityAngles*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_861_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooMassHelicityAngles::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_861_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooMassHelicityAngles::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_861_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooMassHelicityAngles::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_861_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooMassHelicityAngles::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_861_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooMassHelicityAngles*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_861_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooMassHelicityAngles::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_861_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooMassHelicityAngles::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_861_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooMassHelicityAngles::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_861_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooMassHelicityAngles::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooMassHelicityAngles G__TRooMassHelicityAngles;
static int G__RooComplexPDF_861_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooMassHelicityAngles*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooMassHelicityAngles*) (soff+(sizeof(RooMassHelicityAngles)*i)))->~G__TRooMassHelicityAngles();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooMassHelicityAngles*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooMassHelicityAngles*) (soff))->~G__TRooMassHelicityAngles();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooVarianceGammaDistribution */
static int G__RooComplexPDF_862_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooVarianceGammaDistribution* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooVarianceGammaDistribution[n];
     } else {
       p = new((void*) gvp) RooVarianceGammaDistribution[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooVarianceGammaDistribution;
     } else {
       p = new((void*) gvp) RooVarianceGammaDistribution;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooVarianceGammaDistribution));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_862_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooVarianceGammaDistribution* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooVarianceGammaDistribution(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref);
   } else {
     p = new((void*) gvp) RooVarianceGammaDistribution(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooVarianceGammaDistribution));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_862_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooVarianceGammaDistribution* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooVarianceGammaDistribution(*(RooVarianceGammaDistribution*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooVarianceGammaDistribution(*(RooVarianceGammaDistribution*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooVarianceGammaDistribution(*(RooVarianceGammaDistribution*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooVarianceGammaDistribution(*(RooVarianceGammaDistribution*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooVarianceGammaDistribution));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_862_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RooVarianceGammaDistribution*) G__getstructoffset())->get_mean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_862_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RooVarianceGammaDistribution*) G__getstructoffset())->get_variance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_862_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooVarianceGammaDistribution::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_862_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooVarianceGammaDistribution::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_862_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooVarianceGammaDistribution::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_862_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooVarianceGammaDistribution::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_862_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooVarianceGammaDistribution*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_862_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooVarianceGammaDistribution::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_862_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooVarianceGammaDistribution::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_862_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooVarianceGammaDistribution::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_862_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooVarianceGammaDistribution::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooVarianceGammaDistribution G__TRooVarianceGammaDistribution;
static int G__RooComplexPDF_862_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooVarianceGammaDistribution*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooVarianceGammaDistribution*) (soff+(sizeof(RooVarianceGammaDistribution)*i)))->~G__TRooVarianceGammaDistribution();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooVarianceGammaDistribution*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooVarianceGammaDistribution*) (soff))->~G__TRooVarianceGammaDistribution();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooDalitzPhaseSpaceAmplitude */
static int G__RooComplexPDF_863_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzPhaseSpaceAmplitude* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzPhaseSpaceAmplitude[n];
     } else {
       p = new((void*) gvp) RooDalitzPhaseSpaceAmplitude[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzPhaseSpaceAmplitude;
     } else {
       p = new((void*) gvp) RooDalitzPhaseSpaceAmplitude;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzPhaseSpaceAmplitude));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_863_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzPhaseSpaceAmplitude* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooDalitzPhaseSpaceAmplitude(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
   } else {
     p = new((void*) gvp) RooDalitzPhaseSpaceAmplitude(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzPhaseSpaceAmplitude));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_863_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzPhaseSpaceAmplitude* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzPhaseSpaceAmplitude(*(RooDalitzPhaseSpaceAmplitude*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooDalitzPhaseSpaceAmplitude(*(RooDalitzPhaseSpaceAmplitude*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzPhaseSpaceAmplitude(*(RooDalitzPhaseSpaceAmplitude*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooDalitzPhaseSpaceAmplitude(*(RooDalitzPhaseSpaceAmplitude*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzPhaseSpaceAmplitude));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_863_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooDalitzPhaseSpaceAmplitude::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_863_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzPhaseSpaceAmplitude::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_863_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooDalitzPhaseSpaceAmplitude::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_863_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooDalitzPhaseSpaceAmplitude::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_863_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooDalitzPhaseSpaceAmplitude*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_863_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzPhaseSpaceAmplitude::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_863_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooDalitzPhaseSpaceAmplitude::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_863_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzPhaseSpaceAmplitude::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_863_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooDalitzPhaseSpaceAmplitude::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooDalitzPhaseSpaceAmplitude G__TRooDalitzPhaseSpaceAmplitude;
static int G__RooComplexPDF_863_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooDalitzPhaseSpaceAmplitude*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooDalitzPhaseSpaceAmplitude*) (soff+(sizeof(RooDalitzPhaseSpaceAmplitude)*i)))->~G__TRooDalitzPhaseSpaceAmplitude();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooDalitzPhaseSpaceAmplitude*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooDalitzPhaseSpaceAmplitude*) (soff))->~G__TRooDalitzPhaseSpaceAmplitude();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooDalitzCubicPolynomial */
static int G__RooComplexPDF_864_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzCubicPolynomial* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzCubicPolynomial[n];
     } else {
       p = new((void*) gvp) RooDalitzCubicPolynomial[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzCubicPolynomial;
     } else {
       p = new((void*) gvp) RooDalitzCubicPolynomial;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomial));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_864_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzCubicPolynomial* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 19:
     //m: 19
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzCubicPolynomial(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]), (double) G__double(libp->para[15])
, (double) G__double(libp->para[16]), (double) G__double(libp->para[17])
, (double) G__double(libp->para[18]));
     } else {
       p = new((void*) gvp) RooDalitzCubicPolynomial(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]), (double) G__double(libp->para[15])
, (double) G__double(libp->para[16]), (double) G__double(libp->para[17])
, (double) G__double(libp->para[18]));
     }
     break;
   case 18:
     //m: 18
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzCubicPolynomial(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]), (double) G__double(libp->para[15])
, (double) G__double(libp->para[16]), (double) G__double(libp->para[17]));
     } else {
       p = new((void*) gvp) RooDalitzCubicPolynomial(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]), (double) G__double(libp->para[15])
, (double) G__double(libp->para[16]), (double) G__double(libp->para[17]));
     }
     break;
   case 17:
     //m: 17
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzCubicPolynomial(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]), (double) G__double(libp->para[15])
, (double) G__double(libp->para[16]));
     } else {
       p = new((void*) gvp) RooDalitzCubicPolynomial(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]), (double) G__double(libp->para[15])
, (double) G__double(libp->para[16]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomial));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_864_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzCubicPolynomial* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzCubicPolynomial(*(RooDalitzCubicPolynomial*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooDalitzCubicPolynomial(*(RooDalitzCubicPolynomial*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzCubicPolynomial(*(RooDalitzCubicPolynomial*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooDalitzCubicPolynomial(*(RooDalitzCubicPolynomial*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomial));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_864_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RooDalitzCubicPolynomial*) G__getstructoffset())->adaptiveSimpsonsAux(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (int) G__int(libp->para[8])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_864_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RooDalitzCubicPolynomial*) G__getstructoffset())->adaptiveSimpsons((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_864_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooDalitzCubicPolynomial::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_864_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzCubicPolynomial::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_864_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooDalitzCubicPolynomial::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_864_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooDalitzCubicPolynomial::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_864_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooDalitzCubicPolynomial*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_864_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzCubicPolynomial::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_864_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooDalitzCubicPolynomial::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_864_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzCubicPolynomial::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_864_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooDalitzCubicPolynomial::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooDalitzCubicPolynomial G__TRooDalitzCubicPolynomial;
static int G__RooComplexPDF_864_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooDalitzCubicPolynomial*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooDalitzCubicPolynomial*) (soff+(sizeof(RooDalitzCubicPolynomial)*i)))->~G__TRooDalitzCubicPolynomial();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooDalitzCubicPolynomial*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooDalitzCubicPolynomial*) (soff))->~G__TRooDalitzCubicPolynomial();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooDalitzCubicPolynomialSymmetric */
static int G__RooComplexPDF_865_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzCubicPolynomialSymmetric* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzCubicPolynomialSymmetric[n];
     } else {
       p = new((void*) gvp) RooDalitzCubicPolynomialSymmetric[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzCubicPolynomialSymmetric;
     } else {
       p = new((void*) gvp) RooDalitzCubicPolynomialSymmetric;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomialSymmetric));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_865_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzCubicPolynomialSymmetric* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 15:
     //m: 15
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzCubicPolynomialSymmetric(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]));
     } else {
       p = new((void*) gvp) RooDalitzCubicPolynomialSymmetric(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]));
     }
     break;
   case 14:
     //m: 14
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzCubicPolynomialSymmetric(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13]));
     } else {
       p = new((void*) gvp) RooDalitzCubicPolynomialSymmetric(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13]));
     }
     break;
   case 13:
     //m: 13
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzCubicPolynomialSymmetric(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]));
     } else {
       p = new((void*) gvp) RooDalitzCubicPolynomialSymmetric(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomialSymmetric));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_865_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzCubicPolynomialSymmetric* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzCubicPolynomialSymmetric(*(RooDalitzCubicPolynomialSymmetric*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooDalitzCubicPolynomialSymmetric(*(RooDalitzCubicPolynomialSymmetric*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzCubicPolynomialSymmetric(*(RooDalitzCubicPolynomialSymmetric*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooDalitzCubicPolynomialSymmetric(*(RooDalitzCubicPolynomialSymmetric*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomialSymmetric));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_865_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooDalitzCubicPolynomialSymmetric::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_865_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzCubicPolynomialSymmetric::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_865_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooDalitzCubicPolynomialSymmetric::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_865_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooDalitzCubicPolynomialSymmetric::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_865_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooDalitzCubicPolynomialSymmetric*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_865_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzCubicPolynomialSymmetric::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_865_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooDalitzCubicPolynomialSymmetric::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_865_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzCubicPolynomialSymmetric::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_865_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooDalitzCubicPolynomialSymmetric::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooDalitzCubicPolynomialSymmetric G__TRooDalitzCubicPolynomialSymmetric;
static int G__RooComplexPDF_865_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooDalitzCubicPolynomialSymmetric*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooDalitzCubicPolynomialSymmetric*) (soff+(sizeof(RooDalitzCubicPolynomialSymmetric)*i)))->~G__TRooDalitzCubicPolynomialSymmetric();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooDalitzCubicPolynomialSymmetric*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooDalitzCubicPolynomialSymmetric*) (soff))->~G__TRooDalitzCubicPolynomialSymmetric();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooTwoBodyThresholdFunction */
static int G__RooComplexPDF_866_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooTwoBodyThresholdFunction* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooTwoBodyThresholdFunction[n];
     } else {
       p = new((void*) gvp) RooTwoBodyThresholdFunction[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooTwoBodyThresholdFunction;
     } else {
       p = new((void*) gvp) RooTwoBodyThresholdFunction;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooTwoBodyThresholdFunction));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_866_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooTwoBodyThresholdFunction* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooTwoBodyThresholdFunction(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, (double) G__double(libp->para[4]));
   } else {
     p = new((void*) gvp) RooTwoBodyThresholdFunction(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, (double) G__double(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooTwoBodyThresholdFunction));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_866_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooTwoBodyThresholdFunction* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooTwoBodyThresholdFunction(*(RooTwoBodyThresholdFunction*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooTwoBodyThresholdFunction(*(RooTwoBodyThresholdFunction*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooTwoBodyThresholdFunction(*(RooTwoBodyThresholdFunction*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooTwoBodyThresholdFunction(*(RooTwoBodyThresholdFunction*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooTwoBodyThresholdFunction));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_866_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooTwoBodyThresholdFunction::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_866_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooTwoBodyThresholdFunction::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_866_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooTwoBodyThresholdFunction::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_866_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooTwoBodyThresholdFunction::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_866_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooTwoBodyThresholdFunction*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_866_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooTwoBodyThresholdFunction::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_866_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooTwoBodyThresholdFunction::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_866_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooTwoBodyThresholdFunction::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_866_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooTwoBodyThresholdFunction::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooTwoBodyThresholdFunction G__TRooTwoBodyThresholdFunction;
static int G__RooComplexPDF_866_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooTwoBodyThresholdFunction*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooTwoBodyThresholdFunction*) (soff+(sizeof(RooTwoBodyThresholdFunction)*i)))->~G__TRooTwoBodyThresholdFunction();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooTwoBodyThresholdFunction*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooTwoBodyThresholdFunction*) (soff))->~G__TRooTwoBodyThresholdFunction();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooMassHelicityAngles_TransformedBase */
static int G__RooComplexPDF_867_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooMassHelicityAngles_TransformedBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooMassHelicityAngles_TransformedBase[n];
     } else {
       p = new((void*) gvp) RooMassHelicityAngles_TransformedBase[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooMassHelicityAngles_TransformedBase;
     } else {
       p = new((void*) gvp) RooMassHelicityAngles_TransformedBase;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles_TransformedBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_867_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooMassHelicityAngles_TransformedBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 37
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooMassHelicityAngles_TransformedBase(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, *(RooAbsReal*) libp->para[13].ref
, *(RooAbsReal*) libp->para[14].ref, *(RooAbsReal*) libp->para[15].ref
, *(RooAbsReal*) libp->para[16].ref, *(RooAbsReal*) libp->para[17].ref
, *(RooAbsReal*) libp->para[18].ref, *(RooAbsReal*) libp->para[19].ref
, *(RooAbsReal*) libp->para[20].ref, *(RooAbsReal*) libp->para[21].ref
, *(RooAbsReal*) libp->para[22].ref, *(RooAbsReal*) libp->para[23].ref
, *(RooAbsReal*) libp->para[24].ref, *(RooAbsReal*) libp->para[25].ref
, *(RooAbsReal*) libp->para[26].ref, *(RooAbsReal*) libp->para[27].ref
, *(RooAbsReal*) libp->para[28].ref, *(RooAbsReal*) libp->para[29].ref
, (ACCEPTANCE_FUNCTION) G__int(libp->para[30]), *((MHI_PDG_constants*) G__int(libp->para[31]))
, *((MHI_CacheIntegrators_4D*) G__int(libp->para[32])), *((MHI_CacheIntegrators_3D_phi_th1_th2*) G__int(libp->para[33]))
, *((MHI_CacheIntegrators_3D_m_th1_th2*) G__int(libp->para[34])), *((MHI_CacheIntegrators_3D_m_phi_th2*) G__int(libp->para[35]))
, *((MHI_CacheIntegrators_3D_m_phi_th1*) G__int(libp->para[36])));
   } else {
     p = new((void*) gvp) RooMassHelicityAngles_TransformedBase(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, *(RooAbsReal*) libp->para[13].ref
, *(RooAbsReal*) libp->para[14].ref, *(RooAbsReal*) libp->para[15].ref
, *(RooAbsReal*) libp->para[16].ref, *(RooAbsReal*) libp->para[17].ref
, *(RooAbsReal*) libp->para[18].ref, *(RooAbsReal*) libp->para[19].ref
, *(RooAbsReal*) libp->para[20].ref, *(RooAbsReal*) libp->para[21].ref
, *(RooAbsReal*) libp->para[22].ref, *(RooAbsReal*) libp->para[23].ref
, *(RooAbsReal*) libp->para[24].ref, *(RooAbsReal*) libp->para[25].ref
, *(RooAbsReal*) libp->para[26].ref, *(RooAbsReal*) libp->para[27].ref
, *(RooAbsReal*) libp->para[28].ref, *(RooAbsReal*) libp->para[29].ref
, (ACCEPTANCE_FUNCTION) G__int(libp->para[30]), *((MHI_PDG_constants*) G__int(libp->para[31]))
, *((MHI_CacheIntegrators_4D*) G__int(libp->para[32])), *((MHI_CacheIntegrators_3D_phi_th1_th2*) G__int(libp->para[33]))
, *((MHI_CacheIntegrators_3D_m_th1_th2*) G__int(libp->para[34])), *((MHI_CacheIntegrators_3D_m_phi_th2*) G__int(libp->para[35]))
, *((MHI_CacheIntegrators_3D_m_phi_th1*) G__int(libp->para[36])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles_TransformedBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_867_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooMassHelicityAngles_TransformedBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooMassHelicityAngles_TransformedBase(*(RooMassHelicityAngles_TransformedBase*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooMassHelicityAngles_TransformedBase(*(RooMassHelicityAngles_TransformedBase*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooMassHelicityAngles_TransformedBase(*(RooMassHelicityAngles_TransformedBase*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooMassHelicityAngles_TransformedBase(*(RooMassHelicityAngles_TransformedBase*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles_TransformedBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_867_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooMassHelicityAngles_TransformedBase::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_867_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooMassHelicityAngles_TransformedBase::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_867_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooMassHelicityAngles_TransformedBase::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_867_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooMassHelicityAngles_TransformedBase::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_867_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooMassHelicityAngles_TransformedBase*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_867_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooMassHelicityAngles_TransformedBase::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_867_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooMassHelicityAngles_TransformedBase::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_867_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooMassHelicityAngles_TransformedBase::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_867_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooMassHelicityAngles_TransformedBase::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooMassHelicityAngles_TransformedBase G__TRooMassHelicityAngles_TransformedBase;
static int G__RooComplexPDF_867_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooMassHelicityAngles_TransformedBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooMassHelicityAngles_TransformedBase*) (soff+(sizeof(RooMassHelicityAngles_TransformedBase)*i)))->~G__TRooMassHelicityAngles_TransformedBase();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooMassHelicityAngles_TransformedBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooMassHelicityAngles_TransformedBase*) (soff))->~G__TRooMassHelicityAngles_TransformedBase();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooMassHelicityAnglesCPV */
static int G__RooComplexPDF_869_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooMassHelicityAnglesCPV* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooMassHelicityAnglesCPV[n];
     } else {
       p = new((void*) gvp) RooMassHelicityAnglesCPV[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooMassHelicityAnglesCPV;
     } else {
       p = new((void*) gvp) RooMassHelicityAnglesCPV;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAnglesCPV));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_869_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooMassHelicityAnglesCPV* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 39
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooMassHelicityAnglesCPV(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsCategory*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, *(RooAbsReal*) libp->para[13].ref
, *(RooAbsReal*) libp->para[14].ref, *(RooAbsReal*) libp->para[15].ref
, *(RooAbsReal*) libp->para[16].ref, *(RooAbsReal*) libp->para[17].ref
, *(RooAbsReal*) libp->para[18].ref, *(RooAbsReal*) libp->para[19].ref
, *(RooAbsReal*) libp->para[20].ref, *(RooAbsReal*) libp->para[21].ref
, *(RooAbsReal*) libp->para[22].ref, *(RooAbsReal*) libp->para[23].ref
, *(RooAbsReal*) libp->para[24].ref, *(RooAbsReal*) libp->para[25].ref
, *(RooAbsReal*) libp->para[26].ref, *(RooAbsReal*) libp->para[27].ref
, *(RooAbsReal*) libp->para[28].ref, *(RooAbsReal*) libp->para[29].ref
, *(RooAbsReal*) libp->para[30].ref, (ACCEPTANCE_FUNCTION) G__int(libp->para[31])
, *((MHI_CC_parameters*) G__int(libp->para[32])), *((MHI_PDG_constants*) G__int(libp->para[33]))
, *((MHI_CacheIntegrators_4D*) G__int(libp->para[34])), *((MHI_CacheIntegrators_3D_phi_th1_th2*) G__int(libp->para[35]))
, *((MHI_CacheIntegrators_3D_m_th1_th2*) G__int(libp->para[36])), *((MHI_CacheIntegrators_3D_m_phi_th2*) G__int(libp->para[37]))
, *((MHI_CacheIntegrators_3D_m_phi_th1*) G__int(libp->para[38])));
   } else {
     p = new((void*) gvp) RooMassHelicityAnglesCPV(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsCategory*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, *(RooAbsReal*) libp->para[13].ref
, *(RooAbsReal*) libp->para[14].ref, *(RooAbsReal*) libp->para[15].ref
, *(RooAbsReal*) libp->para[16].ref, *(RooAbsReal*) libp->para[17].ref
, *(RooAbsReal*) libp->para[18].ref, *(RooAbsReal*) libp->para[19].ref
, *(RooAbsReal*) libp->para[20].ref, *(RooAbsReal*) libp->para[21].ref
, *(RooAbsReal*) libp->para[22].ref, *(RooAbsReal*) libp->para[23].ref
, *(RooAbsReal*) libp->para[24].ref, *(RooAbsReal*) libp->para[25].ref
, *(RooAbsReal*) libp->para[26].ref, *(RooAbsReal*) libp->para[27].ref
, *(RooAbsReal*) libp->para[28].ref, *(RooAbsReal*) libp->para[29].ref
, *(RooAbsReal*) libp->para[30].ref, (ACCEPTANCE_FUNCTION) G__int(libp->para[31])
, *((MHI_CC_parameters*) G__int(libp->para[32])), *((MHI_PDG_constants*) G__int(libp->para[33]))
, *((MHI_CacheIntegrators_4D*) G__int(libp->para[34])), *((MHI_CacheIntegrators_3D_phi_th1_th2*) G__int(libp->para[35]))
, *((MHI_CacheIntegrators_3D_m_th1_th2*) G__int(libp->para[36])), *((MHI_CacheIntegrators_3D_m_phi_th2*) G__int(libp->para[37]))
, *((MHI_CacheIntegrators_3D_m_phi_th1*) G__int(libp->para[38])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAnglesCPV));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_869_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooMassHelicityAnglesCPV* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooMassHelicityAnglesCPV(*(RooMassHelicityAnglesCPV*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooMassHelicityAnglesCPV(*(RooMassHelicityAnglesCPV*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooMassHelicityAnglesCPV(*(RooMassHelicityAnglesCPV*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooMassHelicityAnglesCPV(*(RooMassHelicityAnglesCPV*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAnglesCPV));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_869_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const RooMassHelicityAnglesCPV*) G__getstructoffset())->getAsymmetry((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const RooMassHelicityAnglesCPV*) G__getstructoffset())->getAsymmetry());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_869_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooMassHelicityAnglesCPV::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_869_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooMassHelicityAnglesCPV::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_869_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooMassHelicityAnglesCPV::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_869_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooMassHelicityAnglesCPV::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_869_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooMassHelicityAnglesCPV*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_869_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooMassHelicityAnglesCPV::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_869_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooMassHelicityAnglesCPV::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_869_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooMassHelicityAnglesCPV::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_869_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooMassHelicityAnglesCPV::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooMassHelicityAnglesCPV G__TRooMassHelicityAnglesCPV;
static int G__RooComplexPDF_869_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooMassHelicityAnglesCPV*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooMassHelicityAnglesCPV*) (soff+(sizeof(RooMassHelicityAnglesCPV)*i)))->~G__TRooMassHelicityAnglesCPV();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooMassHelicityAnglesCPV*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooMassHelicityAnglesCPV*) (soff))->~G__TRooMassHelicityAnglesCPV();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooCutPdf */
static int G__RooComplexPDF_870_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooCutPdf* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooCutPdf[n];
     } else {
       p = new((void*) gvp) RooCutPdf[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooCutPdf;
     } else {
       p = new((void*) gvp) RooCutPdf;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooCutPdf));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_870_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooCutPdf* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooCutPdf(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, (double) G__double(libp->para[3])
, (bool) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) RooCutPdf(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, (double) G__double(libp->para[3])
, (bool) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooCutPdf));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_870_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooCutPdf* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooCutPdf(*(RooCutPdf*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooCutPdf(*(RooCutPdf*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooCutPdf(*(RooCutPdf*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooCutPdf(*(RooCutPdf*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooCutPdf));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_870_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooCutPdf::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_870_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooCutPdf::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_870_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooCutPdf::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_870_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooCutPdf::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_870_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooCutPdf*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_870_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooCutPdf::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_870_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooCutPdf::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_870_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooCutPdf::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_870_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooCutPdf::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooCutPdf G__TRooCutPdf;
static int G__RooComplexPDF_870_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooCutPdf*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooCutPdf*) (soff+(sizeof(RooCutPdf)*i)))->~G__TRooCutPdf();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooCutPdf*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooCutPdf*) (soff))->~G__TRooCutPdf();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooChebychevCut */
static int G__RooComplexPDF_871_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooChebychevCut* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooChebychevCut[n];
     } else {
       p = new((void*) gvp) RooChebychevCut[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooChebychevCut;
     } else {
       p = new((void*) gvp) RooChebychevCut;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooChebychevCut));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_871_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooChebychevCut* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooChebychevCut(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooArgList*) libp->para[3].ref
, (const double) G__double(libp->para[4]));
   } else {
     p = new((void*) gvp) RooChebychevCut(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooArgList*) libp->para[3].ref
, (const double) G__double(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooChebychevCut));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_871_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooChebychevCut* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooChebychevCut(*(RooChebychevCut*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooChebychevCut(*(RooChebychevCut*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooChebychevCut(*(RooChebychevCut*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooChebychevCut(*(RooChebychevCut*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooChebychevCut));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_871_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooChebychevCut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_871_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooChebychevCut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_871_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooChebychevCut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_871_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooChebychevCut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_871_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooChebychevCut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_871_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooChebychevCut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_871_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooChebychevCut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_871_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooChebychevCut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_871_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooChebychevCut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooChebychevCut G__TRooChebychevCut;
static int G__RooComplexPDF_871_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooChebychevCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooChebychevCut*) (soff+(sizeof(RooChebychevCut)*i)))->~G__TRooChebychevCut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooChebychevCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooChebychevCut*) (soff))->~G__TRooChebychevCut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooCategoryPdf */
static int G__RooComplexPDF_872_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooCategoryPdf* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooCategoryPdf[n];
     } else {
       p = new((void*) gvp) RooCategoryPdf[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooCategoryPdf;
     } else {
       p = new((void*) gvp) RooCategoryPdf;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooCategoryPdf));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_872_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooCategoryPdf* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooCategoryPdf(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsCategory*) libp->para[2].ref);
   } else {
     p = new((void*) gvp) RooCategoryPdf(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsCategory*) libp->para[2].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooCategoryPdf));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_872_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooCategoryPdf* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooCategoryPdf(*(RooCategoryPdf*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooCategoryPdf(*(RooCategoryPdf*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooCategoryPdf(*(RooCategoryPdf*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooCategoryPdf(*(RooCategoryPdf*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooCategoryPdf));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_872_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooCategoryPdf::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_872_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooCategoryPdf::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_872_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooCategoryPdf::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_872_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooCategoryPdf::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_872_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooCategoryPdf*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_872_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooCategoryPdf::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_872_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooCategoryPdf::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_872_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooCategoryPdf::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_872_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooCategoryPdf::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooCategoryPdf G__TRooCategoryPdf;
static int G__RooComplexPDF_872_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooCategoryPdf*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooCategoryPdf*) (soff+(sizeof(RooCategoryPdf)*i)))->~G__TRooCategoryPdf();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooCategoryPdf*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooCategoryPdf*) (soff))->~G__TRooCategoryPdf();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooFlatteAndNonRes */
static int G__RooComplexPDF_873_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooFlatteAndNonRes* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooFlatteAndNonRes[n];
     } else {
       p = new((void*) gvp) RooFlatteAndNonRes[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooFlatteAndNonRes;
     } else {
       p = new((void*) gvp) RooFlatteAndNonRes;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatteAndNonRes));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_873_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooFlatteAndNonRes* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 21
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooFlatteAndNonRes(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]), (double) G__double(libp->para[15])
, (double) G__double(libp->para[16]), (double) G__double(libp->para[17])
, (double) G__double(libp->para[18]), (double) G__double(libp->para[19])
, (double) G__double(libp->para[20]));
   } else {
     p = new((void*) gvp) RooFlatteAndNonRes(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]), (double) G__double(libp->para[15])
, (double) G__double(libp->para[16]), (double) G__double(libp->para[17])
, (double) G__double(libp->para[18]), (double) G__double(libp->para[19])
, (double) G__double(libp->para[20]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatteAndNonRes));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_873_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooFlatteAndNonRes* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooFlatteAndNonRes(*(RooFlatteAndNonRes*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooFlatteAndNonRes(*(RooFlatteAndNonRes*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooFlatteAndNonRes(*(RooFlatteAndNonRes*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooFlatteAndNonRes(*(RooFlatteAndNonRes*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatteAndNonRes));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_873_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RooFlatteAndNonRes*) G__getstructoffset())->CalculateMomentum((const double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_873_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooFlatteAndNonRes::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_873_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooFlatteAndNonRes::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_873_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooFlatteAndNonRes::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_873_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooFlatteAndNonRes::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_873_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooFlatteAndNonRes*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_873_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooFlatteAndNonRes::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_873_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooFlatteAndNonRes::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_873_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooFlatteAndNonRes::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_873_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooFlatteAndNonRes::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooFlatteAndNonRes G__TRooFlatteAndNonRes;
static int G__RooComplexPDF_873_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooFlatteAndNonRes*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooFlatteAndNonRes*) (soff+(sizeof(RooFlatteAndNonRes)*i)))->~G__TRooFlatteAndNonRes();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooFlatteAndNonRes*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooFlatteAndNonRes*) (soff))->~G__TRooFlatteAndNonRes();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooKKInterference */
static int G__RooComplexPDF_881_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooKKInterference* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooKKInterference[n];
     } else {
       p = new((void*) gvp) RooKKInterference[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooKKInterference;
     } else {
       p = new((void*) gvp) RooKKInterference;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterference));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_881_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooKKInterference* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 34
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooKKInterference(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, *(RooAbsReal*) libp->para[13].ref
, *(RooAbsReal*) libp->para[14].ref, *(RooAbsReal*) libp->para[15].ref
, *(RooAbsReal*) libp->para[16].ref, *(RooAbsReal*) libp->para[17].ref
, *(RooAbsReal*) libp->para[18].ref, *(RooAbsReal*) libp->para[19].ref
, *(RooAbsReal*) libp->para[20].ref, *(RooAbsReal*) libp->para[21].ref
, (ACCEPTANCE_FUNCTION) G__int(libp->para[22]), (double) G__double(libp->para[23])
, (double) G__double(libp->para[24]), (double) G__double(libp->para[25])
, (double) G__double(libp->para[26]), (double) G__double(libp->para[27])
, (double) G__double(libp->para[28]), (double) G__double(libp->para[29])
, (double) G__double(libp->para[30]), (double) G__double(libp->para[31])
, (double) G__double(libp->para[32]), *((KKInterferenceCacheIntegrators_4D*) G__int(libp->para[33])));
   } else {
     p = new((void*) gvp) RooKKInterference(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, *(RooAbsReal*) libp->para[13].ref
, *(RooAbsReal*) libp->para[14].ref, *(RooAbsReal*) libp->para[15].ref
, *(RooAbsReal*) libp->para[16].ref, *(RooAbsReal*) libp->para[17].ref
, *(RooAbsReal*) libp->para[18].ref, *(RooAbsReal*) libp->para[19].ref
, *(RooAbsReal*) libp->para[20].ref, *(RooAbsReal*) libp->para[21].ref
, (ACCEPTANCE_FUNCTION) G__int(libp->para[22]), (double) G__double(libp->para[23])
, (double) G__double(libp->para[24]), (double) G__double(libp->para[25])
, (double) G__double(libp->para[26]), (double) G__double(libp->para[27])
, (double) G__double(libp->para[28]), (double) G__double(libp->para[29])
, (double) G__double(libp->para[30]), (double) G__double(libp->para[31])
, (double) G__double(libp->para[32]), *((KKInterferenceCacheIntegrators_4D*) G__int(libp->para[33])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterference));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_881_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooKKInterference* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooKKInterference(*(RooKKInterference*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooKKInterference(*(RooKKInterference*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooKKInterference(*(RooKKInterference*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooKKInterference(*(RooKKInterference*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterference));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_881_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooKKInterference::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_881_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooKKInterference::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_881_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooKKInterference::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_881_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooKKInterference::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_881_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooKKInterference*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_881_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooKKInterference::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_881_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooKKInterference::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_881_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooKKInterference::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_881_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooKKInterference::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooKKInterference G__TRooKKInterference;
static int G__RooComplexPDF_881_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooKKInterference*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooKKInterference*) (soff+(sizeof(RooKKInterference)*i)))->~G__TRooKKInterference();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooKKInterference*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooKKInterference*) (soff))->~G__TRooKKInterference();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooKKInterferenceNorm */
static int G__RooComplexPDF_882_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooKKInterferenceNorm* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooKKInterferenceNorm[n];
     } else {
       p = new((void*) gvp) RooKKInterferenceNorm[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooKKInterferenceNorm;
     } else {
       p = new((void*) gvp) RooKKInterferenceNorm;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferenceNorm));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_882_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooKKInterferenceNorm* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 34
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooKKInterferenceNorm(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, *(RooAbsReal*) libp->para[13].ref
, *(RooAbsReal*) libp->para[14].ref, *(RooAbsReal*) libp->para[15].ref
, *(RooAbsReal*) libp->para[16].ref, *(RooAbsReal*) libp->para[17].ref
, *(RooAbsReal*) libp->para[18].ref, *(RooAbsReal*) libp->para[19].ref
, *(RooAbsReal*) libp->para[20].ref, *(RooAbsReal*) libp->para[21].ref
, (ACCEPTANCE_FUNCTION) G__int(libp->para[22]), (double) G__double(libp->para[23])
, (double) G__double(libp->para[24]), (double) G__double(libp->para[25])
, (double) G__double(libp->para[26]), (double) G__double(libp->para[27])
, (double) G__double(libp->para[28]), (double) G__double(libp->para[29])
, (double) G__double(libp->para[30]), (double) G__double(libp->para[31])
, (double) G__double(libp->para[32]), *((KKInterferenceCacheIntegrators_4D*) G__int(libp->para[33])));
   } else {
     p = new((void*) gvp) RooKKInterferenceNorm(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, *(RooAbsReal*) libp->para[13].ref
, *(RooAbsReal*) libp->para[14].ref, *(RooAbsReal*) libp->para[15].ref
, *(RooAbsReal*) libp->para[16].ref, *(RooAbsReal*) libp->para[17].ref
, *(RooAbsReal*) libp->para[18].ref, *(RooAbsReal*) libp->para[19].ref
, *(RooAbsReal*) libp->para[20].ref, *(RooAbsReal*) libp->para[21].ref
, (ACCEPTANCE_FUNCTION) G__int(libp->para[22]), (double) G__double(libp->para[23])
, (double) G__double(libp->para[24]), (double) G__double(libp->para[25])
, (double) G__double(libp->para[26]), (double) G__double(libp->para[27])
, (double) G__double(libp->para[28]), (double) G__double(libp->para[29])
, (double) G__double(libp->para[30]), (double) G__double(libp->para[31])
, (double) G__double(libp->para[32]), *((KKInterferenceCacheIntegrators_4D*) G__int(libp->para[33])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferenceNorm));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_882_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooKKInterferenceNorm* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooKKInterferenceNorm(*(RooKKInterferenceNorm*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooKKInterferenceNorm(*(RooKKInterferenceNorm*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooKKInterferenceNorm(*(RooKKInterferenceNorm*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooKKInterferenceNorm(*(RooKKInterferenceNorm*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferenceNorm));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_882_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooKKInterferenceNorm::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_882_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooKKInterferenceNorm::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_882_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooKKInterferenceNorm::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_882_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooKKInterferenceNorm::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_882_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooKKInterferenceNorm*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_882_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooKKInterferenceNorm::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_882_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooKKInterferenceNorm::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_882_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooKKInterferenceNorm::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_882_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooKKInterferenceNorm::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooKKInterferenceNorm G__TRooKKInterferenceNorm;
static int G__RooComplexPDF_882_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooKKInterferenceNorm*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooKKInterferenceNorm*) (soff+(sizeof(RooKKInterferenceNorm)*i)))->~G__TRooKKInterferenceNorm();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooKKInterferenceNorm*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooKKInterferenceNorm*) (soff))->~G__TRooKKInterferenceNorm();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooKKInterferencePositive */
static int G__RooComplexPDF_883_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooKKInterferencePositive* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooKKInterferencePositive[n];
     } else {
       p = new((void*) gvp) RooKKInterferencePositive[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooKKInterferencePositive;
     } else {
       p = new((void*) gvp) RooKKInterferencePositive;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferencePositive));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_883_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooKKInterferencePositive* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 34
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooKKInterferencePositive(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, *(RooAbsReal*) libp->para[13].ref
, *(RooAbsReal*) libp->para[14].ref, *(RooAbsReal*) libp->para[15].ref
, *(RooAbsReal*) libp->para[16].ref, *(RooAbsReal*) libp->para[17].ref
, *(RooAbsReal*) libp->para[18].ref, *(RooAbsReal*) libp->para[19].ref
, *(RooAbsReal*) libp->para[20].ref, *(RooAbsReal*) libp->para[21].ref
, (ACCEPTANCE_FUNCTION) G__int(libp->para[22]), (double) G__double(libp->para[23])
, (double) G__double(libp->para[24]), (double) G__double(libp->para[25])
, (double) G__double(libp->para[26]), (double) G__double(libp->para[27])
, (double) G__double(libp->para[28]), (double) G__double(libp->para[29])
, (double) G__double(libp->para[30]), (double) G__double(libp->para[31])
, (double) G__double(libp->para[32]), *((KKInterferenceCacheIntegrators_4D*) G__int(libp->para[33])));
   } else {
     p = new((void*) gvp) RooKKInterferencePositive(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, *(RooAbsReal*) libp->para[13].ref
, *(RooAbsReal*) libp->para[14].ref, *(RooAbsReal*) libp->para[15].ref
, *(RooAbsReal*) libp->para[16].ref, *(RooAbsReal*) libp->para[17].ref
, *(RooAbsReal*) libp->para[18].ref, *(RooAbsReal*) libp->para[19].ref
, *(RooAbsReal*) libp->para[20].ref, *(RooAbsReal*) libp->para[21].ref
, (ACCEPTANCE_FUNCTION) G__int(libp->para[22]), (double) G__double(libp->para[23])
, (double) G__double(libp->para[24]), (double) G__double(libp->para[25])
, (double) G__double(libp->para[26]), (double) G__double(libp->para[27])
, (double) G__double(libp->para[28]), (double) G__double(libp->para[29])
, (double) G__double(libp->para[30]), (double) G__double(libp->para[31])
, (double) G__double(libp->para[32]), *((KKInterferenceCacheIntegrators_4D*) G__int(libp->para[33])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferencePositive));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_883_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooKKInterferencePositive* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooKKInterferencePositive(*(RooKKInterferencePositive*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooKKInterferencePositive(*(RooKKInterferencePositive*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooKKInterferencePositive(*(RooKKInterferencePositive*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooKKInterferencePositive(*(RooKKInterferencePositive*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferencePositive));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_883_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooKKInterferencePositive::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_883_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooKKInterferencePositive::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_883_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooKKInterferencePositive::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_883_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooKKInterferencePositive::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_883_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooKKInterferencePositive*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_883_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooKKInterferencePositive::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_883_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooKKInterferencePositive::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_883_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooKKInterferencePositive::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_883_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooKKInterferencePositive::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooKKInterferencePositive G__TRooKKInterferencePositive;
static int G__RooComplexPDF_883_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooKKInterferencePositive*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooKKInterferencePositive*) (soff+(sizeof(RooKKInterferencePositive)*i)))->~G__TRooKKInterferencePositive();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooKKInterferencePositive*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooKKInterferencePositive*) (soff))->~G__TRooKKInterferencePositive();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooDalitzAnalysis */
static int G__RooComplexPDF_900_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzAnalysis* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzAnalysis[n];
     } else {
       p = new((void*) gvp) RooDalitzAnalysis[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzAnalysis;
     } else {
       p = new((void*) gvp) RooDalitzAnalysis;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_900_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzAnalysis* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 38
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooDalitzAnalysis(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, *(RooAbsReal*) libp->para[13].ref
, *(RooAbsReal*) libp->para[14].ref, *(RooAbsReal*) libp->para[15].ref
, *(RooAbsReal*) libp->para[16].ref, *(RooAbsReal*) libp->para[17].ref
, *(RooAbsReal*) libp->para[18].ref, *(RooAbsReal*) libp->para[19].ref
, *(RooAbsReal*) libp->para[20].ref, *(RooAbsReal*) libp->para[21].ref
, *(RooAbsReal*) libp->para[22].ref, *(RooAbsReal*) libp->para[23].ref
, *(RooAbsReal*) libp->para[24].ref, *(RooAbsReal*) libp->para[25].ref
, *(RooAbsReal*) libp->para[26].ref, *(RooAbsReal*) libp->para[27].ref
, *(RooAbsReal*) libp->para[28].ref, *(RooAbsReal*) libp->para[29].ref
, *(RooAbsReal*) libp->para[30].ref, *(RooAbsReal*) libp->para[31].ref
, *(RooAbsReal*) libp->para[32].ref, *(RooAbsReal*) libp->para[33].ref
, (EFFICIENCY_FUNCTION) G__int(libp->para[34]), *((DAI_PDG_constants*) G__int(libp->para[35]))
, *((DAI_Dalitz_Model_parameters*) G__int(libp->para[36])), *((DAI_CacheIntegrators_2D*) G__int(libp->para[37])));
   } else {
     p = new((void*) gvp) RooDalitzAnalysis(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, *(RooAbsReal*) libp->para[13].ref
, *(RooAbsReal*) libp->para[14].ref, *(RooAbsReal*) libp->para[15].ref
, *(RooAbsReal*) libp->para[16].ref, *(RooAbsReal*) libp->para[17].ref
, *(RooAbsReal*) libp->para[18].ref, *(RooAbsReal*) libp->para[19].ref
, *(RooAbsReal*) libp->para[20].ref, *(RooAbsReal*) libp->para[21].ref
, *(RooAbsReal*) libp->para[22].ref, *(RooAbsReal*) libp->para[23].ref
, *(RooAbsReal*) libp->para[24].ref, *(RooAbsReal*) libp->para[25].ref
, *(RooAbsReal*) libp->para[26].ref, *(RooAbsReal*) libp->para[27].ref
, *(RooAbsReal*) libp->para[28].ref, *(RooAbsReal*) libp->para[29].ref
, *(RooAbsReal*) libp->para[30].ref, *(RooAbsReal*) libp->para[31].ref
, *(RooAbsReal*) libp->para[32].ref, *(RooAbsReal*) libp->para[33].ref
, (EFFICIENCY_FUNCTION) G__int(libp->para[34]), *((DAI_PDG_constants*) G__int(libp->para[35]))
, *((DAI_Dalitz_Model_parameters*) G__int(libp->para[36])), *((DAI_CacheIntegrators_2D*) G__int(libp->para[37])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_900_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzAnalysis* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzAnalysis(*(RooDalitzAnalysis*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooDalitzAnalysis(*(RooDalitzAnalysis*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzAnalysis(*(RooDalitzAnalysis*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooDalitzAnalysis(*(RooDalitzAnalysis*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_900_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooDalitzAnalysis::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_900_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzAnalysis::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_900_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooDalitzAnalysis::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_900_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooDalitzAnalysis::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_900_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooDalitzAnalysis*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_900_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzAnalysis::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_900_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooDalitzAnalysis::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_900_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzAnalysis::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_900_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooDalitzAnalysis::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooDalitzAnalysis G__TRooDalitzAnalysis;
static int G__RooComplexPDF_900_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooDalitzAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooDalitzAnalysis*) (soff+(sizeof(RooDalitzAnalysis)*i)))->~G__TRooDalitzAnalysis();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooDalitzAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooDalitzAnalysis*) (soff))->~G__TRooDalitzAnalysis();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooThresholdFunction */
static int G__RooComplexPDF_901_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooThresholdFunction* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooThresholdFunction[n];
     } else {
       p = new((void*) gvp) RooThresholdFunction[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooThresholdFunction;
     } else {
       p = new((void*) gvp) RooThresholdFunction;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooThresholdFunction));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_901_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooThresholdFunction* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 25
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooThresholdFunction(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, *(RooAbsReal*) libp->para[13].ref
, *(RooAbsReal*) libp->para[14].ref, *(RooAbsReal*) libp->para[15].ref
, *(RooAbsReal*) libp->para[16].ref, *(RooAbsReal*) libp->para[17].ref
, *(RooAbsReal*) libp->para[18].ref, (double) G__double(libp->para[19])
, (double) G__double(libp->para[20]), (double) G__double(libp->para[21])
, (double) G__double(libp->para[22]), (double) G__double(libp->para[23])
, (double) G__double(libp->para[24]));
   } else {
     p = new((void*) gvp) RooThresholdFunction(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, *(RooAbsReal*) libp->para[13].ref
, *(RooAbsReal*) libp->para[14].ref, *(RooAbsReal*) libp->para[15].ref
, *(RooAbsReal*) libp->para[16].ref, *(RooAbsReal*) libp->para[17].ref
, *(RooAbsReal*) libp->para[18].ref, (double) G__double(libp->para[19])
, (double) G__double(libp->para[20]), (double) G__double(libp->para[21])
, (double) G__double(libp->para[22]), (double) G__double(libp->para[23])
, (double) G__double(libp->para[24]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooThresholdFunction));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_901_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooThresholdFunction* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooThresholdFunction(*(RooThresholdFunction*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooThresholdFunction(*(RooThresholdFunction*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooThresholdFunction(*(RooThresholdFunction*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooThresholdFunction(*(RooThresholdFunction*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooThresholdFunction));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_901_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooThresholdFunction::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_901_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooThresholdFunction::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_901_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooThresholdFunction::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_901_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooThresholdFunction::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_901_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooThresholdFunction*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_901_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooThresholdFunction::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_901_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooThresholdFunction::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_901_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooThresholdFunction::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_901_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooThresholdFunction::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooThresholdFunction G__TRooThresholdFunction;
static int G__RooComplexPDF_901_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooThresholdFunction*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooThresholdFunction*) (soff+(sizeof(RooThresholdFunction)*i)))->~G__TRooThresholdFunction();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooThresholdFunction*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooThresholdFunction*) (soff))->~G__TRooThresholdFunction();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooDalitzDelaunay */
static int G__RooComplexPDF_902_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzDelaunay* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzDelaunay[n];
     } else {
       p = new((void*) gvp) RooDalitzDelaunay[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzDelaunay;
     } else {
       p = new((void*) gvp) RooDalitzDelaunay;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzDelaunay));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_902_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzDelaunay* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooDalitzDelaunay(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, (TGraph2D*) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
   } else {
     p = new((void*) gvp) RooDalitzDelaunay(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, (TGraph2D*) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzDelaunay));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_902_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzDelaunay* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzDelaunay(*(RooDalitzDelaunay*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooDalitzDelaunay(*(RooDalitzDelaunay*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzDelaunay(*(RooDalitzDelaunay*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooDalitzDelaunay(*(RooDalitzDelaunay*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzDelaunay));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_902_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooDalitzDelaunay::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_902_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzDelaunay::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_902_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooDalitzDelaunay::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_902_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooDalitzDelaunay::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_902_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooDalitzDelaunay*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_902_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzDelaunay::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_902_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooDalitzDelaunay::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_902_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzDelaunay::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_902_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooDalitzDelaunay::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooDalitzDelaunay G__TRooDalitzDelaunay;
static int G__RooComplexPDF_902_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooDalitzDelaunay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooDalitzDelaunay*) (soff+(sizeof(RooDalitzDelaunay)*i)))->~G__TRooDalitzDelaunay();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooDalitzDelaunay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooDalitzDelaunay*) (soff))->~G__TRooDalitzDelaunay();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooDalitzAnalysisCPV */
static int G__RooComplexPDF_904_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzAnalysisCPV* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzAnalysisCPV[n];
     } else {
       p = new((void*) gvp) RooDalitzAnalysisCPV[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzAnalysisCPV;
     } else {
       p = new((void*) gvp) RooDalitzAnalysisCPV;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysisCPV));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_904_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzAnalysisCPV* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 40
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooDalitzAnalysisCPV(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsCategory*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, *(RooAbsReal*) libp->para[13].ref
, *(RooAbsReal*) libp->para[14].ref, *(RooAbsReal*) libp->para[15].ref
, *(RooAbsReal*) libp->para[16].ref, *(RooAbsReal*) libp->para[17].ref
, *(RooAbsReal*) libp->para[18].ref, *(RooAbsReal*) libp->para[19].ref
, *(RooAbsReal*) libp->para[20].ref, *(RooAbsReal*) libp->para[21].ref
, *(RooAbsReal*) libp->para[22].ref, *(RooAbsReal*) libp->para[23].ref
, *(RooAbsReal*) libp->para[24].ref, *(RooAbsReal*) libp->para[25].ref
, *(RooAbsReal*) libp->para[26].ref, *(RooAbsReal*) libp->para[27].ref
, *(RooAbsReal*) libp->para[28].ref, *(RooAbsReal*) libp->para[29].ref
, *(RooAbsReal*) libp->para[30].ref, *(RooAbsReal*) libp->para[31].ref
, *(RooAbsReal*) libp->para[32].ref, *(RooAbsReal*) libp->para[33].ref
, *(RooAbsReal*) libp->para[34].ref, *((DAI_CC_parameters*) G__int(libp->para[35]))
, (EFFICIENCY_FUNCTION) G__int(libp->para[36]), *((DAI_PDG_constants*) G__int(libp->para[37]))
, *((DAI_Dalitz_Model_parameters*) G__int(libp->para[38])), *((DAI_CacheIntegrators_2D*) G__int(libp->para[39])));
   } else {
     p = new((void*) gvp) RooDalitzAnalysisCPV(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsCategory*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, *(RooAbsReal*) libp->para[13].ref
, *(RooAbsReal*) libp->para[14].ref, *(RooAbsReal*) libp->para[15].ref
, *(RooAbsReal*) libp->para[16].ref, *(RooAbsReal*) libp->para[17].ref
, *(RooAbsReal*) libp->para[18].ref, *(RooAbsReal*) libp->para[19].ref
, *(RooAbsReal*) libp->para[20].ref, *(RooAbsReal*) libp->para[21].ref
, *(RooAbsReal*) libp->para[22].ref, *(RooAbsReal*) libp->para[23].ref
, *(RooAbsReal*) libp->para[24].ref, *(RooAbsReal*) libp->para[25].ref
, *(RooAbsReal*) libp->para[26].ref, *(RooAbsReal*) libp->para[27].ref
, *(RooAbsReal*) libp->para[28].ref, *(RooAbsReal*) libp->para[29].ref
, *(RooAbsReal*) libp->para[30].ref, *(RooAbsReal*) libp->para[31].ref
, *(RooAbsReal*) libp->para[32].ref, *(RooAbsReal*) libp->para[33].ref
, *(RooAbsReal*) libp->para[34].ref, *((DAI_CC_parameters*) G__int(libp->para[35]))
, (EFFICIENCY_FUNCTION) G__int(libp->para[36]), *((DAI_PDG_constants*) G__int(libp->para[37]))
, *((DAI_Dalitz_Model_parameters*) G__int(libp->para[38])), *((DAI_CacheIntegrators_2D*) G__int(libp->para[39])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysisCPV));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_904_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzAnalysisCPV* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzAnalysisCPV(*(RooDalitzAnalysisCPV*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooDalitzAnalysisCPV(*(RooDalitzAnalysisCPV*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzAnalysisCPV(*(RooDalitzAnalysisCPV*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooDalitzAnalysisCPV(*(RooDalitzAnalysisCPV*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysisCPV));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_904_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const RooDalitzAnalysisCPV*) G__getstructoffset())->getAsymmetry((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const RooDalitzAnalysisCPV*) G__getstructoffset())->getAsymmetry());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_904_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooDalitzAnalysisCPV::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_904_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzAnalysisCPV::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_904_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooDalitzAnalysisCPV::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_904_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooDalitzAnalysisCPV::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_904_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooDalitzAnalysisCPV*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_904_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzAnalysisCPV::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_904_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooDalitzAnalysisCPV::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_904_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzAnalysisCPV::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_904_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooDalitzAnalysisCPV::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooDalitzAnalysisCPV G__TRooDalitzAnalysisCPV;
static int G__RooComplexPDF_904_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooDalitzAnalysisCPV*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooDalitzAnalysisCPV*) (soff+(sizeof(RooDalitzAnalysisCPV)*i)))->~G__TRooDalitzAnalysisCPV();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooDalitzAnalysisCPV*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooDalitzAnalysisCPV*) (soff))->~G__TRooDalitzAnalysisCPV();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooDalitzGauss */
static int G__RooComplexPDF_905_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzGauss* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzGauss[n];
     } else {
       p = new((void*) gvp) RooDalitzGauss[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzGauss;
     } else {
       p = new((void*) gvp) RooDalitzGauss;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzGauss));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_905_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzGauss* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 15
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooDalitzGauss(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, (int) G__int(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]));
   } else {
     p = new((void*) gvp) RooDalitzGauss(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, (int) G__int(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzGauss));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_905_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzGauss* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzGauss(*(RooDalitzGauss*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooDalitzGauss(*(RooDalitzGauss*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzGauss(*(RooDalitzGauss*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooDalitzGauss(*(RooDalitzGauss*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzGauss));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_905_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooDalitzGauss::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_905_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzGauss::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_905_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooDalitzGauss::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_905_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooDalitzGauss::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_905_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooDalitzGauss*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_905_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzGauss::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_905_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooDalitzGauss::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_905_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzGauss::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_905_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooDalitzGauss::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooDalitzGauss G__TRooDalitzGauss;
static int G__RooComplexPDF_905_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooDalitzGauss*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooDalitzGauss*) (soff+(sizeof(RooDalitzGauss)*i)))->~G__TRooDalitzGauss();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooDalitzGauss*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooDalitzGauss*) (soff))->~G__TRooDalitzGauss();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooDalitzRelativisticSpinBreitWigner */
static int G__RooComplexPDF_912_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzRelativisticSpinBreitWigner* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzRelativisticSpinBreitWigner[n];
     } else {
       p = new((void*) gvp) RooDalitzRelativisticSpinBreitWigner[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzRelativisticSpinBreitWigner;
     } else {
       p = new((void*) gvp) RooDalitzRelativisticSpinBreitWigner;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzRelativisticSpinBreitWigner));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_912_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzRelativisticSpinBreitWigner* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 17
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooDalitzRelativisticSpinBreitWigner(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, (double) G__double(libp->para[10]), (unsigned int) G__int(libp->para[11])
, (int) G__int(libp->para[12]), (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]), (double) G__double(libp->para[15])
, (double) G__double(libp->para[16]));
   } else {
     p = new((void*) gvp) RooDalitzRelativisticSpinBreitWigner(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, (double) G__double(libp->para[10]), (unsigned int) G__int(libp->para[11])
, (int) G__int(libp->para[12]), (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]), (double) G__double(libp->para[15])
, (double) G__double(libp->para[16]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzRelativisticSpinBreitWigner));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_912_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzRelativisticSpinBreitWigner* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzRelativisticSpinBreitWigner(*(RooDalitzRelativisticSpinBreitWigner*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooDalitzRelativisticSpinBreitWigner(*(RooDalitzRelativisticSpinBreitWigner*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzRelativisticSpinBreitWigner(*(RooDalitzRelativisticSpinBreitWigner*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooDalitzRelativisticSpinBreitWigner(*(RooDalitzRelativisticSpinBreitWigner*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzRelativisticSpinBreitWigner));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_912_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RooDalitzRelativisticSpinBreitWigner*) G__getstructoffset())->adaptiveSimpsonsAux(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (int) G__int(libp->para[8])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_912_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RooDalitzRelativisticSpinBreitWigner*) G__getstructoffset())->adaptiveSimpsons((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_912_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RooDalitzRelativisticSpinBreitWigner*) G__getstructoffset())->function((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_912_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooDalitzRelativisticSpinBreitWigner::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_912_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzRelativisticSpinBreitWigner::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_912_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooDalitzRelativisticSpinBreitWigner::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_912_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooDalitzRelativisticSpinBreitWigner::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_912_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooDalitzRelativisticSpinBreitWigner*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_912_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzRelativisticSpinBreitWigner::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_912_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooDalitzRelativisticSpinBreitWigner::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_912_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzRelativisticSpinBreitWigner::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_912_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooDalitzRelativisticSpinBreitWigner::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooDalitzRelativisticSpinBreitWigner G__TRooDalitzRelativisticSpinBreitWigner;
static int G__RooComplexPDF_912_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooDalitzRelativisticSpinBreitWigner*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooDalitzRelativisticSpinBreitWigner*) (soff+(sizeof(RooDalitzRelativisticSpinBreitWigner)*i)))->~G__TRooDalitzRelativisticSpinBreitWigner();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooDalitzRelativisticSpinBreitWigner*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooDalitzRelativisticSpinBreitWigner*) (soff))->~G__TRooDalitzRelativisticSpinBreitWigner();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooDalitzHist */
static int G__RooComplexPDF_935_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzHist[n];
     } else {
       p = new((void*) gvp) RooDalitzHist[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzHist;
     } else {
       p = new((void*) gvp) RooDalitzHist;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_935_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooDalitzHist(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, (TH2F*) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
   } else {
     p = new((void*) gvp) RooDalitzHist(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, (TH2F*) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_935_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzHist(*(RooDalitzHist*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooDalitzHist(*(RooDalitzHist*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzHist(*(RooDalitzHist*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooDalitzHist(*(RooDalitzHist*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_935_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooDalitzHist::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_935_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzHist::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_935_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooDalitzHist::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_935_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooDalitzHist::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_935_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooDalitzHist*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_935_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzHist::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_935_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooDalitzHist::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_935_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzHist::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_935_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooDalitzHist::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooDalitzHist G__TRooDalitzHist;
static int G__RooComplexPDF_935_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooDalitzHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooDalitzHist*) (soff+(sizeof(RooDalitzHist)*i)))->~G__TRooDalitzHist();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooDalitzHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooDalitzHist*) (soff))->~G__TRooDalitzHist();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooDalitzXsd */
static int G__RooComplexPDF_936_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzXsd* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzXsd[n];
     } else {
       p = new((void*) gvp) RooDalitzXsd[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzXsd;
     } else {
       p = new((void*) gvp) RooDalitzXsd;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzXsd));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_936_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzXsd* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 18
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooDalitzXsd(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, (int) G__int(libp->para[13])
, (double) G__double(libp->para[14]), (double) G__double(libp->para[15])
, (double) G__double(libp->para[16]), (double) G__double(libp->para[17]));
   } else {
     p = new((void*) gvp) RooDalitzXsd(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, *(RooAbsReal*) libp->para[11].ref
, *(RooAbsReal*) libp->para[12].ref, (int) G__int(libp->para[13])
, (double) G__double(libp->para[14]), (double) G__double(libp->para[15])
, (double) G__double(libp->para[16]), (double) G__double(libp->para[17]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzXsd));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_936_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzXsd* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzXsd(*(RooDalitzXsd*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooDalitzXsd(*(RooDalitzXsd*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzXsd(*(RooDalitzXsd*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooDalitzXsd(*(RooDalitzXsd*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzXsd));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_936_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooDalitzXsd::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_936_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzXsd::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_936_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooDalitzXsd::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_936_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooDalitzXsd::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_936_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooDalitzXsd*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_936_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzXsd::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_936_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooDalitzXsd::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_936_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzXsd::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_936_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooDalitzXsd::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooDalitzXsd G__TRooDalitzXsd;
static int G__RooComplexPDF_936_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooDalitzXsd*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooDalitzXsd*) (soff+(sizeof(RooDalitzXsd)*i)))->~G__TRooDalitzXsd();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooDalitzXsd*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooDalitzXsd*) (soff))->~G__TRooDalitzXsd();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooDalitzNovosibirsk */
static int G__RooComplexPDF_937_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzNovosibirsk* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzNovosibirsk[n];
     } else {
       p = new((void*) gvp) RooDalitzNovosibirsk[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzNovosibirsk;
     } else {
       p = new((void*) gvp) RooDalitzNovosibirsk;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzNovosibirsk));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_937_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzNovosibirsk* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 16
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooDalitzNovosibirsk(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, (int) G__int(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]), (double) G__double(libp->para[15]));
   } else {
     p = new((void*) gvp) RooDalitzNovosibirsk(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref, *(RooAbsReal*) libp->para[7].ref
, *(RooAbsReal*) libp->para[8].ref, *(RooAbsReal*) libp->para[9].ref
, *(RooAbsReal*) libp->para[10].ref, (int) G__int(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]), (double) G__double(libp->para[15]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzNovosibirsk));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_937_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooDalitzNovosibirsk* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzNovosibirsk(*(RooDalitzNovosibirsk*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooDalitzNovosibirsk(*(RooDalitzNovosibirsk*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooDalitzNovosibirsk(*(RooDalitzNovosibirsk*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooDalitzNovosibirsk(*(RooDalitzNovosibirsk*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzNovosibirsk));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_937_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooDalitzNovosibirsk::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_937_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzNovosibirsk::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_937_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooDalitzNovosibirsk::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_937_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooDalitzNovosibirsk::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_937_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooDalitzNovosibirsk*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_937_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzNovosibirsk::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_937_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooDalitzNovosibirsk::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_937_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooDalitzNovosibirsk::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RooComplexPDF_937_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooDalitzNovosibirsk::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooDalitzNovosibirsk G__TRooDalitzNovosibirsk;
static int G__RooComplexPDF_937_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooDalitzNovosibirsk*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooDalitzNovosibirsk*) (soff+(sizeof(RooDalitzNovosibirsk)*i)))->~G__TRooDalitzNovosibirsk();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooDalitzNovosibirsk*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooDalitzNovosibirsk*) (soff))->~G__TRooDalitzNovosibirsk();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* RooRelativisticSpinBreitWigner */

/* RooBreitWignerTwoBodyPHSP */

/* RooBreitWignerTwoBodyPHSPEvtGen */

/* RooThreeBodyPhaseSpaceProjection */

/* RooBifurStudentsTDistribution */

/* RooStudentsTDistribution */

/* RooFlatte */

/* RooLASS */

/* RooKPiMass */

/* RooHelicityAngles */

/* RooMassHelicityAngles */

/* RooVarianceGammaDistribution */

/* RooDalitzPhaseSpaceAmplitude */

/* RooDalitzCubicPolynomial */

/* RooDalitzCubicPolynomialSymmetric */

/* RooTwoBodyThresholdFunction */

/* RooMassHelicityAngles_TransformedBase */

/* RooMassHelicityAnglesCPV */

/* RooCutPdf */

/* RooChebychevCut */

/* RooCategoryPdf */

/* RooFlatteAndNonRes */

/* RooKKInterference */

/* RooKKInterferenceNorm */

/* RooKKInterferencePositive */

/* RooDalitzAnalysis */

/* RooThresholdFunction */

/* RooDalitzDelaunay */

/* RooDalitzAnalysisCPV */

/* RooDalitzGauss */

/* RooDalitzRelativisticSpinBreitWigner */

/* RooDalitzHist */

/* RooDalitzXsd */

/* RooDalitzNovosibirsk */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncRooComplexPDF {
 public:
  G__Sizep2memfuncRooComplexPDF(): p(&G__Sizep2memfuncRooComplexPDF::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncRooComplexPDF::*p)();
};

size_t G__get_sizep2memfuncRooComplexPDF()
{
  G__Sizep2memfuncRooComplexPDF a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceRooComplexPDF() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooRelativisticSpinBreitWigner))) {
     RooRelativisticSpinBreitWigner *G__Lderived;
     G__Lderived=(RooRelativisticSpinBreitWigner*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooRelativisticSpinBreitWigner),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooRelativisticSpinBreitWigner),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooRelativisticSpinBreitWigner),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooRelativisticSpinBreitWigner),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooRelativisticSpinBreitWigner),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooRelativisticSpinBreitWigner),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSP))) {
     RooBreitWignerTwoBodyPHSP *G__Lderived;
     G__Lderived=(RooBreitWignerTwoBodyPHSP*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSP),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSP),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSP),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSP),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSP),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSP),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSPEvtGen))) {
     RooBreitWignerTwoBodyPHSPEvtGen *G__Lderived;
     G__Lderived=(RooBreitWignerTwoBodyPHSPEvtGen*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSPEvtGen),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSPEvtGen),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSPEvtGen),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSPEvtGen),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSPEvtGen),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSPEvtGen),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooThreeBodyPhaseSpaceProjection))) {
     RooThreeBodyPhaseSpaceProjection *G__Lderived;
     G__Lderived=(RooThreeBodyPhaseSpaceProjection*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooThreeBodyPhaseSpaceProjection),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooThreeBodyPhaseSpaceProjection),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooThreeBodyPhaseSpaceProjection),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooThreeBodyPhaseSpaceProjection),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooThreeBodyPhaseSpaceProjection),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooThreeBodyPhaseSpaceProjection),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBifurStudentsTDistribution))) {
     RooBifurStudentsTDistribution *G__Lderived;
     G__Lderived=(RooBifurStudentsTDistribution*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBifurStudentsTDistribution),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBifurStudentsTDistribution),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBifurStudentsTDistribution),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBifurStudentsTDistribution),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBifurStudentsTDistribution),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBifurStudentsTDistribution),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooStudentsTDistribution))) {
     RooStudentsTDistribution *G__Lderived;
     G__Lderived=(RooStudentsTDistribution*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooStudentsTDistribution),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooStudentsTDistribution),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooStudentsTDistribution),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooStudentsTDistribution),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooStudentsTDistribution),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooStudentsTDistribution),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatte))) {
     RooFlatte *G__Lderived;
     G__Lderived=(RooFlatte*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatte),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatte),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatte),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatte),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatte),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatte),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooLASS))) {
     RooLASS *G__Lderived;
     G__Lderived=(RooLASS*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooLASS),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooLASS),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooLASS),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooLASS),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooLASS),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooLASS),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKPiMass))) {
     RooKPiMass *G__Lderived;
     G__Lderived=(RooKPiMass*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKPiMass),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKPiMass),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKPiMass),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKPiMass),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKPiMass),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKPiMass),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooHelicityAngles))) {
     RooHelicityAngles *G__Lderived;
     G__Lderived=(RooHelicityAngles*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooHelicityAngles),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooHelicityAngles),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooHelicityAngles),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooHelicityAngles),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooHelicityAngles),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooHelicityAngles),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles))) {
     RooMassHelicityAngles *G__Lderived;
     G__Lderived=(RooMassHelicityAngles*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooVarianceGammaDistribution))) {
     RooVarianceGammaDistribution *G__Lderived;
     G__Lderived=(RooVarianceGammaDistribution*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooVarianceGammaDistribution),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooVarianceGammaDistribution),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooVarianceGammaDistribution),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooVarianceGammaDistribution),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooVarianceGammaDistribution),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooVarianceGammaDistribution),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzPhaseSpaceAmplitude))) {
     RooDalitzPhaseSpaceAmplitude *G__Lderived;
     G__Lderived=(RooDalitzPhaseSpaceAmplitude*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzPhaseSpaceAmplitude),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzPhaseSpaceAmplitude),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzPhaseSpaceAmplitude),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzPhaseSpaceAmplitude),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzPhaseSpaceAmplitude),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzPhaseSpaceAmplitude),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomial))) {
     RooDalitzCubicPolynomial *G__Lderived;
     G__Lderived=(RooDalitzCubicPolynomial*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomial),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomial),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomial),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomial),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomial),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomial),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomialSymmetric))) {
     RooDalitzCubicPolynomialSymmetric *G__Lderived;
     G__Lderived=(RooDalitzCubicPolynomialSymmetric*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomialSymmetric),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomialSymmetric),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomialSymmetric),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomialSymmetric),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomialSymmetric),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomialSymmetric),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooTwoBodyThresholdFunction))) {
     RooTwoBodyThresholdFunction *G__Lderived;
     G__Lderived=(RooTwoBodyThresholdFunction*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooTwoBodyThresholdFunction),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooTwoBodyThresholdFunction),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooTwoBodyThresholdFunction),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooTwoBodyThresholdFunction),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooTwoBodyThresholdFunction),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooTwoBodyThresholdFunction),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles_TransformedBase))) {
     RooMassHelicityAngles_TransformedBase *G__Lderived;
     G__Lderived=(RooMassHelicityAngles_TransformedBase*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles_TransformedBase),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles_TransformedBase),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles_TransformedBase),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles_TransformedBase),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles_TransformedBase),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles_TransformedBase),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAnglesCPV))) {
     RooMassHelicityAnglesCPV *G__Lderived;
     G__Lderived=(RooMassHelicityAnglesCPV*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAnglesCPV),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAnglesCPV),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAnglesCPV),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAnglesCPV),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAnglesCPV),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAnglesCPV),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooCutPdf))) {
     RooCutPdf *G__Lderived;
     G__Lderived=(RooCutPdf*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooCutPdf),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooCutPdf),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooCutPdf),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooCutPdf),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooCutPdf),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooCutPdf),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooChebychevCut))) {
     RooChebychevCut *G__Lderived;
     G__Lderived=(RooChebychevCut*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooChebychevCut),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooChebychevCut),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooChebychevCut),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooChebychevCut),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooChebychevCut),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooChebychevCut),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooCategoryPdf))) {
     RooCategoryPdf *G__Lderived;
     G__Lderived=(RooCategoryPdf*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooCategoryPdf),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooCategoryPdf),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooCategoryPdf),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooCategoryPdf),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooCategoryPdf),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooCategoryPdf),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatteAndNonRes))) {
     RooFlatteAndNonRes *G__Lderived;
     G__Lderived=(RooFlatteAndNonRes*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatteAndNonRes),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatteAndNonRes),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatteAndNonRes),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatteAndNonRes),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatteAndNonRes),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatteAndNonRes),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterference))) {
     RooKKInterference *G__Lderived;
     G__Lderived=(RooKKInterference*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterference),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterference),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterference),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterference),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterference),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterference),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferenceNorm))) {
     RooKKInterferenceNorm *G__Lderived;
     G__Lderived=(RooKKInterferenceNorm*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferenceNorm),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferenceNorm),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferenceNorm),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferenceNorm),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferenceNorm),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferenceNorm),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferencePositive))) {
     RooKKInterferencePositive *G__Lderived;
     G__Lderived=(RooKKInterferencePositive*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferencePositive),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferencePositive),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferencePositive),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferencePositive),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferencePositive),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferencePositive),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysis))) {
     RooDalitzAnalysis *G__Lderived;
     G__Lderived=(RooDalitzAnalysis*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysis),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysis),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysis),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysis),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysis),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysis),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooThresholdFunction))) {
     RooThresholdFunction *G__Lderived;
     G__Lderived=(RooThresholdFunction*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooThresholdFunction),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooThresholdFunction),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooThresholdFunction),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooThresholdFunction),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooThresholdFunction),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooThresholdFunction),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzDelaunay))) {
     RooDalitzDelaunay *G__Lderived;
     G__Lderived=(RooDalitzDelaunay*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzDelaunay),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzDelaunay),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzDelaunay),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzDelaunay),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzDelaunay),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzDelaunay),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysisCPV))) {
     RooDalitzAnalysisCPV *G__Lderived;
     G__Lderived=(RooDalitzAnalysisCPV*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysisCPV),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysisCPV),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysisCPV),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysisCPV),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysisCPV),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysisCPV),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzGauss))) {
     RooDalitzGauss *G__Lderived;
     G__Lderived=(RooDalitzGauss*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzGauss),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzGauss),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzGauss),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzGauss),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzGauss),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzGauss),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzRelativisticSpinBreitWigner))) {
     RooDalitzRelativisticSpinBreitWigner *G__Lderived;
     G__Lderived=(RooDalitzRelativisticSpinBreitWigner*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzRelativisticSpinBreitWigner),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzRelativisticSpinBreitWigner),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzRelativisticSpinBreitWigner),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzRelativisticSpinBreitWigner),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzRelativisticSpinBreitWigner),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzRelativisticSpinBreitWigner),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzHist))) {
     RooDalitzHist *G__Lderived;
     G__Lderived=(RooDalitzHist*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzHist),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzHist),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzHist),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzHist),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzHist),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzHist),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzXsd))) {
     RooDalitzXsd *G__Lderived;
     G__Lderived=(RooDalitzXsd*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzXsd),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzXsd),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzXsd),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzXsd),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzXsd),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzXsd),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzNovosibirsk))) {
     RooDalitzNovosibirsk *G__Lderived;
     G__Lderived=(RooDalitzNovosibirsk*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzNovosibirsk),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzNovosibirsk),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzNovosibirsk),G__get_linked_tagnum(&G__RooComplexPDFLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzNovosibirsk),G__get_linked_tagnum(&G__RooComplexPDFLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzNovosibirsk),G__get_linked_tagnum(&G__RooComplexPDFLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzNovosibirsk),G__get_linked_tagnum(&G__RooComplexPDFLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableRooComplexPDF() {

   /* Setting up typedef entry */
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RooComplexPDFLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RooComplexPDFLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RooComplexPDFLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RooComplexPDFLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<std::string>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<string>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::string>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::string>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string,less<string> >",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<std::pair<RooAbsArg*,RooAbsArg*> >",117,G__get_linked_tagnum(&G__RooComplexPDFLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<pair<RooAbsArg*,RooAbsArg*> >",117,G__get_linked_tagnum(&G__RooComplexPDFLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<pair<RooAbsArg*,RooAbsArg*> >",117,G__get_linked_tagnum(&G__RooComplexPDFLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<pair<RooAbsArg*,RooAbsArg*>,less<pair<RooAbsArg*,RooAbsArg*> > >",117,G__get_linked_tagnum(&G__RooComplexPDFLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<RooAbsCache*>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_dequelERooAbsCachemUcOallocatorlERooAbsCachemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<RooAbsArg*,TRefArray*>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplERooAbsArgmUcOTRefArraymUcOlesslERooAbsArgmUgRcOallocatorlEpairlERooAbsArgmUsPconstcOTRefArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<RooAbsArg*,TRefArray*,less<RooAbsArg*> >",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplERooAbsArgmUcOTRefArraymUcOlesslERooAbsArgmUgRcOallocatorlEpairlERooAbsArgmUsPconstcOTRefArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RooCurve*>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RooComplexPDFLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RooComplexPDFLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<Double_t>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_listlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TH1*>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH1*>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH1*>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH1*,less<string> >",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,RooDataHist*>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataHist*>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataHist*>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataHist*,less<string> >",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,RooDataSet*>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataSet*>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataSet*>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataSet*,less<string> >",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,RooAbsData*>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooAbsData*>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooAbsData*>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooAbsData*,less<string> >",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<EvalError>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<RooAbsReal::EvalError>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<std::string,std::list<EvalError> >",117,G__get_linked_tagnum(&G__RooComplexPDFLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<string,std::list<EvalError> >",117,G__get_linked_tagnum(&G__RooComplexPDFLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const RooAbsArg*,std::pair<std::string,std::list<EvalError> > >",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const RooAbsArg*,std::pair<string,std::list<EvalError> > >",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const RooAbsArg*,pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > > >",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const RooAbsArg*,pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > >,less<const RooAbsArg*> >",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,std::string>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,string>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,string,less<int> >",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StreamConfig>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RooComplexPDFLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RooComplexPDFLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RooMsgService::StreamConfig>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> > >",117,G__get_linked_tagnum(&G__RooComplexPDFLN_dequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stack<std::vector<StreamConfig> >",117,G__get_linked_tagnum(&G__RooComplexPDFLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stack<vector<StreamConfig> >",117,G__get_linked_tagnum(&G__RooComplexPDFLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stack<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> > >",117,G__get_linked_tagnum(&G__RooComplexPDFLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::ostream*>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::ostream*>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,basic_ostream<char,char_traits<char> >*>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,basic_ostream<char,char_traits<char> >*,less<string> >",117,G__get_linked_tagnum(&G__RooComplexPDFLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RooNormSetCache>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_reverse_iteratorlEvectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RooComplexPDFLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_reverse_iteratorlEvectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RooComplexPDFLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RooAbsCacheElement*>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_reverse_iteratorlEvectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RooComplexPDFLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_reverse_iteratorlEvectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RooComplexPDFLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<std::string>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_listlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<string>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_listlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<Double_t,Double_t>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_pairlEdoublecOdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__RooComplexPDFLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* RooRelativisticSpinBreitWigner */
static void G__setup_memvarRooRelativisticSpinBreitWigner(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooRelativisticSpinBreitWigner));
   { RooRelativisticSpinBreitWigner *p; p=(RooRelativisticSpinBreitWigner*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_J=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_J=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"r=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"J=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooBreitWignerTwoBodyPHSP */
static void G__setup_memvarRooBreitWignerTwoBodyPHSP(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSP));
   { RooBreitWignerTwoBodyPHSP *p; p=(RooBreitWignerTwoBodyPHSP*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_J=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_J=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooBreitWignerTwoBodyPHSPEvtGen */
static void G__setup_memvarRooBreitWignerTwoBodyPHSPEvtGen(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSPEvtGen));
   { RooBreitWignerTwoBodyPHSPEvtGen *p; p=(RooBreitWignerTwoBodyPHSPEvtGen*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_J=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_J=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"cutoff=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooThreeBodyPhaseSpaceProjection */
static void G__setup_memvarRooThreeBodyPhaseSpaceProjection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooThreeBodyPhaseSpaceProjection));
   { RooThreeBodyPhaseSpaceProjection *p; p=(RooThreeBodyPhaseSpaceProjection*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m12=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"mM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooBifurStudentsTDistribution */
static void G__setup_memvarRooBifurStudentsTDistribution(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBifurStudentsTDistribution));
   { RooBifurStudentsTDistribution *p; p=(RooBifurStudentsTDistribution*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"x=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mu=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"sigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"sigma_asym=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"nu_l=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"nu_r=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooStudentsTDistribution */
static void G__setup_memvarRooStudentsTDistribution(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooStudentsTDistribution));
   { RooStudentsTDistribution *p; p=(RooStudentsTDistribution*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"x=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mu=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"sigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"nu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooFlatte */
static void G__setup_memvarRooFlatte(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatte));
   { RooFlatte *p; p=(RooFlatte*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_R=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"g_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"g_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"g_3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_1a=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_1b=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_2a=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_2b=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_3a=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_3b=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooLASS */
static void G__setup_memvarRooLASS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooLASS));
   { RooLASS *p; p=(RooLASS*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"a=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"b=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooKPiMass */
static void G__setup_memvarRooKPiMass(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKPiMass));
   { RooKPiMass *p; p=(RooKPiMass*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"a=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"b=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"r_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"r_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooHelicityAngles */
static void G__setup_memvarRooHelicityAngles(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooHelicityAngles));
   { RooHelicityAngles *p; p=(RooHelicityAngles*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"cos_th1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"cos_th2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"J1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"J2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_m=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_m=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_p=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_p=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooMassHelicityAngles */
static void G__setup_memvarRooMassHelicityAngles(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles));
   { RooMassHelicityAngles *p; p=(RooMassHelicityAngles*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"cos_th1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"cos_th2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"a=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"b=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"r_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"r_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_00=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_00=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_1m=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_1m=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_10=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_10=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_1p=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_1p=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_2m=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_2m=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_20=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_20=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_2p=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_2p=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_Pi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_K=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_Phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_B0=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,G__get_linked_tagnum(&G__RooComplexPDFLN_ACCEPTANCE_FUNCTION),-1,-1,2,"m_acceptance_function=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegralgR),-1,-1,2,"m_norm_cache_integrator=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegralgR),-1,-1,2,"m_real_cache_integrator=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegralgR),-1,-1,2,"m_imag_cache_integrator=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegral_phi_th1_th2gR),-1,-1,2,"m_norm_cache_integrator_phi_th1_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegral_phi_th1_th2gR),-1,-1,2,"m_real_cache_integrator_phi_th1_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegral_phi_th1_th2gR),-1,-1,2,"m_imag_cache_integrator_phi_th1_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegral_m_th1_th2gR),-1,-1,2,"m_norm_cache_integrator_m_th1_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegral_m_th1_th2gR),-1,-1,2,"m_real_cache_integrator_m_th1_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegral_m_th1_th2gR),-1,-1,2,"m_imag_cache_integrator_m_th1_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegral_m_phi_th2gR),-1,-1,2,"m_norm_cache_integrator_m_phi_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegral_m_phi_th2gR),-1,-1,2,"m_real_cache_integrator_m_phi_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegral_m_phi_th2gR),-1,-1,2,"m_imag_cache_integrator_m_phi_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegral_m_phi_th1gR),-1,-1,2,"m_norm_cache_integrator_m_phi_th1=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegral_m_phi_th1gR),-1,-1,2,"m_real_cache_integrator_m_phi_th1=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegral_m_phi_th1gR),-1,-1,2,"m_imag_cache_integrator_m_phi_th1=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooVarianceGammaDistribution */
static void G__setup_memvarRooVarianceGammaDistribution(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooVarianceGammaDistribution));
   { RooVarianceGammaDistribution *p; p=(RooVarianceGammaDistribution*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"x=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mu=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"alpha=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"beta=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"lambda=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooDalitzPhaseSpaceAmplitude */
static void G__setup_memvarRooDalitzPhaseSpaceAmplitude(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzPhaseSpaceAmplitude));
   { RooDalitzPhaseSpaceAmplitude *p; p=(RooDalitzPhaseSpaceAmplitude*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m12=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m23=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"mM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooDalitzCubicPolynomial */
static void G__setup_memvarRooDalitzCubicPolynomial(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomial));
   { RooDalitzCubicPolynomial *p; p=(RooDalitzCubicPolynomial*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m12=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m23=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"E_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"E_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"E_xx=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"E_xy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"E_yy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"E_xxx=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"E_xxy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"E_xyy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"E_yyy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"mM=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m12_offset=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m23_offset=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooDalitzCubicPolynomialSymmetric */
static void G__setup_memvarRooDalitzCubicPolynomialSymmetric(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomialSymmetric));
   { RooDalitzCubicPolynomialSymmetric *p; p=(RooDalitzCubicPolynomialSymmetric*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m12=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m23=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"E_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"E_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"E_3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"E_xy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"E_xyn=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"mM=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m12_offset=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m23_offset=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooTwoBodyThresholdFunction */
static void G__setup_memvarRooTwoBodyThresholdFunction(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooTwoBodyThresholdFunction));
   { RooTwoBodyThresholdFunction *p; p=(RooTwoBodyThresholdFunction*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"a=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooMassHelicityAngles_TransformedBase */
static void G__setup_memvarRooMassHelicityAngles_TransformedBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles_TransformedBase));
   { RooMassHelicityAngles_TransformedBase *p; p=(RooMassHelicityAngles_TransformedBase*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"cos_th1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"cos_th2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"a=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"b=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"r_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"r_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_00=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_00=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_10=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_10=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_1para=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_1para=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_1perp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_1perp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_20=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_20=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_2para=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_2para=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_2perp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_2perp=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_Pi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_K=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_Phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_B0=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,G__get_linked_tagnum(&G__RooComplexPDFLN_ACCEPTANCE_FUNCTION),-1,-1,2,"m_acceptance_function=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegralgR),-1,-1,2,"m_norm_cache_integrator=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegralgR),-1,-1,2,"m_real_cache_integrator=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegralgR),-1,-1,2,"m_imag_cache_integrator=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegral_phi_th1_th2gR),-1,-1,2,"m_norm_cache_integrator_phi_th1_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegral_phi_th1_th2gR),-1,-1,2,"m_real_cache_integrator_phi_th1_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegral_phi_th1_th2gR),-1,-1,2,"m_imag_cache_integrator_phi_th1_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegral_m_th1_th2gR),-1,-1,2,"m_norm_cache_integrator_m_th1_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegral_m_th1_th2gR),-1,-1,2,"m_real_cache_integrator_m_th1_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegral_m_th1_th2gR),-1,-1,2,"m_imag_cache_integrator_m_th1_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegral_m_phi_th2gR),-1,-1,2,"m_norm_cache_integrator_m_phi_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegral_m_phi_th2gR),-1,-1,2,"m_real_cache_integrator_m_phi_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegral_m_phi_th2gR),-1,-1,2,"m_imag_cache_integrator_m_phi_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegral_m_phi_th1gR),-1,-1,2,"m_norm_cache_integrator_m_phi_th1=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegral_m_phi_th1gR),-1,-1,2,"m_real_cache_integrator_m_phi_th1=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegral_m_phi_th1gR),-1,-1,2,"m_imag_cache_integrator_m_phi_th1=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooMassHelicityAnglesCPV */
static void G__setup_memvarRooMassHelicityAnglesCPV(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAnglesCPV));
   { RooMassHelicityAnglesCPV *p; p=(RooMassHelicityAnglesCPV*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"cos_th1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"cos_th2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooCategoryProxy),-1,-1,2,"channel=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"a=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"b=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"r_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"r_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_00=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_00=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_10=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_10=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_1para=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_1para=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_1perp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_1perp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_20=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_20=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_2para=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_2para=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_2perp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_2perp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_00_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_00_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_10_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_10_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_1para_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_1para_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_1perp_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_1perp_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_20_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_20_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_2para_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_2para_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_2perp_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_2perp_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_Pi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_K=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_Phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_B0=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,G__get_linked_tagnum(&G__RooComplexPDFLN_ACCEPTANCE_FUNCTION),-1,-1,2,"m_acceptance_function=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegralgR),-1,-1,2,"m_norm_cache_integrator=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegralgR),-1,-1,2,"m_real_cache_integrator=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegralgR),-1,-1,2,"m_imag_cache_integrator=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegral_phi_th1_th2gR),-1,-1,2,"m_norm_cache_integrator_phi_th1_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegral_phi_th1_th2gR),-1,-1,2,"m_real_cache_integrator_phi_th1_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegral_phi_th1_th2gR),-1,-1,2,"m_imag_cache_integrator_phi_th1_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegral_m_th1_th2gR),-1,-1,2,"m_norm_cache_integrator_m_th1_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegral_m_th1_th2gR),-1,-1,2,"m_real_cache_integrator_m_th1_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegral_m_th1_th2gR),-1,-1,2,"m_imag_cache_integrator_m_th1_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegral_m_phi_th2gR),-1,-1,2,"m_norm_cache_integrator_m_phi_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegral_m_phi_th2gR),-1,-1,2,"m_real_cache_integrator_m_phi_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegral_m_phi_th2gR),-1,-1,2,"m_imag_cache_integrator_m_phi_th2=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegral_m_phi_th1gR),-1,-1,2,"m_norm_cache_integrator_m_phi_th1=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegral_m_phi_th1gR),-1,-1,2,"m_real_cache_integrator_m_phi_th1=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegral_m_phi_th1gR),-1,-1,2,"m_imag_cache_integrator_m_phi_th1=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooCutPdf */
static void G__setup_memvarRooCutPdf(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooCutPdf));
   { RooCutPdf *p; p=(RooCutPdf*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"x=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_cut_value=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,1,-1,-1,-1,2,"m_left_non_zero=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooChebychevCut */
static void G__setup_memvarRooChebychevCut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooChebychevCut));
   { RooChebychevCut *p; p=(RooChebychevCut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,4,"_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooListProxy),-1,-1,4,"_coefList=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_cut_value=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooCategoryPdf */
static void G__setup_memvarRooCategoryPdf(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooCategoryPdf));
   { RooCategoryPdf *p; p=(RooCategoryPdf*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooCategoryProxy),-1,-1,2,"c=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooFlatteAndNonRes */
static void G__setup_memvarRooFlatteAndNonRes(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatteAndNonRes));
   { RooFlatteAndNonRes *p; p=(RooFlatteAndNonRes*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_flatte=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_flatte=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_R=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"g_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"g_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"g_3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_nonres=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_nonres=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_1a=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_1b=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_2a=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_2b=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_3a=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_3b=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"mM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooKKInterference */
static void G__setup_memvarRooKKInterference(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterference));
   { RooKKInterference *p; p=(RooKKInterference*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"cos_th1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"cos_th2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_flatte=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_flatte=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_flatte=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"g_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"g_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"g_3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_phi_long=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_phi_long=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_phi_para=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_phi_para=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_phi_perp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_phi_perp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"r_phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"J_phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,G__get_linked_tagnum(&G__RooComplexPDFLN_ACCEPTANCE_FUNCTION),-1,-1,2,"m_acceptance_function=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_1a=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_1b=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_2a=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_2b=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_3a=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_3b=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"mM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEKKInterferenceNormCachedIntegralgR),-1,-1,2,"m_norm_cache_integrator=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEKKInterferenceRealCachedIntegralgR),-1,-1,2,"m_real_cache_integrator=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEKKInterferenceImagCachedIntegralgR),-1,-1,2,"m_imag_cache_integrator=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooKKInterferenceNorm */
static void G__setup_memvarRooKKInterferenceNorm(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferenceNorm));
   { RooKKInterferenceNorm *p; p=(RooKKInterferenceNorm*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"cos_th1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"cos_th2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_flatte=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_flatte=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_flatte=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"g_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"g_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"g_3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_phi_long=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_phi_long=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_phi_para=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_phi_para=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_phi_perp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_phi_perp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"r_phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"J_phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,G__get_linked_tagnum(&G__RooComplexPDFLN_ACCEPTANCE_FUNCTION),-1,-1,2,"m_acceptance_function=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_1a=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_1b=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_2a=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_2b=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_3a=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_3b=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"mM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEKKInterferenceNormCachedIntegralgR),-1,-1,2,"m_norm_cache_integrator=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEKKInterferenceRealCachedIntegralgR),-1,-1,2,"m_real_cache_integrator=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEKKInterferenceImagCachedIntegralgR),-1,-1,2,"m_imag_cache_integrator=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooKKInterferencePositive */
static void G__setup_memvarRooKKInterferencePositive(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferencePositive));
   { RooKKInterferencePositive *p; p=(RooKKInterferencePositive*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"cos_th1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"cos_th2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_flatte=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_flatte=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_flatte=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"g_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"g_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"g_3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_phi_long=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_phi_long=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_phi_para=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_phi_para=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_phi_perp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_phi_perp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"r_phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"J_phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,G__get_linked_tagnum(&G__RooComplexPDFLN_ACCEPTANCE_FUNCTION),-1,-1,2,"m_acceptance_function=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_1a=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_1b=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_2a=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_2b=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_3a=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_3b=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"mM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEKKInterferenceNormCachedIntegralgR),-1,-1,2,"m_norm_cache_integrator=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEKKInterferenceRealCachedIntegralgR),-1,-1,2,"m_real_cache_integrator=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEKKInterferenceImagCachedIntegralgR),-1,-1,2,"m_imag_cache_integrator=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooDalitzAnalysis */
static void G__setup_memvarRooDalitzAnalysis(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysis));
   { RooDalitzAnalysis *p; p=(RooDalitzAnalysis*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_AB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_BC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_4=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_4=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_5=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_5=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_6=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_6=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_7=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_7=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_4=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_4=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_5=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_5=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_6=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_6=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_7=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_7=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_8=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_8=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_Pi0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_Pi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_K=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_B0=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,G__get_linked_tagnum(&G__RooComplexPDFLN_EFFICIENCY_FUNCTION),-1,-1,2,"m_efficiency_function=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_r_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_a_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_r_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_cutoff_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_r_3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_r_4=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_r_5=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_r_6=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_a_7=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_r_7=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_cutoff_7=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEDalitzAnalysisNormCachedIntegralgR),-1,-1,2,"m_norm_cache_integrator=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEDalitzAnalysisRealCachedIntegralgR),-1,-1,2,"m_real_cache_integrator=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEDalitzAnalysisImagCachedIntegralgR),-1,-1,2,"m_imag_cache_integrator=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooThresholdFunction */
static void G__setup_memvarRooThresholdFunction(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooThresholdFunction));
   { RooThresholdFunction *p; p=(RooThresholdFunction*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m12=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m23=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"Ec1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"Ec2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"Ec3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"Eth1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"Eth2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"Eth3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"E_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"E_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"E_xx=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"E_xy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"E_yy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"E_xxx=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"E_xxy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"E_xyy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"E_yyy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m12_offset=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m23_offset=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mM=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"m1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"m2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"m3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooDalitzDelaunay */
static void G__setup_memvarRooDalitzDelaunay(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzDelaunay));
   { RooDalitzDelaunay *p; p=(RooDalitzDelaunay*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m12=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m23=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TGraph2D),-1,-1,2,"graph=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"mM=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooDalitzAnalysisCPV */
static void G__setup_memvarRooDalitzAnalysisCPV(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysisCPV));
   { RooDalitzAnalysisCPV *p; p=(RooDalitzAnalysisCPV*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_AB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_BC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooCategoryProxy),-1,-1,2,"channel=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_4=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_4=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_5=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_5=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_6=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_6=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_7=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_7=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_4=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_4=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_5=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_5=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_6=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_6=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_7=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_7=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_8=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_8=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_1_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_1_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_2_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_2_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_3_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_3_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_4_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_4_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_5_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_5_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_6_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_6_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_7_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_7_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"amp_8_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"phase_8_CC=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_Pi0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_Pi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_K=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_B0=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,G__get_linked_tagnum(&G__RooComplexPDFLN_EFFICIENCY_FUNCTION),-1,-1,2,"m_efficiency_function=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_r_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_a_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_r_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_cutoff_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_r_3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_r_4=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_r_5=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_r_6=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_a_7=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_r_7=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m_cutoff_7=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEDalitzAnalysisNormCachedIntegralgR),-1,-1,2,"m_norm_cache_integrator=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEDalitzAnalysisRealCachedIntegralgR),-1,-1,2,"m_real_cache_integrator=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_CacheIntegratorlEDalitzAnalysisImagCachedIntegralgR),-1,-1,2,"m_imag_cache_integrator=",0,"! don't serialize");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooDalitzGauss */
static void G__setup_memvarRooDalitzGauss(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzGauss));
   { RooDalitzGauss *p; p=(RooDalitzGauss*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m12=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m23=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mean=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"sigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"c1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"c2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"c3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"c4=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,-1,-1,-1,2,"comb=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"mM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooDalitzRelativisticSpinBreitWigner */
static void G__setup_memvarRooDalitzRelativisticSpinBreitWigner(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzRelativisticSpinBreitWigner));
   { RooDalitzRelativisticSpinBreitWigner *p; p=(RooDalitzRelativisticSpinBreitWigner*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m12=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m23=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mass_J=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"width_J=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"c1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"c2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"c3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"c4=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"radius=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,1,-1,-1,-1,2,"spin=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,-1,-1,-1,2,"comb=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"mM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooDalitzHist */
static void G__setup_memvarRooDalitzHist(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzHist));
   { RooDalitzHist *p; p=(RooDalitzHist*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m12=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m23=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TH2F),-1,-1,2,"hist=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"mM=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooDalitzXsd */
static void G__setup_memvarRooDalitzXsd(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzXsd));
   { RooDalitzXsd *p; p=(RooDalitzXsd*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m12=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m23=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mean1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mean2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"sigma1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"sigma2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"border=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"c1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"c2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"c3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"c4=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,-1,-1,-1,2,"comb=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"mM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooDalitzNovosibirsk */
static void G__setup_memvarRooDalitzNovosibirsk(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzNovosibirsk));
   { RooDalitzNovosibirsk *p; p=(RooDalitzNovosibirsk*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m12=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"m23=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"mean=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"sigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"tail=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"c1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"c2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"c3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_RooRealProxy),-1,-1,2,"c4=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,-1,-1,-1,2,"comb=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"m3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,2,"mM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RooComplexPDFLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarRooComplexPDF() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncRooRelativisticSpinBreitWigner(void) {
   /* RooRelativisticSpinBreitWigner */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooRelativisticSpinBreitWigner));
   G__memfunc_setup("RooRelativisticSpinBreitWigner",3103,G__RooComplexPDF_813_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooRelativisticSpinBreitWigner), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooRelativisticSpinBreitWigner",3103,G__RooComplexPDF_813_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooRelativisticSpinBreitWigner), -1, 0, 9, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _m u 'RooAbsReal' - 1 - _mass_J "
"u 'RooAbsReal' - 1 - _width_J u 'RooAbsReal' - 1 - _r "
"u 'RooAbsReal' - 1 - _J d - - 0 - _m1 "
"d - - 0 - _m2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooRelativisticSpinBreitWigner",3103,G__RooComplexPDF_813_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooRelativisticSpinBreitWigner), -1, 0, 2, 1, 1, 0, 
"u 'RooRelativisticSpinBreitWigner' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalculateMomentum",1760,G__RooComplexPDF_813_0_5, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 10 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_813_0_7, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooRelativisticSpinBreitWigner::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_813_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooRelativisticSpinBreitWigner::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_813_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooRelativisticSpinBreitWigner::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_813_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooRelativisticSpinBreitWigner::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_813_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_813_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooRelativisticSpinBreitWigner::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_813_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooRelativisticSpinBreitWigner::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_813_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooRelativisticSpinBreitWigner::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_813_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooRelativisticSpinBreitWigner::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooRelativisticSpinBreitWigner", 3229, G__RooComplexPDF_813_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooBreitWignerTwoBodyPHSP(void) {
   /* RooBreitWignerTwoBodyPHSP */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSP));
   G__memfunc_setup("RooBreitWignerTwoBodyPHSP",2453,G__RooComplexPDF_814_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSP), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooBreitWignerTwoBodyPHSP",2453,G__RooComplexPDF_814_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSP), -1, 0, 7, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _m u 'RooAbsReal' - 1 - _mass_J "
"u 'RooAbsReal' - 1 - _width_J d - - 0 - _m1 "
"d - - 0 - _m2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooBreitWignerTwoBodyPHSP",2453,G__RooComplexPDF_814_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSP), -1, 0, 2, 1, 1, 0, 
"u 'RooBreitWignerTwoBodyPHSP' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_814_0_6, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooBreitWignerTwoBodyPHSP::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_814_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooBreitWignerTwoBodyPHSP::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_814_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooBreitWignerTwoBodyPHSP::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_814_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooBreitWignerTwoBodyPHSP::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_814_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_814_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooBreitWignerTwoBodyPHSP::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_814_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooBreitWignerTwoBodyPHSP::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_814_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooBreitWignerTwoBodyPHSP::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_814_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooBreitWignerTwoBodyPHSP::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooBreitWignerTwoBodyPHSP", 2579, G__RooComplexPDF_814_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooBreitWignerTwoBodyPHSPEvtGen(void) {
   /* RooBreitWignerTwoBodyPHSPEvtGen */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSPEvtGen));
   G__memfunc_setup("RooBreitWignerTwoBodyPHSPEvtGen",3038,G__RooComplexPDF_815_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSPEvtGen), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooBreitWignerTwoBodyPHSPEvtGen",3038,G__RooComplexPDF_815_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSPEvtGen), -1, 0, 8, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _m u 'RooAbsReal' - 1 - _mass_J "
"u 'RooAbsReal' - 1 - _width_J d - - 0 - _cutoff "
"d - - 0 - _m1 d - - 0 - _m2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooBreitWignerTwoBodyPHSPEvtGen",3038,G__RooComplexPDF_815_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSPEvtGen), -1, 0, 2, 1, 1, 0, 
"u 'RooBreitWignerTwoBodyPHSPEvtGen' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_815_0_6, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooBreitWignerTwoBodyPHSPEvtGen::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_815_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooBreitWignerTwoBodyPHSPEvtGen::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_815_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooBreitWignerTwoBodyPHSPEvtGen::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_815_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooBreitWignerTwoBodyPHSPEvtGen::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_815_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_815_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooBreitWignerTwoBodyPHSPEvtGen::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_815_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooBreitWignerTwoBodyPHSPEvtGen::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_815_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooBreitWignerTwoBodyPHSPEvtGen::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_815_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooBreitWignerTwoBodyPHSPEvtGen::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooBreitWignerTwoBodyPHSPEvtGen", 3164, G__RooComplexPDF_815_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooThreeBodyPhaseSpaceProjection(void) {
   /* RooThreeBodyPhaseSpaceProjection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooThreeBodyPhaseSpaceProjection));
   G__memfunc_setup("RooThreeBodyPhaseSpaceProjection",3248,G__RooComplexPDF_816_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooThreeBodyPhaseSpaceProjection), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooThreeBodyPhaseSpaceProjection",3248,G__RooComplexPDF_816_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooThreeBodyPhaseSpaceProjection), -1, 0, 7, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _m12 d - - 0 - _m1 "
"d - - 0 - _m2 d - - 0 - _m3 "
"d - - 0 - _mM", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooThreeBodyPhaseSpaceProjection",3248,G__RooComplexPDF_816_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooThreeBodyPhaseSpaceProjection), -1, 0, 2, 1, 1, 0, 
"u 'RooThreeBodyPhaseSpaceProjection' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_816_0_6, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooThreeBodyPhaseSpaceProjection::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_816_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooThreeBodyPhaseSpaceProjection::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_816_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooThreeBodyPhaseSpaceProjection::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_816_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooThreeBodyPhaseSpaceProjection::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_816_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_816_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooThreeBodyPhaseSpaceProjection::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_816_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooThreeBodyPhaseSpaceProjection::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_816_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooThreeBodyPhaseSpaceProjection::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_816_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooThreeBodyPhaseSpaceProjection::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooThreeBodyPhaseSpaceProjection", 3374, G__RooComplexPDF_816_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooBifurStudentsTDistribution(void) {
   /* RooBifurStudentsTDistribution */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooBifurStudentsTDistribution));
   G__memfunc_setup("RooBifurStudentsTDistribution",3030,G__RooComplexPDF_817_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooBifurStudentsTDistribution), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooBifurStudentsTDistribution",3030,G__RooComplexPDF_817_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooBifurStudentsTDistribution), -1, 0, 8, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _x u 'RooAbsReal' - 1 - _mu "
"u 'RooAbsReal' - 1 - _sigma u 'RooAbsReal' - 1 - _sigma_asym "
"u 'RooAbsReal' - 1 - _nu_l u 'RooAbsReal' - 1 - _nu_r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooBifurStudentsTDistribution",3030,G__RooComplexPDF_817_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooBifurStudentsTDistribution), -1, 0, 2, 1, 1, 0, 
"u 'RooBifurStudentsTDistribution' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_817_0_6, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooBifurStudentsTDistribution::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_817_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooBifurStudentsTDistribution::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_817_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooBifurStudentsTDistribution::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_817_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooBifurStudentsTDistribution::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_817_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_817_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooBifurStudentsTDistribution::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_817_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooBifurStudentsTDistribution::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_817_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooBifurStudentsTDistribution::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_817_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooBifurStudentsTDistribution::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooBifurStudentsTDistribution", 3156, G__RooComplexPDF_817_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooStudentsTDistribution(void) {
   /* RooStudentsTDistribution */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooStudentsTDistribution));
   G__memfunc_setup("RooStudentsTDistribution",2526,G__RooComplexPDF_818_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooStudentsTDistribution), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooStudentsTDistribution",2526,G__RooComplexPDF_818_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooStudentsTDistribution), -1, 0, 6, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _x u 'RooAbsReal' - 1 - _mu "
"u 'RooAbsReal' - 1 - _sigma u 'RooAbsReal' - 1 - _nu", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooStudentsTDistribution",2526,G__RooComplexPDF_818_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooStudentsTDistribution), -1, 0, 2, 1, 1, 0, 
"u 'RooStudentsTDistribution' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("get_mean",832,G__RooComplexPDF_818_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_variance",1256,G__RooComplexPDF_818_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_818_0_8, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooStudentsTDistribution::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_818_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooStudentsTDistribution::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_818_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooStudentsTDistribution::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_818_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooStudentsTDistribution::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_818_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_818_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooStudentsTDistribution::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_818_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooStudentsTDistribution::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_818_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooStudentsTDistribution::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_818_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooStudentsTDistribution::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooStudentsTDistribution", 2652, G__RooComplexPDF_818_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooFlatte(void) {
   /* RooFlatte */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatte));
   G__memfunc_setup("RooFlatte",912,G__RooComplexPDF_819_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatte), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooFlatte",912,G__RooComplexPDF_819_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatte), -1, 0, 15, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _m u 'RooAbsReal' - 1 - _mass_R "
"u 'RooAbsReal' - 1 - _g_1 u 'RooAbsReal' - 1 - _g_2 "
"u 'RooAbsReal' - 1 - _g_3 d - - 0 - _m_1a "
"d - - 0 - _m_1b d - - 0 - _m_2a "
"d - - 0 - _m_2b d - - 0 - _m_3a "
"d - - 0 - _m_3b d - - 0 - _m1 "
"d - - 0 - _m2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooFlatte",912,G__RooComplexPDF_819_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatte), -1, 0, 2, 1, 1, 0, 
"u 'RooFlatte' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalculateMomentum",1760,G__RooComplexPDF_819_0_5, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 10 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_819_0_7, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooFlatte::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_819_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooFlatte::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_819_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooFlatte::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_819_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooFlatte::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_819_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_819_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooFlatte::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_819_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooFlatte::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_819_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooFlatte::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_819_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooFlatte::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooFlatte", 1038, G__RooComplexPDF_819_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooLASS(void) {
   /* RooLASS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooLASS));
   G__memfunc_setup("RooLASS",611,G__RooComplexPDF_820_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooLASS), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooLASS",611,G__RooComplexPDF_820_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooLASS), -1, 0, 9, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _m u 'RooAbsReal' - 1 - _mass_0 "
"u 'RooAbsReal' - 1 - _width_0 u 'RooAbsReal' - 1 - _a "
"u 'RooAbsReal' - 1 - _b d - - 0 - _m1 "
"d - - 0 - _m2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooLASS",611,G__RooComplexPDF_820_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooLASS), -1, 0, 2, 1, 1, 0, 
"u 'RooLASS' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalculateMomentum",1760,G__RooComplexPDF_820_0_5, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 10 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_820_0_7, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooLASS::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_820_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooLASS::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_820_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooLASS::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_820_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooLASS::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_820_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_820_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooLASS::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_820_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooLASS::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_820_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooLASS::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_820_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooLASS::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooLASS", 737, G__RooComplexPDF_820_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooKPiMass(void) {
   /* RooKPiMass */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKPiMass));
   G__memfunc_setup("RooKPiMass",968,G__RooComplexPDF_821_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooKPiMass), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooKPiMass",968,G__RooComplexPDF_821_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooKPiMass), -1, 0, 21, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _m u 'RooAbsReal' - 1 - _mass_0 "
"u 'RooAbsReal' - 1 - _width_0 u 'RooAbsReal' - 1 - _a "
"u 'RooAbsReal' - 1 - _b u 'RooAbsReal' - 1 - _mass_1 "
"u 'RooAbsReal' - 1 - _width_1 u 'RooAbsReal' - 1 - _r_1 "
"u 'RooAbsReal' - 1 - _mass_2 u 'RooAbsReal' - 1 - _width_2 "
"u 'RooAbsReal' - 1 - _r_2 u 'RooAbsReal' - 1 - _amp_0 "
"u 'RooAbsReal' - 1 - _phase_0 u 'RooAbsReal' - 1 - _amp_1 "
"u 'RooAbsReal' - 1 - _phase_1 u 'RooAbsReal' - 1 - _amp_2 "
"u 'RooAbsReal' - 1 - _phase_2 d - - 0 - _m1 "
"d - - 0 - _m2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooKPiMass",968,G__RooComplexPDF_821_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooKPiMass), -1, 0, 2, 1, 1, 0, 
"u 'RooKPiMass' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalculateMomentum",1760,G__RooComplexPDF_821_0_5, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 10 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_821_0_7, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooKPiMass::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_821_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooKPiMass::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_821_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooKPiMass::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_821_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooKPiMass::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_821_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_821_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooKPiMass::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_821_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooKPiMass::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_821_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooKPiMass::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_821_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooKPiMass::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooKPiMass", 1094, G__RooComplexPDF_821_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooHelicityAngles(void) {
   /* RooHelicityAngles */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooHelicityAngles));
   G__memfunc_setup("RooHelicityAngles",1733,G__RooComplexPDF_822_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooHelicityAngles), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooHelicityAngles",1733,G__RooComplexPDF_822_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooHelicityAngles), -1, 0, 13, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _phi u 'RooAbsReal' - 1 - _cos_th1 "
"u 'RooAbsReal' - 1 - _cos_th2 u 'RooAbsReal' - 1 - _J1 "
"u 'RooAbsReal' - 1 - _J2 u 'RooAbsReal' - 1 - _amp_m "
"u 'RooAbsReal' - 1 - _phase_m u 'RooAbsReal' - 1 - _amp_0 "
"u 'RooAbsReal' - 1 - _phase_0 u 'RooAbsReal' - 1 - _amp_p "
"u 'RooAbsReal' - 1 - _phase_p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooHelicityAngles",1733,G__RooComplexPDF_822_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooHelicityAngles), -1, 0, 2, 1, 1, 0, 
"u 'RooHelicityAngles' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_822_0_6, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooHelicityAngles::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_822_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooHelicityAngles::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_822_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooHelicityAngles::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_822_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooHelicityAngles::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_822_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_822_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooHelicityAngles::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_822_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooHelicityAngles::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_822_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooHelicityAngles::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_822_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooHelicityAngles::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooHelicityAngles", 1859, G__RooComplexPDF_822_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooMassHelicityAngles(void) {
   /* RooMassHelicityAngles */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles));
   G__memfunc_setup("RooMassHelicityAngles",2137,G__RooComplexPDF_861_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooMassHelicityAngles",2137,G__RooComplexPDF_861_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles), -1, 0, 37, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _m u 'RooAbsReal' - 1 - _phi "
"u 'RooAbsReal' - 1 - _cos_th1 u 'RooAbsReal' - 1 - _cos_th2 "
"u 'RooAbsReal' - 1 - _mass_0 u 'RooAbsReal' - 1 - _width_0 "
"u 'RooAbsReal' - 1 - _a u 'RooAbsReal' - 1 - _b "
"u 'RooAbsReal' - 1 - _mass_1 u 'RooAbsReal' - 1 - _width_1 "
"u 'RooAbsReal' - 1 - _r_1 u 'RooAbsReal' - 1 - _mass_2 "
"u 'RooAbsReal' - 1 - _width_2 u 'RooAbsReal' - 1 - _r_2 "
"u 'RooAbsReal' - 1 - _amp_00 u 'RooAbsReal' - 1 - _phase_00 "
"u 'RooAbsReal' - 1 - _amp_1m u 'RooAbsReal' - 1 - _phase_1m "
"u 'RooAbsReal' - 1 - _amp_10 u 'RooAbsReal' - 1 - _phase_10 "
"u 'RooAbsReal' - 1 - _amp_1p u 'RooAbsReal' - 1 - _phase_1p "
"u 'RooAbsReal' - 1 - _amp_2m u 'RooAbsReal' - 1 - _phase_2m "
"u 'RooAbsReal' - 1 - _amp_20 u 'RooAbsReal' - 1 - _phase_20 "
"u 'RooAbsReal' - 1 - _amp_2p u 'RooAbsReal' - 1 - _phase_2p "
"i 'ACCEPTANCE_FUNCTION' - 0 - _acceptance_function u 'MHI_PDG_constants' - 0 - _s_PDG "
"u 'MHI_CacheIntegrators_4D' - 0 - _s_4D u 'MHI_CacheIntegrators_3D_phi_th1_th2' - 0 - _s_3D_phi_th1_th2 "
"u 'MHI_CacheIntegrators_3D_m_th1_th2' - 0 - _s_3D_m_th1_th2 u 'MHI_CacheIntegrators_3D_m_phi_th2' - 0 - _s_3D_m_phi_th2 "
"u 'MHI_CacheIntegrators_3D_m_phi_th1' - 0 - _s_3D_m_phi_th1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooMassHelicityAngles",2137,G__RooComplexPDF_861_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles), -1, 0, 2, 1, 1, 0, 
"u 'RooMassHelicityAngles' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAnalyticalIntegral",2168,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'RooArgSet' - 1 - allVars u 'RooArgSet' - 1 - analVars "
"C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegral",1880,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_861_0_8, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooMassHelicityAngles::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_861_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooMassHelicityAngles::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_861_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooMassHelicityAngles::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_861_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooMassHelicityAngles::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_861_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_861_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooMassHelicityAngles::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_861_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooMassHelicityAngles::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_861_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooMassHelicityAngles::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_861_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooMassHelicityAngles::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooMassHelicityAngles", 2263, G__RooComplexPDF_861_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooVarianceGammaDistribution(void) {
   /* RooVarianceGammaDistribution */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooVarianceGammaDistribution));
   G__memfunc_setup("RooVarianceGammaDistribution",2876,G__RooComplexPDF_862_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooVarianceGammaDistribution), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooVarianceGammaDistribution",2876,G__RooComplexPDF_862_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooVarianceGammaDistribution), -1, 0, 7, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _x u 'RooAbsReal' - 1 - _mu "
"u 'RooAbsReal' - 1 - _alpha u 'RooAbsReal' - 1 - _beta "
"u 'RooAbsReal' - 1 - _lambda", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooVarianceGammaDistribution",2876,G__RooComplexPDF_862_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooVarianceGammaDistribution), -1, 0, 2, 1, 1, 0, 
"u 'RooVarianceGammaDistribution' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("get_mean",832,G__RooComplexPDF_862_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_variance",1256,G__RooComplexPDF_862_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_862_0_8, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooVarianceGammaDistribution::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_862_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooVarianceGammaDistribution::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_862_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooVarianceGammaDistribution::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_862_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooVarianceGammaDistribution::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_862_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_862_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooVarianceGammaDistribution::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_862_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooVarianceGammaDistribution::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_862_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooVarianceGammaDistribution::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_862_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooVarianceGammaDistribution::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooVarianceGammaDistribution", 3002, G__RooComplexPDF_862_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooDalitzPhaseSpaceAmplitude(void) {
   /* RooDalitzPhaseSpaceAmplitude */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzPhaseSpaceAmplitude));
   G__memfunc_setup("RooDalitzPhaseSpaceAmplitude",2842,G__RooComplexPDF_863_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzPhaseSpaceAmplitude), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooDalitzPhaseSpaceAmplitude",2842,G__RooComplexPDF_863_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzPhaseSpaceAmplitude), -1, 0, 8, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _m12 u 'RooAbsReal' - 1 - _m23 "
"d - - 0 - _m1 d - - 0 - _m2 "
"d - - 0 - _m3 d - - 0 - _mM", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooDalitzPhaseSpaceAmplitude",2842,G__RooComplexPDF_863_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzPhaseSpaceAmplitude), -1, 0, 2, 1, 1, 0, 
"u 'RooDalitzPhaseSpaceAmplitude' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAnalyticalIntegral",2168,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'RooArgSet' - 1 - allVars u 'RooArgSet' - 1 - analVars "
"C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegral",1880,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_863_0_8, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooDalitzPhaseSpaceAmplitude::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_863_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzPhaseSpaceAmplitude::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_863_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooDalitzPhaseSpaceAmplitude::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_863_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooDalitzPhaseSpaceAmplitude::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_863_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_863_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzPhaseSpaceAmplitude::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_863_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooDalitzPhaseSpaceAmplitude::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_863_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzPhaseSpaceAmplitude::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_863_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooDalitzPhaseSpaceAmplitude::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooDalitzPhaseSpaceAmplitude", 2968, G__RooComplexPDF_863_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooDalitzCubicPolynomial(void) {
   /* RooDalitzCubicPolynomial */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomial));
   G__memfunc_setup("RooDalitzCubicPolynomial",2466,G__RooComplexPDF_864_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomial), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooDalitzCubicPolynomial",2466,G__RooComplexPDF_864_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomial), -1, 0, 19, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _m12 u 'RooAbsReal' - 1 - _m23 "
"u 'RooAbsReal' - 1 - _E_x u 'RooAbsReal' - 1 - _E_y "
"u 'RooAbsReal' - 1 - _E_xx u 'RooAbsReal' - 1 - _E_xy "
"u 'RooAbsReal' - 1 - _E_yy u 'RooAbsReal' - 1 - _E_xxx "
"u 'RooAbsReal' - 1 - _E_xxy u 'RooAbsReal' - 1 - _E_xyy "
"u 'RooAbsReal' - 1 - _E_yyy d - - 0 - _m1 "
"d - - 0 - _m2 d - - 0 - _m3 "
"d - - 0 - _mM d - - 0 '0.0' _m12_offset "
"d - - 0 '0.0' _m23_offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooDalitzCubicPolynomial",2466,G__RooComplexPDF_864_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomial), -1, 0, 2, 1, 1, 0, 
"u 'RooDalitzCubicPolynomial' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAnalyticalIntegral",2168,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'RooArgSet' - 1 - allVars u 'RooArgSet' - 1 - analVars "
"C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegral",1880,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("adaptiveSimpsonsAux",2008,G__RooComplexPDF_864_0_7, 100, -1, G__defined_typename("Double_t"), 0, 9, 1, 1, 8, 
"d - - 0 - x d - - 0 - a "
"d - - 0 - b d - - 0 - epsilon "
"d - - 0 - S d - - 0 - fa "
"d - - 0 - fb d - - 0 - fc "
"i - - 0 - bottom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("adaptiveSimpsons",1706,G__RooComplexPDF_864_0_8, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 1, 8, 
"d - - 0 - x d - - 0 - a "
"d - - 0 - b d - - 0 - epsilon "
"i - - 0 - maxRecursionDepth", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_864_0_10, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooDalitzCubicPolynomial::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_864_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzCubicPolynomial::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_864_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooDalitzCubicPolynomial::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_864_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooDalitzCubicPolynomial::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_864_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_864_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzCubicPolynomial::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_864_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooDalitzCubicPolynomial::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_864_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzCubicPolynomial::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_864_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooDalitzCubicPolynomial::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooDalitzCubicPolynomial", 2592, G__RooComplexPDF_864_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooDalitzCubicPolynomialSymmetric(void) {
   /* RooDalitzCubicPolynomialSymmetric */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomialSymmetric));
   G__memfunc_setup("RooDalitzCubicPolynomialSymmetric",3423,G__RooComplexPDF_865_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomialSymmetric), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooDalitzCubicPolynomialSymmetric",3423,G__RooComplexPDF_865_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomialSymmetric), -1, 0, 15, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _m12 u 'RooAbsReal' - 1 - _m23 "
"u 'RooAbsReal' - 1 - _E_1 u 'RooAbsReal' - 1 - _E_2 "
"u 'RooAbsReal' - 1 - _E_3 u 'RooAbsReal' - 1 - _E_xy "
"u 'RooAbsReal' - 1 - _E_xyn d - - 0 - _m1 "
"d - - 0 - _m2 d - - 0 - _m3 "
"d - - 0 - _mM d - - 0 '0.0' _m12_offset "
"d - - 0 '0.0' _m23_offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooDalitzCubicPolynomialSymmetric",3423,G__RooComplexPDF_865_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzCubicPolynomialSymmetric), -1, 0, 2, 1, 1, 0, 
"u 'RooDalitzCubicPolynomialSymmetric' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_865_0_6, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooDalitzCubicPolynomialSymmetric::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_865_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzCubicPolynomialSymmetric::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_865_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooDalitzCubicPolynomialSymmetric::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_865_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooDalitzCubicPolynomialSymmetric::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_865_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_865_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzCubicPolynomialSymmetric::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_865_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooDalitzCubicPolynomialSymmetric::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_865_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzCubicPolynomialSymmetric::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_865_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooDalitzCubicPolynomialSymmetric::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooDalitzCubicPolynomialSymmetric", 3549, G__RooComplexPDF_865_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooTwoBodyThresholdFunction(void) {
   /* RooTwoBodyThresholdFunction */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooTwoBodyThresholdFunction));
   G__memfunc_setup("RooTwoBodyThresholdFunction",2795,G__RooComplexPDF_866_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooTwoBodyThresholdFunction), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooTwoBodyThresholdFunction",2795,G__RooComplexPDF_866_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooTwoBodyThresholdFunction), -1, 0, 5, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _m u 'RooAbsReal' - 1 - _a "
"d - - 0 - _m_min", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooTwoBodyThresholdFunction",2795,G__RooComplexPDF_866_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooTwoBodyThresholdFunction), -1, 0, 2, 1, 1, 0, 
"u 'RooTwoBodyThresholdFunction' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_866_0_6, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooTwoBodyThresholdFunction::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_866_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooTwoBodyThresholdFunction::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_866_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooTwoBodyThresholdFunction::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_866_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooTwoBodyThresholdFunction::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_866_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_866_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooTwoBodyThresholdFunction::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_866_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooTwoBodyThresholdFunction::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_866_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooTwoBodyThresholdFunction::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_866_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooTwoBodyThresholdFunction::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooTwoBodyThresholdFunction", 2921, G__RooComplexPDF_866_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooMassHelicityAngles_TransformedBase(void) {
   /* RooMassHelicityAngles_TransformedBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles_TransformedBase));
   G__memfunc_setup("RooMassHelicityAngles_TransformedBase",3768,G__RooComplexPDF_867_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles_TransformedBase), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooMassHelicityAngles_TransformedBase",3768,G__RooComplexPDF_867_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles_TransformedBase), -1, 0, 37, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _m u 'RooAbsReal' - 1 - _phi "
"u 'RooAbsReal' - 1 - _cos_th1 u 'RooAbsReal' - 1 - _cos_th2 "
"u 'RooAbsReal' - 1 - _mass_0 u 'RooAbsReal' - 1 - _width_0 "
"u 'RooAbsReal' - 1 - _a u 'RooAbsReal' - 1 - _b "
"u 'RooAbsReal' - 1 - _mass_1 u 'RooAbsReal' - 1 - _width_1 "
"u 'RooAbsReal' - 1 - _r_1 u 'RooAbsReal' - 1 - _mass_2 "
"u 'RooAbsReal' - 1 - _width_2 u 'RooAbsReal' - 1 - _r_2 "
"u 'RooAbsReal' - 1 - _amp_00 u 'RooAbsReal' - 1 - _phase_00 "
"u 'RooAbsReal' - 1 - _amp_10 u 'RooAbsReal' - 1 - _phase_10 "
"u 'RooAbsReal' - 1 - _amp_1para u 'RooAbsReal' - 1 - _phase_1para "
"u 'RooAbsReal' - 1 - _amp_1perp u 'RooAbsReal' - 1 - _phase_1perp "
"u 'RooAbsReal' - 1 - _amp_20 u 'RooAbsReal' - 1 - _phase_20 "
"u 'RooAbsReal' - 1 - _amp_2para u 'RooAbsReal' - 1 - _phase_2para "
"u 'RooAbsReal' - 1 - _amp_2perp u 'RooAbsReal' - 1 - _phase_2perp "
"i 'ACCEPTANCE_FUNCTION' - 0 - _acceptance_function u 'MHI_PDG_constants' - 0 - _s_PDG "
"u 'MHI_CacheIntegrators_4D' - 0 - _s_4D u 'MHI_CacheIntegrators_3D_phi_th1_th2' - 0 - _s_3D_phi_th1_th2 "
"u 'MHI_CacheIntegrators_3D_m_th1_th2' - 0 - _s_3D_m_th1_th2 u 'MHI_CacheIntegrators_3D_m_phi_th2' - 0 - _s_3D_m_phi_th2 "
"u 'MHI_CacheIntegrators_3D_m_phi_th1' - 0 - _s_3D_m_phi_th1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooMassHelicityAngles_TransformedBase",3768,G__RooComplexPDF_867_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAngles_TransformedBase), -1, 0, 2, 1, 1, 0, 
"u 'RooMassHelicityAngles_TransformedBase' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAnalyticalIntegral",2168,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'RooArgSet' - 1 - allVars u 'RooArgSet' - 1 - analVars "
"C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegral",1880,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_867_0_8, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooMassHelicityAngles_TransformedBase::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_867_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooMassHelicityAngles_TransformedBase::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_867_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooMassHelicityAngles_TransformedBase::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_867_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooMassHelicityAngles_TransformedBase::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_867_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_867_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooMassHelicityAngles_TransformedBase::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_867_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooMassHelicityAngles_TransformedBase::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_867_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooMassHelicityAngles_TransformedBase::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_867_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooMassHelicityAngles_TransformedBase::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooMassHelicityAngles_TransformedBase", 3894, G__RooComplexPDF_867_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooMassHelicityAnglesCPV(void) {
   /* RooMassHelicityAnglesCPV */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAnglesCPV));
   G__memfunc_setup("RooMassHelicityAnglesCPV",2370,G__RooComplexPDF_869_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAnglesCPV), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooMassHelicityAnglesCPV",2370,G__RooComplexPDF_869_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAnglesCPV), -1, 0, 39, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _m u 'RooAbsReal' - 1 - _phi "
"u 'RooAbsReal' - 1 - _cos_th1 u 'RooAbsReal' - 1 - _cos_th2 "
"u 'RooAbsCategory' - 1 - _channel u 'RooAbsReal' - 1 - _mass_0 "
"u 'RooAbsReal' - 1 - _width_0 u 'RooAbsReal' - 1 - _a "
"u 'RooAbsReal' - 1 - _b u 'RooAbsReal' - 1 - _mass_1 "
"u 'RooAbsReal' - 1 - _width_1 u 'RooAbsReal' - 1 - _r_1 "
"u 'RooAbsReal' - 1 - _mass_2 u 'RooAbsReal' - 1 - _width_2 "
"u 'RooAbsReal' - 1 - _r_2 u 'RooAbsReal' - 1 - _amp_00 "
"u 'RooAbsReal' - 1 - _phase_00 u 'RooAbsReal' - 1 - _amp_10 "
"u 'RooAbsReal' - 1 - _phase_10 u 'RooAbsReal' - 1 - _amp_1para "
"u 'RooAbsReal' - 1 - _phase_1para u 'RooAbsReal' - 1 - _amp_1perp "
"u 'RooAbsReal' - 1 - _phase_1perp u 'RooAbsReal' - 1 - _amp_20 "
"u 'RooAbsReal' - 1 - _phase_20 u 'RooAbsReal' - 1 - _amp_2para "
"u 'RooAbsReal' - 1 - _phase_2para u 'RooAbsReal' - 1 - _amp_2perp "
"u 'RooAbsReal' - 1 - _phase_2perp i 'ACCEPTANCE_FUNCTION' - 0 - _acceptance_function "
"u 'MHI_CC_parameters' - 0 - _s_cc_parameters u 'MHI_PDG_constants' - 0 - _s_PDG "
"u 'MHI_CacheIntegrators_4D' - 0 - _s_4D u 'MHI_CacheIntegrators_3D_phi_th1_th2' - 0 - _s_3D_phi_th1_th2 "
"u 'MHI_CacheIntegrators_3D_m_th1_th2' - 0 - _s_3D_m_th1_th2 u 'MHI_CacheIntegrators_3D_m_phi_th2' - 0 - _s_3D_m_phi_th2 "
"u 'MHI_CacheIntegrators_3D_m_phi_th1' - 0 - _s_3D_m_phi_th1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooMassHelicityAnglesCPV",2370,G__RooComplexPDF_869_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooMassHelicityAnglesCPV), -1, 0, 2, 1, 1, 0, 
"u 'RooMassHelicityAnglesCPV' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAnalyticalIntegral",2168,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'RooArgSet' - 1 - allVars u 'RooArgSet' - 1 - analVars "
"C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegral",1880,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAsymmetry",1291,G__RooComplexPDF_869_0_7, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegralAndAsymmetry",3126,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__RooComplexPDFLN_pairlEdoublecOdoublegR), G__defined_typename("pair<Double_t,Double_t>"), 0, 2, 1, 2, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RooComplexPDF_869_0_10, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooMassHelicityAnglesCPV::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_869_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooMassHelicityAnglesCPV::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_869_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooMassHelicityAnglesCPV::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_869_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooMassHelicityAnglesCPV::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_869_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_869_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooMassHelicityAnglesCPV::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_869_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooMassHelicityAnglesCPV::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_869_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooMassHelicityAnglesCPV::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_869_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooMassHelicityAnglesCPV::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooMassHelicityAnglesCPV", 2496, G__RooComplexPDF_869_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooCutPdf(void) {
   /* RooCutPdf */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooCutPdf));
   G__memfunc_setup("RooCutPdf",886,G__RooComplexPDF_870_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooCutPdf), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooCutPdf",886,G__RooComplexPDF_870_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooCutPdf), -1, 0, 5, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _x d - - 0 - _cut_value "
"g - - 0 - _left_non_zero", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooCutPdf",886,G__RooComplexPDF_870_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooCutPdf), -1, 0, 2, 1, 1, 0, 
"u 'RooCutPdf' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAnalyticalIntegral",2168,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'RooArgSet' - 1 - allVars u 'RooArgSet' - 1 - analVars "
"C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegral",1880,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_870_0_8, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooCutPdf::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_870_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooCutPdf::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_870_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooCutPdf::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_870_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooCutPdf::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_870_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_870_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooCutPdf::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_870_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooCutPdf::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_870_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooCutPdf::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_870_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooCutPdf::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooCutPdf", 1012, G__RooComplexPDF_870_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooChebychevCut(void) {
   /* RooChebychevCut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooChebychevCut));
   G__memfunc_setup("RooChebychevCut",1517,G__RooComplexPDF_871_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooChebychevCut), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooChebychevCut",1517,G__RooComplexPDF_871_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooChebychevCut), -1, 0, 5, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _x u 'RooArgList' - 11 - _coefList "
"d - - 10 - cut_value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooChebychevCut",1517,G__RooComplexPDF_871_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooChebychevCut), -1, 0, 2, 1, 1, 0, 
"u 'RooChebychevCut' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAnalyticalIntegral",2168,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'RooArgSet' - 1 - allVars u 'RooArgSet' - 1 - analVars "
"C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegral",1880,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_871_0_8, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooChebychevCut::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_871_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooChebychevCut::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_871_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooChebychevCut::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_871_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooChebychevCut::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_871_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_871_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooChebychevCut::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_871_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooChebychevCut::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_871_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooChebychevCut::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_871_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooChebychevCut::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooChebychevCut", 1643, G__RooComplexPDF_871_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooCategoryPdf(void) {
   /* RooCategoryPdf */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooCategoryPdf));
   G__memfunc_setup("RooCategoryPdf",1416,G__RooComplexPDF_872_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooCategoryPdf), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooCategoryPdf",1416,G__RooComplexPDF_872_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooCategoryPdf), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsCategory' - 1 - _c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooCategoryPdf",1416,G__RooComplexPDF_872_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooCategoryPdf), -1, 0, 2, 1, 1, 0, 
"u 'RooCategoryPdf' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAnalyticalIntegral",2168,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'RooArgSet' - 1 - allVars u 'RooArgSet' - 1 - analVars "
"C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegral",1880,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_872_0_8, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooCategoryPdf::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_872_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooCategoryPdf::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_872_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooCategoryPdf::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_872_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooCategoryPdf::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_872_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_872_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooCategoryPdf::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_872_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooCategoryPdf::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_872_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooCategoryPdf::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_872_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooCategoryPdf::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooCategoryPdf", 1542, G__RooComplexPDF_872_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooFlatteAndNonRes(void) {
   /* RooFlatteAndNonRes */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatteAndNonRes));
   G__memfunc_setup("RooFlatteAndNonRes",1784,G__RooComplexPDF_873_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatteAndNonRes), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooFlatteAndNonRes",1784,G__RooComplexPDF_873_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatteAndNonRes), -1, 0, 21, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _m u 'RooAbsReal' - 1 - _amp_flatte "
"u 'RooAbsReal' - 1 - _phase_flatte u 'RooAbsReal' - 1 - _mass_R "
"u 'RooAbsReal' - 1 - _g_1 u 'RooAbsReal' - 1 - _g_2 "
"u 'RooAbsReal' - 1 - _g_3 u 'RooAbsReal' - 1 - _amp_nonres "
"u 'RooAbsReal' - 1 - _phase_nonres d - - 0 - _m_1a "
"d - - 0 - _m_1b d - - 0 - _m_2a "
"d - - 0 - _m_2b d - - 0 - _m_3a "
"d - - 0 - _m_3b d - - 0 - _m1 "
"d - - 0 - _m2 d - - 0 - _m3 "
"d - - 0 - _mM", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooFlatteAndNonRes",1784,G__RooComplexPDF_873_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooFlatteAndNonRes), -1, 0, 2, 1, 1, 0, 
"u 'RooFlatteAndNonRes' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalculateMomentum",1760,G__RooComplexPDF_873_0_5, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 10 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_873_0_7, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooFlatteAndNonRes::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_873_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooFlatteAndNonRes::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_873_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooFlatteAndNonRes::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_873_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooFlatteAndNonRes::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_873_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_873_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooFlatteAndNonRes::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_873_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooFlatteAndNonRes::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_873_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooFlatteAndNonRes::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_873_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooFlatteAndNonRes::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooFlatteAndNonRes", 1910, G__RooComplexPDF_873_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooKKInterference(void) {
   /* RooKKInterference */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterference));
   G__memfunc_setup("RooKKInterference",1696,G__RooComplexPDF_881_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterference), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooKKInterference",1696,G__RooComplexPDF_881_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterference), -1, 0, 34, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _m u 'RooAbsReal' - 1 - _phi "
"u 'RooAbsReal' - 1 - _cos_th1 u 'RooAbsReal' - 1 - _cos_th2 "
"u 'RooAbsReal' - 1 - _amp_flatte u 'RooAbsReal' - 1 - _phase_flatte "
"u 'RooAbsReal' - 1 - _mass_flatte u 'RooAbsReal' - 1 - _g_1 "
"u 'RooAbsReal' - 1 - _g_2 u 'RooAbsReal' - 1 - _g_3 "
"u 'RooAbsReal' - 1 - _amp_phi_long u 'RooAbsReal' - 1 - _phase_phi_long "
"u 'RooAbsReal' - 1 - _amp_phi_para u 'RooAbsReal' - 1 - _phase_phi_para "
"u 'RooAbsReal' - 1 - _amp_phi_perp u 'RooAbsReal' - 1 - _phase_phi_perp "
"u 'RooAbsReal' - 1 - _mass_phi u 'RooAbsReal' - 1 - _width_phi "
"u 'RooAbsReal' - 1 - _r_phi u 'RooAbsReal' - 1 - _J_phi "
"i 'ACCEPTANCE_FUNCTION' - 0 - _acceptance_function d - - 0 - _m_1a "
"d - - 0 - _m_1b d - - 0 - _m_2a "
"d - - 0 - _m_2b d - - 0 - _m_3a "
"d - - 0 - _m_3b d - - 0 - _m1 "
"d - - 0 - _m2 d - - 0 - _m3 "
"d - - 0 - _mM u 'KKInterferenceCacheIntegrators_4D' - 0 - _s_4D", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooKKInterference",1696,G__RooComplexPDF_881_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterference), -1, 0, 2, 1, 1, 0, 
"u 'RooKKInterference' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAnalyticalIntegral",2168,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'RooArgSet' - 1 - allVars u 'RooArgSet' - 1 - analVars "
"C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegral",1880,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_881_0_8, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooKKInterference::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_881_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooKKInterference::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_881_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooKKInterference::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_881_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooKKInterference::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_881_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_881_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooKKInterference::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_881_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooKKInterference::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_881_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooKKInterference::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_881_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooKKInterference::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooKKInterference", 1822, G__RooComplexPDF_881_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooKKInterferenceNorm(void) {
   /* RooKKInterferenceNorm */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferenceNorm));
   G__memfunc_setup("RooKKInterferenceNorm",2108,G__RooComplexPDF_882_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferenceNorm), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooKKInterferenceNorm",2108,G__RooComplexPDF_882_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferenceNorm), -1, 0, 34, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _m u 'RooAbsReal' - 1 - _phi "
"u 'RooAbsReal' - 1 - _cos_th1 u 'RooAbsReal' - 1 - _cos_th2 "
"u 'RooAbsReal' - 1 - _amp_flatte u 'RooAbsReal' - 1 - _phase_flatte "
"u 'RooAbsReal' - 1 - _mass_flatte u 'RooAbsReal' - 1 - _g_1 "
"u 'RooAbsReal' - 1 - _g_2 u 'RooAbsReal' - 1 - _g_3 "
"u 'RooAbsReal' - 1 - _amp_phi_long u 'RooAbsReal' - 1 - _phase_phi_long "
"u 'RooAbsReal' - 1 - _amp_phi_para u 'RooAbsReal' - 1 - _phase_phi_para "
"u 'RooAbsReal' - 1 - _amp_phi_perp u 'RooAbsReal' - 1 - _phase_phi_perp "
"u 'RooAbsReal' - 1 - _mass_phi u 'RooAbsReal' - 1 - _width_phi "
"u 'RooAbsReal' - 1 - _r_phi u 'RooAbsReal' - 1 - _J_phi "
"i 'ACCEPTANCE_FUNCTION' - 0 - _acceptance_function d - - 0 - _m_1a "
"d - - 0 - _m_1b d - - 0 - _m_2a "
"d - - 0 - _m_2b d - - 0 - _m_3a "
"d - - 0 - _m_3b d - - 0 - _m1 "
"d - - 0 - _m2 d - - 0 - _m3 "
"d - - 0 - _mM u 'KKInterferenceCacheIntegrators_4D' - 0 - _s_4D", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooKKInterferenceNorm",2108,G__RooComplexPDF_882_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferenceNorm), -1, 0, 2, 1, 1, 0, 
"u 'RooKKInterferenceNorm' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAnalyticalIntegral",2168,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'RooArgSet' - 1 - allVars u 'RooArgSet' - 1 - analVars "
"C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegral",1880,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_882_0_8, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooKKInterferenceNorm::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_882_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooKKInterferenceNorm::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_882_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooKKInterferenceNorm::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_882_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooKKInterferenceNorm::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_882_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_882_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooKKInterferenceNorm::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_882_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooKKInterferenceNorm::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_882_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooKKInterferenceNorm::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_882_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooKKInterferenceNorm::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooKKInterferenceNorm", 2234, G__RooComplexPDF_882_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooKKInterferencePositive(void) {
   /* RooKKInterferencePositive */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferencePositive));
   G__memfunc_setup("RooKKInterferencePositive",2547,G__RooComplexPDF_883_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferencePositive), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooKKInterferencePositive",2547,G__RooComplexPDF_883_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferencePositive), -1, 0, 34, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _m u 'RooAbsReal' - 1 - _phi "
"u 'RooAbsReal' - 1 - _cos_th1 u 'RooAbsReal' - 1 - _cos_th2 "
"u 'RooAbsReal' - 1 - _amp_flatte u 'RooAbsReal' - 1 - _phase_flatte "
"u 'RooAbsReal' - 1 - _mass_flatte u 'RooAbsReal' - 1 - _g_1 "
"u 'RooAbsReal' - 1 - _g_2 u 'RooAbsReal' - 1 - _g_3 "
"u 'RooAbsReal' - 1 - _amp_phi_long u 'RooAbsReal' - 1 - _phase_phi_long "
"u 'RooAbsReal' - 1 - _amp_phi_para u 'RooAbsReal' - 1 - _phase_phi_para "
"u 'RooAbsReal' - 1 - _amp_phi_perp u 'RooAbsReal' - 1 - _phase_phi_perp "
"u 'RooAbsReal' - 1 - _mass_phi u 'RooAbsReal' - 1 - _width_phi "
"u 'RooAbsReal' - 1 - _r_phi u 'RooAbsReal' - 1 - _J_phi "
"i 'ACCEPTANCE_FUNCTION' - 0 - _acceptance_function d - - 0 - _m_1a "
"d - - 0 - _m_1b d - - 0 - _m_2a "
"d - - 0 - _m_2b d - - 0 - _m_3a "
"d - - 0 - _m_3b d - - 0 - _m1 "
"d - - 0 - _m2 d - - 0 - _m3 "
"d - - 0 - _mM u 'KKInterferenceCacheIntegrators_4D' - 0 - _s_4D", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooKKInterferencePositive",2547,G__RooComplexPDF_883_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooKKInterferencePositive), -1, 0, 2, 1, 1, 0, 
"u 'RooKKInterferencePositive' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAnalyticalIntegral",2168,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'RooArgSet' - 1 - allVars u 'RooArgSet' - 1 - analVars "
"C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegral",1880,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_883_0_8, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooKKInterferencePositive::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_883_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooKKInterferencePositive::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_883_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooKKInterferencePositive::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_883_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooKKInterferencePositive::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_883_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_883_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooKKInterferencePositive::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_883_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooKKInterferencePositive::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_883_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooKKInterferencePositive::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_883_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooKKInterferencePositive::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooKKInterferencePositive", 2673, G__RooComplexPDF_883_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooDalitzAnalysis(void) {
   /* RooDalitzAnalysis */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysis));
   G__memfunc_setup("RooDalitzAnalysis",1756,G__RooComplexPDF_900_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysis), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooDalitzAnalysis",1756,G__RooComplexPDF_900_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysis), -1, 0, 38, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _mass_AB u 'RooAbsReal' - 1 - _mass_BC "
"u 'RooAbsReal' - 1 - _mass_1 u 'RooAbsReal' - 1 - _width_1 "
"u 'RooAbsReal' - 1 - _mass_2 u 'RooAbsReal' - 1 - _width_2 "
"u 'RooAbsReal' - 1 - _mass_3 u 'RooAbsReal' - 1 - _width_3 "
"u 'RooAbsReal' - 1 - _mass_4 u 'RooAbsReal' - 1 - _width_4 "
"u 'RooAbsReal' - 1 - _mass_5 u 'RooAbsReal' - 1 - _width_5 "
"u 'RooAbsReal' - 1 - _mass_6 u 'RooAbsReal' - 1 - _width_6 "
"u 'RooAbsReal' - 1 - _mass_7 u 'RooAbsReal' - 1 - _width_7 "
"u 'RooAbsReal' - 1 - _amp_1 u 'RooAbsReal' - 1 - _phase_1 "
"u 'RooAbsReal' - 1 - _amp_2 u 'RooAbsReal' - 1 - _phase_2 "
"u 'RooAbsReal' - 1 - _amp_3 u 'RooAbsReal' - 1 - _phase_3 "
"u 'RooAbsReal' - 1 - _amp_4 u 'RooAbsReal' - 1 - _phase_4 "
"u 'RooAbsReal' - 1 - _amp_5 u 'RooAbsReal' - 1 - _phase_5 "
"u 'RooAbsReal' - 1 - _amp_6 u 'RooAbsReal' - 1 - _phase_6 "
"u 'RooAbsReal' - 1 - _amp_7 u 'RooAbsReal' - 1 - _phase_7 "
"u 'RooAbsReal' - 1 - _amp_8 u 'RooAbsReal' - 1 - _phase_8 "
"i 'EFFICIENCY_FUNCTION' - 0 - _efficiency_function u 'DAI_PDG_constants' - 0 - _s_PDG "
"u 'DAI_Dalitz_Model_parameters' - 0 - _s_DM_pars u 'DAI_CacheIntegrators_2D' - 0 - _s_2D", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooDalitzAnalysis",1756,G__RooComplexPDF_900_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysis), -1, 0, 2, 1, 1, 0, 
"u 'RooDalitzAnalysis' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAnalyticalIntegral",2168,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'RooArgSet' - 1 - allVars u 'RooArgSet' - 1 - analVars "
"C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegral",1880,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_900_0_8, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooDalitzAnalysis::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_900_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzAnalysis::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_900_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooDalitzAnalysis::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_900_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooDalitzAnalysis::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_900_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_900_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzAnalysis::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_900_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooDalitzAnalysis::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_900_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzAnalysis::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_900_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooDalitzAnalysis::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooDalitzAnalysis", 1882, G__RooComplexPDF_900_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooThresholdFunction(void) {
   /* RooThresholdFunction */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooThresholdFunction));
   G__memfunc_setup("RooThresholdFunction",2083,G__RooComplexPDF_901_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooThresholdFunction), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooThresholdFunction",2083,G__RooComplexPDF_901_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooThresholdFunction), -1, 0, 25, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _m12 u 'RooAbsReal' - 1 - _m23 "
"u 'RooAbsReal' - 1 - _Ec1 u 'RooAbsReal' - 1 - _Ec2 "
"u 'RooAbsReal' - 1 - _Ec3 u 'RooAbsReal' - 1 - _Eth1 "
"u 'RooAbsReal' - 1 - _Eth2 u 'RooAbsReal' - 1 - _Eth3 "
"u 'RooAbsReal' - 1 - _E_x u 'RooAbsReal' - 1 - _E_y "
"u 'RooAbsReal' - 1 - _E_xx u 'RooAbsReal' - 1 - _E_xy "
"u 'RooAbsReal' - 1 - _E_yy u 'RooAbsReal' - 1 - _E_xxx "
"u 'RooAbsReal' - 1 - _E_xxy u 'RooAbsReal' - 1 - _E_xyy "
"u 'RooAbsReal' - 1 - _E_yyy d - - 0 - _m12_offset "
"d - - 0 - _m23_offset d - - 0 - _mM "
"d - - 0 - _m1 d - - 0 - _m2 "
"d - - 0 - _m3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooThresholdFunction",2083,G__RooComplexPDF_901_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooThresholdFunction), -1, 0, 2, 1, 1, 0, 
"u 'RooThresholdFunction' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_901_0_6, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooThresholdFunction::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_901_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooThresholdFunction::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_901_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooThresholdFunction::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_901_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooThresholdFunction::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_901_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_901_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooThresholdFunction::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_901_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooThresholdFunction::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_901_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooThresholdFunction::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_901_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooThresholdFunction::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooThresholdFunction", 2209, G__RooComplexPDF_901_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooDalitzDelaunay(void) {
   /* RooDalitzDelaunay */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzDelaunay));
   G__memfunc_setup("RooDalitzDelaunay",1739,G__RooComplexPDF_902_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzDelaunay), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooDalitzDelaunay",1739,G__RooComplexPDF_902_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzDelaunay), -1, 0, 9, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _m12 u 'RooAbsReal' - 1 - _m23 "
"U 'TGraph2D' - 0 - _graph d - - 0 - _mM "
"d - - 0 - _m1 d - - 0 - _m2 "
"d - - 0 - _m3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooDalitzDelaunay",1739,G__RooComplexPDF_902_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzDelaunay), -1, 0, 2, 1, 1, 0, 
"u 'RooDalitzDelaunay' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAnalyticalIntegral",2168,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'RooArgSet' - 1 - allVars u 'RooArgSet' - 1 - analVars "
"C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegral",1880,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_902_0_8, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooDalitzDelaunay::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_902_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzDelaunay::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_902_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooDalitzDelaunay::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_902_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooDalitzDelaunay::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_902_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_902_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzDelaunay::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_902_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooDalitzDelaunay::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_902_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzDelaunay::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_902_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooDalitzDelaunay::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooDalitzDelaunay", 1865, G__RooComplexPDF_902_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooDalitzAnalysisCPV(void) {
   /* RooDalitzAnalysisCPV */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysisCPV));
   G__memfunc_setup("RooDalitzAnalysisCPV",1989,G__RooComplexPDF_904_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysisCPV), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooDalitzAnalysisCPV",1989,G__RooComplexPDF_904_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysisCPV), -1, 0, 40, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _mass_AB u 'RooAbsReal' - 1 - _mass_BC "
"u 'RooAbsCategory' - 1 - _channel u 'RooAbsReal' - 1 - _mass_1 "
"u 'RooAbsReal' - 1 - _width_1 u 'RooAbsReal' - 1 - _mass_2 "
"u 'RooAbsReal' - 1 - _width_2 u 'RooAbsReal' - 1 - _mass_3 "
"u 'RooAbsReal' - 1 - _width_3 u 'RooAbsReal' - 1 - _mass_4 "
"u 'RooAbsReal' - 1 - _width_4 u 'RooAbsReal' - 1 - _mass_5 "
"u 'RooAbsReal' - 1 - _width_5 u 'RooAbsReal' - 1 - _mass_6 "
"u 'RooAbsReal' - 1 - _width_6 u 'RooAbsReal' - 1 - _mass_7 "
"u 'RooAbsReal' - 1 - _width_7 u 'RooAbsReal' - 1 - _amp_1 "
"u 'RooAbsReal' - 1 - _phase_1 u 'RooAbsReal' - 1 - _amp_2 "
"u 'RooAbsReal' - 1 - _phase_2 u 'RooAbsReal' - 1 - _amp_3 "
"u 'RooAbsReal' - 1 - _phase_3 u 'RooAbsReal' - 1 - _amp_4 "
"u 'RooAbsReal' - 1 - _phase_4 u 'RooAbsReal' - 1 - _amp_5 "
"u 'RooAbsReal' - 1 - _phase_5 u 'RooAbsReal' - 1 - _amp_6 "
"u 'RooAbsReal' - 1 - _phase_6 u 'RooAbsReal' - 1 - _amp_7 "
"u 'RooAbsReal' - 1 - _phase_7 u 'RooAbsReal' - 1 - _amp_8 "
"u 'RooAbsReal' - 1 - _phase_8 u 'DAI_CC_parameters' - 0 - _s_cc_parameters "
"i 'EFFICIENCY_FUNCTION' - 0 - _efficiency_function u 'DAI_PDG_constants' - 0 - _s_PDG "
"u 'DAI_Dalitz_Model_parameters' - 0 - _s_DM_pars u 'DAI_CacheIntegrators_2D' - 0 - _s_2D", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooDalitzAnalysisCPV",1989,G__RooComplexPDF_904_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzAnalysisCPV), -1, 0, 2, 1, 1, 0, 
"u 'RooDalitzAnalysisCPV' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAnalyticalIntegral",2168,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'RooArgSet' - 1 - allVars u 'RooArgSet' - 1 - analVars "
"C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegral",1880,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAsymmetry",1291,G__RooComplexPDF_904_0_7, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegralAndAsymmetry",3126,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__RooComplexPDFLN_pairlEdoublecOdoublegR), G__defined_typename("pair<Double_t,Double_t>"), 0, 2, 1, 2, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RooComplexPDF_904_0_10, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooDalitzAnalysisCPV::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_904_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzAnalysisCPV::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_904_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooDalitzAnalysisCPV::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_904_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooDalitzAnalysisCPV::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_904_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_904_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzAnalysisCPV::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_904_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooDalitzAnalysisCPV::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_904_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzAnalysisCPV::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_904_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooDalitzAnalysisCPV::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooDalitzAnalysisCPV", 2115, G__RooComplexPDF_904_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooDalitzGauss(void) {
   /* RooDalitzGauss */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzGauss));
   G__memfunc_setup("RooDalitzGauss",1435,G__RooComplexPDF_905_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzGauss), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooDalitzGauss",1435,G__RooComplexPDF_905_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzGauss), -1, 0, 15, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _m12 u 'RooAbsReal' - 1 - _m23 "
"u 'RooAbsReal' - 1 - _mean u 'RooAbsReal' - 1 - _sigma "
"u 'RooAbsReal' - 1 - _c1 u 'RooAbsReal' - 1 - _c2 "
"u 'RooAbsReal' - 1 - _c3 u 'RooAbsReal' - 1 - _c4 "
"i - - 0 - _comb d - - 0 - _m1 "
"d - - 0 - _m2 d - - 0 - _m3 "
"d - - 0 - _mM", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooDalitzGauss",1435,G__RooComplexPDF_905_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzGauss), -1, 0, 2, 1, 1, 0, 
"u 'RooDalitzGauss' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAnalyticalIntegral",2168,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'RooArgSet' - 1 - allVars u 'RooArgSet' - 1 - analVars "
"C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegral",1880,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_905_0_8, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooDalitzGauss::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_905_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzGauss::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_905_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooDalitzGauss::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_905_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooDalitzGauss::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_905_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_905_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzGauss::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_905_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooDalitzGauss::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_905_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzGauss::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_905_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooDalitzGauss::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooDalitzGauss", 1561, G__RooComplexPDF_905_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooDalitzRelativisticSpinBreitWigner(void) {
   /* RooDalitzRelativisticSpinBreitWigner */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzRelativisticSpinBreitWigner));
   G__memfunc_setup("RooDalitzRelativisticSpinBreitWigner",3719,G__RooComplexPDF_912_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzRelativisticSpinBreitWigner), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooDalitzRelativisticSpinBreitWigner",3719,G__RooComplexPDF_912_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzRelativisticSpinBreitWigner), -1, 0, 17, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _m12 u 'RooAbsReal' - 1 - _m23 "
"u 'RooAbsReal' - 1 - _mass_J u 'RooAbsReal' - 1 - _width_J "
"u 'RooAbsReal' - 1 - _c1 u 'RooAbsReal' - 1 - _c2 "
"u 'RooAbsReal' - 1 - _c3 u 'RooAbsReal' - 1 - _c4 "
"d - - 0 - _radius h - - 0 - _spin "
"i - - 0 - _comb d - - 0 - _m1 "
"d - - 0 - _m2 d - - 0 - _m3 "
"d - - 0 - _mM", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooDalitzRelativisticSpinBreitWigner",3719,G__RooComplexPDF_912_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzRelativisticSpinBreitWigner), -1, 0, 2, 1, 1, 0, 
"u 'RooDalitzRelativisticSpinBreitWigner' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("adaptiveSimpsonsAux",2008,G__RooComplexPDF_912_0_5, 100, -1, G__defined_typename("Double_t"), 0, 9, 1, 1, 8, 
"d - - 0 - x d - - 0 - a "
"d - - 0 - b d - - 0 - epsilon "
"d - - 0 - S d - - 0 - fa "
"d - - 0 - fb d - - 0 - fc "
"i - - 0 - bottom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("adaptiveSimpsons",1706,G__RooComplexPDF_912_0_6, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 1, 8, 
"d - - 0 - x d - - 0 - a "
"d - - 0 - b d - - 0 - epsilon "
"i - - 0 - maxRecursionDepth", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAnalyticalIntegral",2168,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'RooArgSet' - 1 - allVars u 'RooArgSet' - 1 - analVars "
"C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegral",1880,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("function",870,G__RooComplexPDF_912_0_9, 100, -1, -1, 0, 2, 1, 1, 8, 
"d - - 0 - x d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_912_0_11, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooDalitzRelativisticSpinBreitWigner::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_912_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzRelativisticSpinBreitWigner::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_912_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooDalitzRelativisticSpinBreitWigner::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_912_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooDalitzRelativisticSpinBreitWigner::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_912_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_912_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzRelativisticSpinBreitWigner::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_912_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooDalitzRelativisticSpinBreitWigner::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_912_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzRelativisticSpinBreitWigner::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_912_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooDalitzRelativisticSpinBreitWigner::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooDalitzRelativisticSpinBreitWigner", 3845, G__RooComplexPDF_912_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooDalitzHist(void) {
   /* RooDalitzHist */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzHist));
   G__memfunc_setup("RooDalitzHist",1328,G__RooComplexPDF_935_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzHist), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooDalitzHist",1328,G__RooComplexPDF_935_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzHist), -1, 0, 9, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _m12 u 'RooAbsReal' - 1 - _m23 "
"U 'TH2F' - 0 - _hist d - - 0 - _mM "
"d - - 0 - _m1 d - - 0 - _m2 "
"d - - 0 - _m3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooDalitzHist",1328,G__RooComplexPDF_935_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzHist), -1, 0, 2, 1, 1, 0, 
"u 'RooDalitzHist' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAnalyticalIntegral",2168,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'RooArgSet' - 1 - allVars u 'RooArgSet' - 1 - analVars "
"C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegral",1880,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_935_0_8, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooDalitzHist::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_935_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzHist::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_935_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooDalitzHist::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_935_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooDalitzHist::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_935_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_935_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzHist::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_935_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooDalitzHist::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_935_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzHist::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_935_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooDalitzHist::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooDalitzHist", 1454, G__RooComplexPDF_935_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooDalitzXsd(void) {
   /* RooDalitzXsd */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzXsd));
   G__memfunc_setup("RooDalitzXsd",1223,G__RooComplexPDF_936_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzXsd), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooDalitzXsd",1223,G__RooComplexPDF_936_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzXsd), -1, 0, 18, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _m12 u 'RooAbsReal' - 1 - _m23 "
"u 'RooAbsReal' - 1 - _mean1 u 'RooAbsReal' - 1 - _mean2 "
"u 'RooAbsReal' - 1 - _sigma1 u 'RooAbsReal' - 1 - _sigma2 "
"u 'RooAbsReal' - 1 - _border u 'RooAbsReal' - 1 - _c1 "
"u 'RooAbsReal' - 1 - _c2 u 'RooAbsReal' - 1 - _c3 "
"u 'RooAbsReal' - 1 - _c4 i - - 0 - _comb "
"d - - 0 - _m1 d - - 0 - _m2 "
"d - - 0 - _m3 d - - 0 - _mM", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooDalitzXsd",1223,G__RooComplexPDF_936_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzXsd), -1, 0, 2, 1, 1, 0, 
"u 'RooDalitzXsd' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAnalyticalIntegral",2168,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'RooArgSet' - 1 - allVars u 'RooArgSet' - 1 - analVars "
"C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegral",1880,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_936_0_8, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooDalitzXsd::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_936_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzXsd::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_936_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooDalitzXsd::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_936_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooDalitzXsd::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_936_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_936_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzXsd::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_936_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooDalitzXsd::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_936_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzXsd::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_936_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooDalitzXsd::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooDalitzXsd", 1349, G__RooComplexPDF_936_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooDalitzNovosibirsk(void) {
   /* RooDalitzNovosibirsk */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzNovosibirsk));
   G__memfunc_setup("RooDalitzNovosibirsk",2097,G__RooComplexPDF_937_0_1, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzNovosibirsk), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooDalitzNovosibirsk",2097,G__RooComplexPDF_937_0_2, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzNovosibirsk), -1, 0, 16, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _m12 u 'RooAbsReal' - 1 - _m23 "
"u 'RooAbsReal' - 1 - _mean u 'RooAbsReal' - 1 - _sigma "
"u 'RooAbsReal' - 1 - _tail u 'RooAbsReal' - 1 - _c1 "
"u 'RooAbsReal' - 1 - _c2 u 'RooAbsReal' - 1 - _c3 "
"u 'RooAbsReal' - 1 - _c4 i - - 0 - _comb "
"d - - 0 - _m1 d - - 0 - _m2 "
"d - - 0 - _m3 d - - 0 - _mM", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooDalitzNovosibirsk",2097,G__RooComplexPDF_937_0_3, 105, G__get_linked_tagnum(&G__RooComplexPDFLN_RooDalitzNovosibirsk), -1, 0, 2, 1, 1, 0, 
"u 'RooDalitzNovosibirsk' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RooComplexPDF_937_0_6, 85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooDalitzNovosibirsk::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RooComplexPDF_937_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzNovosibirsk::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RooComplexPDF_937_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooDalitzNovosibirsk::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RooComplexPDF_937_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooDalitzNovosibirsk::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RooComplexPDFLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RooComplexPDF_937_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RooComplexPDF_937_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzNovosibirsk::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RooComplexPDF_937_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooDalitzNovosibirsk::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RooComplexPDF_937_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooDalitzNovosibirsk::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RooComplexPDF_937_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooDalitzNovosibirsk::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooDalitzNovosibirsk", 2223, G__RooComplexPDF_937_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncRooComplexPDF() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalRooComplexPDF() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {
}

static void G__cpp_setup_func35() {
}

static void G__cpp_setup_func36() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcRooComplexPDF() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
  G__cpp_setup_func35();
  G__cpp_setup_func36();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__RooComplexPDFLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooPrintable = { "RooPrintable" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_pairlEdoublecOdoublegR = { "pair<double,double>" , 115 , -1 };
G__linked_taginfo G__RooComplexPDFLN_listlEdoublecOallocatorlEdoublegRsPgR = { "list<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_listlEstringcOallocatorlEstringgRsPgR = { "list<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooAbsArg = { "RooAbsArg" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooArgSet = { "RooArgSet" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooArgList = { "RooArgList" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR = { "set<string,less<string>,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooListProxy = { "RooListProxy" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooRealProxy = { "RooRealProxy" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR = { "map<string,string,less<string>,allocator<pair<const string,string> > >" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR = { "set<pair<RooAbsArg*,RooAbsArg*>,less<pair<RooAbsArg*,RooAbsArg*> >,allocator<pair<RooAbsArg*,RooAbsArg*> > >" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooAbsReal = { "RooAbsReal" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_dequelERooAbsCachemUcOallocatorlERooAbsCachemUgRsPgR = { "deque<RooAbsCache*,allocator<RooAbsCache*> >" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_maplERooAbsArgmUcOTRefArraymUcOlesslERooAbsArgmUgRcOallocatorlEpairlERooAbsArgmUsPconstcOTRefArraymUgRsPgRsPgR = { "map<RooAbsArg*,TRefArray*,less<RooAbsArg*>,allocator<pair<RooAbsArg* const,TRefArray*> > >" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR = { "vector<RooCurve*,allocator<RooCurve*> >" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RooCurve*,allocator<RooCurve*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooAbsPdf = { "RooAbsPdf" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooAbsCategory = { "RooAbsCategory" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR = { "map<string,TH1*,less<string>,allocator<pair<const string,TH1*> > >" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR = { "map<string,RooDataHist*,less<string>,allocator<pair<const string,RooDataHist*> > >" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR = { "map<string,RooDataSet*,less<string>,allocator<pair<const string,RooDataSet*> > >" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR = { "map<string,RooAbsData*,less<string>,allocator<pair<const string,RooAbsData*> > >" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR = { "list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> >" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR = { "pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > >" , 115 , -1 };
G__linked_taginfo G__RooComplexPDFLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR = { "map<const RooAbsArg*,pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > >,less<const RooAbsArg*>,allocator<pair<const RooAbsArg* const,pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > > > > >" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR = { "map<int,string,less<int>,allocator<pair<const int,string> > >" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR = { "vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_dequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgR = { "deque<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >,allocator<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> > > >" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR = { "stack<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >,deque<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >,allocator<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> > > > >" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR = { "map<string,basic_ostream<char,char_traits<char> >*,less<string>,allocator<pair<const string,basic_ostream<char,char_traits<char> >*> > >" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR = { "vector<RooNormSetCache,allocator<RooNormSetCache> >" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_reverse_iteratorlEvectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RooNormSetCache,allocator<RooNormSetCache> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR = { "vector<RooAbsCacheElement*,allocator<RooAbsCacheElement*> >" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_reverse_iteratorlEvectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RooAbsCacheElement*,allocator<RooAbsCacheElement*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooCategoryProxy = { "RooCategoryProxy" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooRelativisticSpinBreitWigner = { "RooRelativisticSpinBreitWigner" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSP = { "RooBreitWignerTwoBodyPHSP" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSPEvtGen = { "RooBreitWignerTwoBodyPHSPEvtGen" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooThreeBodyPhaseSpaceProjection = { "RooThreeBodyPhaseSpaceProjection" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooBifurStudentsTDistribution = { "RooBifurStudentsTDistribution" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooStudentsTDistribution = { "RooStudentsTDistribution" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooFlatte = { "RooFlatte" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooLASS = { "RooLASS" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooKPiMass = { "RooKPiMass" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooHelicityAngles = { "RooHelicityAngles" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_ACCEPTANCE_FUNCTION = { "ACCEPTANCE_FUNCTION" , 101 , -1 };
G__linked_taginfo G__RooComplexPDFLN_MHI_PDG_constants = { "MHI_PDG_constants" , 115 , -1 };
G__linked_taginfo G__RooComplexPDFLN_MHI_CacheIntegrators_4D = { "MHI_CacheIntegrators_4D" , 115 , -1 };
G__linked_taginfo G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegralgR = { "CacheIntegrator<MassHelicityAnglesNormCachedIntegral>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegralgR = { "CacheIntegrator<MassHelicityAnglesRealCachedIntegral>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegralgR = { "CacheIntegrator<MassHelicityAnglesImagCachedIntegral>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_MHI_CacheIntegrators_3D_phi_th1_th2 = { "MHI_CacheIntegrators_3D_phi_th1_th2" , 115 , -1 };
G__linked_taginfo G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegral_phi_th1_th2gR = { "CacheIntegrator<MassHelicityAnglesNormCachedIntegral_phi_th1_th2>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegral_phi_th1_th2gR = { "CacheIntegrator<MassHelicityAnglesRealCachedIntegral_phi_th1_th2>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegral_phi_th1_th2gR = { "CacheIntegrator<MassHelicityAnglesImagCachedIntegral_phi_th1_th2>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_MHI_CacheIntegrators_3D_m_th1_th2 = { "MHI_CacheIntegrators_3D_m_th1_th2" , 115 , -1 };
G__linked_taginfo G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegral_m_th1_th2gR = { "CacheIntegrator<MassHelicityAnglesNormCachedIntegral_m_th1_th2>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegral_m_th1_th2gR = { "CacheIntegrator<MassHelicityAnglesRealCachedIntegral_m_th1_th2>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegral_m_th1_th2gR = { "CacheIntegrator<MassHelicityAnglesImagCachedIntegral_m_th1_th2>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_MHI_CacheIntegrators_3D_m_phi_th2 = { "MHI_CacheIntegrators_3D_m_phi_th2" , 115 , -1 };
G__linked_taginfo G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegral_m_phi_th2gR = { "CacheIntegrator<MassHelicityAnglesNormCachedIntegral_m_phi_th2>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegral_m_phi_th2gR = { "CacheIntegrator<MassHelicityAnglesRealCachedIntegral_m_phi_th2>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegral_m_phi_th2gR = { "CacheIntegrator<MassHelicityAnglesImagCachedIntegral_m_phi_th2>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_MHI_CacheIntegrators_3D_m_phi_th1 = { "MHI_CacheIntegrators_3D_m_phi_th1" , 115 , -1 };
G__linked_taginfo G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegral_m_phi_th1gR = { "CacheIntegrator<MassHelicityAnglesNormCachedIntegral_m_phi_th1>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegral_m_phi_th1gR = { "CacheIntegrator<MassHelicityAnglesRealCachedIntegral_m_phi_th1>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegral_m_phi_th1gR = { "CacheIntegrator<MassHelicityAnglesImagCachedIntegral_m_phi_th1>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooMassHelicityAngles = { "RooMassHelicityAngles" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooVarianceGammaDistribution = { "RooVarianceGammaDistribution" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooDalitzPhaseSpaceAmplitude = { "RooDalitzPhaseSpaceAmplitude" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooDalitzCubicPolynomial = { "RooDalitzCubicPolynomial" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooDalitzCubicPolynomialSymmetric = { "RooDalitzCubicPolynomialSymmetric" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooTwoBodyThresholdFunction = { "RooTwoBodyThresholdFunction" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooMassHelicityAngles_TransformedBase = { "RooMassHelicityAngles_TransformedBase" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_MHI_CC_parameters = { "MHI_CC_parameters" , 115 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooMassHelicityAnglesCPV = { "RooMassHelicityAnglesCPV" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooCutPdf = { "RooCutPdf" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooChebychevCut = { "RooChebychevCut" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooCategoryPdf = { "RooCategoryPdf" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooFlatteAndNonRes = { "RooFlatteAndNonRes" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_KKInterferenceCacheIntegrators_4D = { "KKInterferenceCacheIntegrators_4D" , 115 , -1 };
G__linked_taginfo G__RooComplexPDFLN_CacheIntegratorlEKKInterferenceNormCachedIntegralgR = { "CacheIntegrator<KKInterferenceNormCachedIntegral>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_CacheIntegratorlEKKInterferenceRealCachedIntegralgR = { "CacheIntegrator<KKInterferenceRealCachedIntegral>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_CacheIntegratorlEKKInterferenceImagCachedIntegralgR = { "CacheIntegrator<KKInterferenceImagCachedIntegral>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooKKInterference = { "RooKKInterference" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooKKInterferenceNorm = { "RooKKInterferenceNorm" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooKKInterferencePositive = { "RooKKInterferencePositive" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_TGraph2D = { "TGraph2D" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_EFFICIENCY_FUNCTION = { "EFFICIENCY_FUNCTION" , 101 , -1 };
G__linked_taginfo G__RooComplexPDFLN_DAI_Dalitz_Model_parameters = { "DAI_Dalitz_Model_parameters" , 115 , -1 };
G__linked_taginfo G__RooComplexPDFLN_DAI_PDG_constants = { "DAI_PDG_constants" , 115 , -1 };
G__linked_taginfo G__RooComplexPDFLN_DAI_CacheIntegrators_2D = { "DAI_CacheIntegrators_2D" , 115 , -1 };
G__linked_taginfo G__RooComplexPDFLN_CacheIntegratorlEDalitzAnalysisNormCachedIntegralgR = { "CacheIntegrator<DalitzAnalysisNormCachedIntegral>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_CacheIntegratorlEDalitzAnalysisRealCachedIntegralgR = { "CacheIntegrator<DalitzAnalysisRealCachedIntegral>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_CacheIntegratorlEDalitzAnalysisImagCachedIntegralgR = { "CacheIntegrator<DalitzAnalysisImagCachedIntegral>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooDalitzAnalysis = { "RooDalitzAnalysis" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooThresholdFunction = { "RooThresholdFunction" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooDalitzDelaunay = { "RooDalitzDelaunay" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_DAI_CC_parameters = { "DAI_CC_parameters" , 115 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooDalitzAnalysisCPV = { "RooDalitzAnalysisCPV" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooDalitzGauss = { "RooDalitzGauss" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooDalitzRelativisticSpinBreitWigner = { "RooDalitzRelativisticSpinBreitWigner" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooDalitzHist = { "RooDalitzHist" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooDalitzXsd = { "RooDalitzXsd" , 99 , -1 };
G__linked_taginfo G__RooComplexPDFLN_RooDalitzNovosibirsk = { "RooDalitzNovosibirsk" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableRooComplexPDF() {
  G__RooComplexPDFLN_TClass.tagnum = -1 ;
  G__RooComplexPDFLN_TBuffer.tagnum = -1 ;
  G__RooComplexPDFLN_TMemberInspector.tagnum = -1 ;
  G__RooComplexPDFLN_TObject.tagnum = -1 ;
  G__RooComplexPDFLN_TNamed.tagnum = -1 ;
  G__RooComplexPDFLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__RooComplexPDFLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RooComplexPDFLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__RooComplexPDFLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RooComplexPDFLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__RooComplexPDFLN_RooPrintable.tagnum = -1 ;
  G__RooComplexPDFLN_pairlEdoublecOdoublegR.tagnum = -1 ;
  G__RooComplexPDFLN_listlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__RooComplexPDFLN_listlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__RooComplexPDFLN_RooAbsArg.tagnum = -1 ;
  G__RooComplexPDFLN_RooArgSet.tagnum = -1 ;
  G__RooComplexPDFLN_RooArgList.tagnum = -1 ;
  G__RooComplexPDFLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__RooComplexPDFLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__RooComplexPDFLN_RooListProxy.tagnum = -1 ;
  G__RooComplexPDFLN_RooRealProxy.tagnum = -1 ;
  G__RooComplexPDFLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G__RooComplexPDFLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR.tagnum = -1 ;
  G__RooComplexPDFLN_RooAbsReal.tagnum = -1 ;
  G__RooComplexPDFLN_dequelERooAbsCachemUcOallocatorlERooAbsCachemUgRsPgR.tagnum = -1 ;
  G__RooComplexPDFLN_maplERooAbsArgmUcOTRefArraymUcOlesslERooAbsArgmUgRcOallocatorlEpairlERooAbsArgmUsPconstcOTRefArraymUgRsPgRsPgR.tagnum = -1 ;
  G__RooComplexPDFLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__RooComplexPDFLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__RooComplexPDFLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__RooComplexPDFLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR.tagnum = -1 ;
  G__RooComplexPDFLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RooComplexPDFLN_RooAbsPdf.tagnum = -1 ;
  G__RooComplexPDFLN_RooAbsCategory.tagnum = -1 ;
  G__RooComplexPDFLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR.tagnum = -1 ;
  G__RooComplexPDFLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR.tagnum = -1 ;
  G__RooComplexPDFLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR.tagnum = -1 ;
  G__RooComplexPDFLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR.tagnum = -1 ;
  G__RooComplexPDFLN_TH2F.tagnum = -1 ;
  G__RooComplexPDFLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR.tagnum = -1 ;
  G__RooComplexPDFLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR.tagnum = -1 ;
  G__RooComplexPDFLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__RooComplexPDFLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR.tagnum = -1 ;
  G__RooComplexPDFLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR.tagnum = -1 ;
  G__RooComplexPDFLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RooComplexPDFLN_dequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgR.tagnum = -1 ;
  G__RooComplexPDFLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__RooComplexPDFLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR.tagnum = -1 ;
  G__RooComplexPDFLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR.tagnum = -1 ;
  G__RooComplexPDFLN_reverse_iteratorlEvectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RooComplexPDFLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR.tagnum = -1 ;
  G__RooComplexPDFLN_reverse_iteratorlEvectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RooComplexPDFLN_RooCategoryProxy.tagnum = -1 ;
  G__RooComplexPDFLN_RooRelativisticSpinBreitWigner.tagnum = -1 ;
  G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSP.tagnum = -1 ;
  G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSPEvtGen.tagnum = -1 ;
  G__RooComplexPDFLN_RooThreeBodyPhaseSpaceProjection.tagnum = -1 ;
  G__RooComplexPDFLN_RooBifurStudentsTDistribution.tagnum = -1 ;
  G__RooComplexPDFLN_RooStudentsTDistribution.tagnum = -1 ;
  G__RooComplexPDFLN_RooFlatte.tagnum = -1 ;
  G__RooComplexPDFLN_RooLASS.tagnum = -1 ;
  G__RooComplexPDFLN_RooKPiMass.tagnum = -1 ;
  G__RooComplexPDFLN_RooHelicityAngles.tagnum = -1 ;
  G__RooComplexPDFLN_ACCEPTANCE_FUNCTION.tagnum = -1 ;
  G__RooComplexPDFLN_MHI_PDG_constants.tagnum = -1 ;
  G__RooComplexPDFLN_MHI_CacheIntegrators_4D.tagnum = -1 ;
  G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegralgR.tagnum = -1 ;
  G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegralgR.tagnum = -1 ;
  G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegralgR.tagnum = -1 ;
  G__RooComplexPDFLN_MHI_CacheIntegrators_3D_phi_th1_th2.tagnum = -1 ;
  G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegral_phi_th1_th2gR.tagnum = -1 ;
  G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegral_phi_th1_th2gR.tagnum = -1 ;
  G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegral_phi_th1_th2gR.tagnum = -1 ;
  G__RooComplexPDFLN_MHI_CacheIntegrators_3D_m_th1_th2.tagnum = -1 ;
  G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegral_m_th1_th2gR.tagnum = -1 ;
  G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegral_m_th1_th2gR.tagnum = -1 ;
  G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegral_m_th1_th2gR.tagnum = -1 ;
  G__RooComplexPDFLN_MHI_CacheIntegrators_3D_m_phi_th2.tagnum = -1 ;
  G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegral_m_phi_th2gR.tagnum = -1 ;
  G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegral_m_phi_th2gR.tagnum = -1 ;
  G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegral_m_phi_th2gR.tagnum = -1 ;
  G__RooComplexPDFLN_MHI_CacheIntegrators_3D_m_phi_th1.tagnum = -1 ;
  G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegral_m_phi_th1gR.tagnum = -1 ;
  G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegral_m_phi_th1gR.tagnum = -1 ;
  G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegral_m_phi_th1gR.tagnum = -1 ;
  G__RooComplexPDFLN_RooMassHelicityAngles.tagnum = -1 ;
  G__RooComplexPDFLN_RooVarianceGammaDistribution.tagnum = -1 ;
  G__RooComplexPDFLN_RooDalitzPhaseSpaceAmplitude.tagnum = -1 ;
  G__RooComplexPDFLN_RooDalitzCubicPolynomial.tagnum = -1 ;
  G__RooComplexPDFLN_RooDalitzCubicPolynomialSymmetric.tagnum = -1 ;
  G__RooComplexPDFLN_RooTwoBodyThresholdFunction.tagnum = -1 ;
  G__RooComplexPDFLN_RooMassHelicityAngles_TransformedBase.tagnum = -1 ;
  G__RooComplexPDFLN_MHI_CC_parameters.tagnum = -1 ;
  G__RooComplexPDFLN_RooMassHelicityAnglesCPV.tagnum = -1 ;
  G__RooComplexPDFLN_RooCutPdf.tagnum = -1 ;
  G__RooComplexPDFLN_RooChebychevCut.tagnum = -1 ;
  G__RooComplexPDFLN_RooCategoryPdf.tagnum = -1 ;
  G__RooComplexPDFLN_RooFlatteAndNonRes.tagnum = -1 ;
  G__RooComplexPDFLN_KKInterferenceCacheIntegrators_4D.tagnum = -1 ;
  G__RooComplexPDFLN_CacheIntegratorlEKKInterferenceNormCachedIntegralgR.tagnum = -1 ;
  G__RooComplexPDFLN_CacheIntegratorlEKKInterferenceRealCachedIntegralgR.tagnum = -1 ;
  G__RooComplexPDFLN_CacheIntegratorlEKKInterferenceImagCachedIntegralgR.tagnum = -1 ;
  G__RooComplexPDFLN_RooKKInterference.tagnum = -1 ;
  G__RooComplexPDFLN_RooKKInterferenceNorm.tagnum = -1 ;
  G__RooComplexPDFLN_RooKKInterferencePositive.tagnum = -1 ;
  G__RooComplexPDFLN_TGraph2D.tagnum = -1 ;
  G__RooComplexPDFLN_EFFICIENCY_FUNCTION.tagnum = -1 ;
  G__RooComplexPDFLN_DAI_Dalitz_Model_parameters.tagnum = -1 ;
  G__RooComplexPDFLN_DAI_PDG_constants.tagnum = -1 ;
  G__RooComplexPDFLN_DAI_CacheIntegrators_2D.tagnum = -1 ;
  G__RooComplexPDFLN_CacheIntegratorlEDalitzAnalysisNormCachedIntegralgR.tagnum = -1 ;
  G__RooComplexPDFLN_CacheIntegratorlEDalitzAnalysisRealCachedIntegralgR.tagnum = -1 ;
  G__RooComplexPDFLN_CacheIntegratorlEDalitzAnalysisImagCachedIntegralgR.tagnum = -1 ;
  G__RooComplexPDFLN_RooDalitzAnalysis.tagnum = -1 ;
  G__RooComplexPDFLN_RooThresholdFunction.tagnum = -1 ;
  G__RooComplexPDFLN_RooDalitzDelaunay.tagnum = -1 ;
  G__RooComplexPDFLN_DAI_CC_parameters.tagnum = -1 ;
  G__RooComplexPDFLN_RooDalitzAnalysisCPV.tagnum = -1 ;
  G__RooComplexPDFLN_RooDalitzGauss.tagnum = -1 ;
  G__RooComplexPDFLN_RooDalitzRelativisticSpinBreitWigner.tagnum = -1 ;
  G__RooComplexPDFLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__RooComplexPDFLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__RooComplexPDFLN_RooDalitzHist.tagnum = -1 ;
  G__RooComplexPDFLN_RooDalitzXsd.tagnum = -1 ;
  G__RooComplexPDFLN_RooDalitzNovosibirsk.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableRooComplexPDF() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_TClass);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_TObject);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_TNamed);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooPrintable);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_pairlEdoublecOdoublegR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_listlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_listlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooAbsArg);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooArgSet);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooArgList);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooListProxy);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooRealProxy);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooAbsReal);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_dequelERooAbsCachemUcOallocatorlERooAbsCachemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_maplERooAbsArgmUcOTRefArraymUcOlesslERooAbsArgmUgRcOallocatorlEpairlERooAbsArgmUsPconstcOTRefArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooAbsPdf);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooAbsCategory);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_TH2F);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_dequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_reverse_iteratorlEvectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_reverse_iteratorlEvectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooCategoryProxy);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooRelativisticSpinBreitWigner),sizeof(RooRelativisticSpinBreitWigner),-1,63232,"Your description goes here...",G__setup_memvarRooRelativisticSpinBreitWigner,G__setup_memfuncRooRelativisticSpinBreitWigner);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSP),sizeof(RooBreitWignerTwoBodyPHSP),-1,63232,"Your description goes here...",G__setup_memvarRooBreitWignerTwoBodyPHSP,G__setup_memfuncRooBreitWignerTwoBodyPHSP);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooBreitWignerTwoBodyPHSPEvtGen),sizeof(RooBreitWignerTwoBodyPHSPEvtGen),-1,63232,"Your description goes here...",G__setup_memvarRooBreitWignerTwoBodyPHSPEvtGen,G__setup_memfuncRooBreitWignerTwoBodyPHSPEvtGen);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooThreeBodyPhaseSpaceProjection),sizeof(RooThreeBodyPhaseSpaceProjection),-1,63232,"Your description goes here...",G__setup_memvarRooThreeBodyPhaseSpaceProjection,G__setup_memfuncRooThreeBodyPhaseSpaceProjection);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooBifurStudentsTDistribution),sizeof(RooBifurStudentsTDistribution),-1,63232,"Your description goes here...",G__setup_memvarRooBifurStudentsTDistribution,G__setup_memfuncRooBifurStudentsTDistribution);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooStudentsTDistribution),sizeof(RooStudentsTDistribution),-1,63232,"Your description goes here...",G__setup_memvarRooStudentsTDistribution,G__setup_memfuncRooStudentsTDistribution);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooFlatte),sizeof(RooFlatte),-1,63232,"Your description goes here...",G__setup_memvarRooFlatte,G__setup_memfuncRooFlatte);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooLASS),sizeof(RooLASS),-1,63232,"Your description goes here...",G__setup_memvarRooLASS,G__setup_memfuncRooLASS);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooKPiMass),sizeof(RooKPiMass),-1,63232,"Your description goes here...",G__setup_memvarRooKPiMass,G__setup_memfuncRooKPiMass);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooHelicityAngles),sizeof(RooHelicityAngles),-1,63232,"Your description goes here...",G__setup_memvarRooHelicityAngles,G__setup_memfuncRooHelicityAngles);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_ACCEPTANCE_FUNCTION);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_MHI_PDG_constants);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_MHI_CacheIntegrators_4D);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegralgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegralgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegralgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_MHI_CacheIntegrators_3D_phi_th1_th2);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegral_phi_th1_th2gR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegral_phi_th1_th2gR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegral_phi_th1_th2gR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_MHI_CacheIntegrators_3D_m_th1_th2);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegral_m_th1_th2gR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegral_m_th1_th2gR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegral_m_th1_th2gR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_MHI_CacheIntegrators_3D_m_phi_th2);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegral_m_phi_th2gR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegral_m_phi_th2gR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegral_m_phi_th2gR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_MHI_CacheIntegrators_3D_m_phi_th1);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesNormCachedIntegral_m_phi_th1gR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesRealCachedIntegral_m_phi_th1gR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_CacheIntegratorlEMassHelicityAnglesImagCachedIntegral_m_phi_th1gR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooMassHelicityAngles),sizeof(RooMassHelicityAngles),-1,63232,"Your description goes here...",G__setup_memvarRooMassHelicityAngles,G__setup_memfuncRooMassHelicityAngles);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooVarianceGammaDistribution),sizeof(RooVarianceGammaDistribution),-1,63232,"Your description goes here...",G__setup_memvarRooVarianceGammaDistribution,G__setup_memfuncRooVarianceGammaDistribution);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooDalitzPhaseSpaceAmplitude),sizeof(RooDalitzPhaseSpaceAmplitude),-1,63232,"Your description goes here...",G__setup_memvarRooDalitzPhaseSpaceAmplitude,G__setup_memfuncRooDalitzPhaseSpaceAmplitude);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooDalitzCubicPolynomial),sizeof(RooDalitzCubicPolynomial),-1,63232,"Your description goes here...",G__setup_memvarRooDalitzCubicPolynomial,G__setup_memfuncRooDalitzCubicPolynomial);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooDalitzCubicPolynomialSymmetric),sizeof(RooDalitzCubicPolynomialSymmetric),-1,63232,"Your description goes here...",G__setup_memvarRooDalitzCubicPolynomialSymmetric,G__setup_memfuncRooDalitzCubicPolynomialSymmetric);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooTwoBodyThresholdFunction),sizeof(RooTwoBodyThresholdFunction),-1,63232,"Your description goes here...",G__setup_memvarRooTwoBodyThresholdFunction,G__setup_memfuncRooTwoBodyThresholdFunction);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooMassHelicityAngles_TransformedBase),sizeof(RooMassHelicityAngles_TransformedBase),-1,63232,"Your description goes here...",G__setup_memvarRooMassHelicityAngles_TransformedBase,G__setup_memfuncRooMassHelicityAngles_TransformedBase);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_MHI_CC_parameters);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooMassHelicityAnglesCPV),sizeof(RooMassHelicityAnglesCPV),-1,63232,"Your description goes here...",G__setup_memvarRooMassHelicityAnglesCPV,G__setup_memfuncRooMassHelicityAnglesCPV);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooCutPdf),sizeof(RooCutPdf),-1,63232,"Your description goes here...",G__setup_memvarRooCutPdf,G__setup_memfuncRooCutPdf);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooChebychevCut),sizeof(RooChebychevCut),-1,63232,"Chebychev polynomial PDF with Cut",G__setup_memvarRooChebychevCut,G__setup_memfuncRooChebychevCut);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooCategoryPdf),sizeof(RooCategoryPdf),-1,63232,"Your description goes here...",G__setup_memvarRooCategoryPdf,G__setup_memfuncRooCategoryPdf);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooFlatteAndNonRes),sizeof(RooFlatteAndNonRes),-1,63232,"Your description goes here...",G__setup_memvarRooFlatteAndNonRes,G__setup_memfuncRooFlatteAndNonRes);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_KKInterferenceCacheIntegrators_4D);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_CacheIntegratorlEKKInterferenceNormCachedIntegralgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_CacheIntegratorlEKKInterferenceRealCachedIntegralgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_CacheIntegratorlEKKInterferenceImagCachedIntegralgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooKKInterference),sizeof(RooKKInterference),-1,63232,"Your description goes here...",G__setup_memvarRooKKInterference,G__setup_memfuncRooKKInterference);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooKKInterferenceNorm),sizeof(RooKKInterferenceNorm),-1,63232,"Your description goes here...",G__setup_memvarRooKKInterferenceNorm,G__setup_memfuncRooKKInterferenceNorm);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooKKInterferencePositive),sizeof(RooKKInterferencePositive),-1,63232,"Your description goes here...",G__setup_memvarRooKKInterferencePositive,G__setup_memfuncRooKKInterferencePositive);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_TGraph2D);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_EFFICIENCY_FUNCTION);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_DAI_Dalitz_Model_parameters);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_DAI_PDG_constants);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_DAI_CacheIntegrators_2D);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_CacheIntegratorlEDalitzAnalysisNormCachedIntegralgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_CacheIntegratorlEDalitzAnalysisRealCachedIntegralgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_CacheIntegratorlEDalitzAnalysisImagCachedIntegralgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooDalitzAnalysis),sizeof(RooDalitzAnalysis),-1,63232,"Your description goes here...",G__setup_memvarRooDalitzAnalysis,G__setup_memfuncRooDalitzAnalysis);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooThresholdFunction),sizeof(RooThresholdFunction),-1,63232,"Your description goes here...",G__setup_memvarRooThresholdFunction,G__setup_memfuncRooThresholdFunction);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooDalitzDelaunay),sizeof(RooDalitzDelaunay),-1,63232,"Your description goes here...",G__setup_memvarRooDalitzDelaunay,G__setup_memfuncRooDalitzDelaunay);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_DAI_CC_parameters);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooDalitzAnalysisCPV),sizeof(RooDalitzAnalysisCPV),-1,63232,"Your description goes here...",G__setup_memvarRooDalitzAnalysisCPV,G__setup_memfuncRooDalitzAnalysisCPV);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooDalitzGauss),sizeof(RooDalitzGauss),-1,63232,"Your description goes here...",G__setup_memvarRooDalitzGauss,G__setup_memfuncRooDalitzGauss);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooDalitzRelativisticSpinBreitWigner),sizeof(RooDalitzRelativisticSpinBreitWigner),-1,63232,"Your description goes here...",G__setup_memvarRooDalitzRelativisticSpinBreitWigner,G__setup_memfuncRooDalitzRelativisticSpinBreitWigner);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_TMatrixTBaselEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooDalitzHist),sizeof(RooDalitzHist),-1,63232,"Your description goes here...",G__setup_memvarRooDalitzHist,G__setup_memfuncRooDalitzHist);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooDalitzXsd),sizeof(RooDalitzXsd),-1,63232,"Your description goes here...",G__setup_memvarRooDalitzXsd,G__setup_memfuncRooDalitzXsd);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RooComplexPDFLN_RooDalitzNovosibirsk),sizeof(RooDalitzNovosibirsk),-1,63232,"Your description goes here...",G__setup_memvarRooDalitzNovosibirsk,G__setup_memfuncRooDalitzNovosibirsk);
}
extern "C" void G__cpp_setupRooComplexPDF(void) {
  G__check_setup_version(30051515,"G__cpp_setupRooComplexPDF()");
  G__set_cpp_environmentRooComplexPDF();
  G__cpp_setup_tagtableRooComplexPDF();

  G__cpp_setup_inheritanceRooComplexPDF();

  G__cpp_setup_typetableRooComplexPDF();

  G__cpp_setup_memvarRooComplexPDF();

  G__cpp_setup_memfuncRooComplexPDF();
  G__cpp_setup_globalRooComplexPDF();
  G__cpp_setup_funcRooComplexPDF();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncRooComplexPDF();
  return;
}
class G__cpp_setup_initRooComplexPDF {
  public:
    G__cpp_setup_initRooComplexPDF() { G__add_setup_func("RooComplexPDF",(G__incsetup)(&G__cpp_setupRooComplexPDF)); G__call_setup_funcs(); }
   ~G__cpp_setup_initRooComplexPDF() { G__remove_setup_func("RooComplexPDF"); }
};
G__cpp_setup_initRooComplexPDF G__cpp_setup_initializerRooComplexPDF;

